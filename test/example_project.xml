<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP16 Patch 4 for Safety V1.6.1" creationDateTime="2022-02-01T19:12:31.3073643" />
  <contentHeader name="SixAxisBoxPicker_Task.project" modificationDateTime="2022-02-01T19:06:40.3294124">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="CompiledLibraryCompatibilityVersion" type="string">CODESYS V3.5 SP16 Patch 4 for Safety V1.6.1</property>
          <property name="Project" type="string">SixAxisBoxPicker_Task</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="E_mcMotionFbType">
        <baseType>
          <enum>
            <values>
              <value name="moveCrcAbs" value="0" />
              <value name="moveCrcRel" />
              <value name="moveDirAbs" />
              <value name="moveDirRel" />
              <value name="moveLinAbs" />
              <value name="moveLinRel" />
              <value name="TotalNumberOfEnums" />
            </values>
          </enum>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/enumvaluedocumentation" handleUnknown="implementation">
            <EnumValueDocumentation>
              <EnumValue>
                <Name>TotalNumberOfEnums</Name>
                <Documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> enums have to begin from zero and be sequential for this to work</xhtml>
                </Documentation>
              </EnumValue>
            </EnumValueDocumentation>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
            <Attributes>
              <Attribute Name="qualified_only" Value="" />
              <Attribute Name="strict" Value="" />
              <Attribute Name="to_string" Value="" />
            </Attributes>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">{attribute 'qualified_only'}
{attribute 'strict'}
{attribute 'to_string'}
TYPE
  E_mcMotionFbType :
  (
    moveCrcAbs := 0,
    moveCrcRel,
    moveDirAbs,
    moveDirRel,
    moveLinAbs,
    moveLinRel,
    // enums have to begin from zero and be sequential for this to work
    TotalNumberOfEnums
  );
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>294a1bab-2869-478d-a236-ea3fbb8e5ed4</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_haltParams">
        <baseType>
          <struct>
            <variable name="lrDec">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrJrk">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrAccFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="lrJrkFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="smcCrdSys">
              <type>
                <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
              </type>
              <initialValue>
                <simpleValue value="SM3_Robotics.SMC_COORD_SYSTEM.ACS" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> for logging halted position</xhtml>
              </documentation>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  ST_haltParams :
  STRUCT
    lrDec     : LREAL;
    lrJrk     : LREAL;
    lrAccFctr : LREAL                         := 1;
    lrJrkFctr : LREAL                         := 1;
    smcCrdSys : SM3_Robotics.SMC_COORD_SYSTEM := SM3_Robotics.SMC_COORD_SYSTEM.ACS; // for logging halted position
  END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>9e8adc96-1057-4dab-8b67-ed5d85cc2666</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_mcMoveParams">
        <baseType>
          <struct>
            <variable name="eMcMotionFbType">
              <type>
                <derived name="E_mcMotionFbType" />
              </type>
            </variable>
            <variable name="stMoveDirParams">
              <type>
                <derived name="ST_moveDirParams" />
              </type>
            </variable>
            <variable name="stMoveCrcParams">
              <type>
                <derived name="ST_moveCrcParams" />
              </type>
            </variable>
            <variable name="stMoveLinParams">
              <type>
                <derived name="ST_moveLinParams" />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  ST_mcMoveParams :
  STRUCT
    eMcMotionFbType : E_mcMotionFbType;
    stMoveDirParams : ST_moveDirParams;
    stMoveCrcParams : ST_moveCrcParams;
    stMoveLinParams : ST_moveLinParams;
  END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7cad8640-1564-40ab-9401-62c9c7ad8b9f</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_moveCrcParams">
        <baseType>
          <struct>
            <variable name="smcCrcMod">
              <type>
                <derived name="SM3_Robotics.SMC_CIRC_MODE" />
              </type>
            </variable>
            <variable name="smcPosRef_auxPt">
              <type>
                <derived name="SM3_Robotics.SMC_POS_REF" />
              </type>
            </variable>
            <variable name="smcPosRef_endPt">
              <type>
                <derived name="SM3_Robotics.SMC_POS_REF" />
              </type>
            </variable>
            <variable name="mcCrcPathChoice">
              <type>
                <derived name="SM3_Robotics.MC_CIRC_PATHCHOICE" />
              </type>
            </variable>
            <variable name="lrVel">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrAcc">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrDec">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrJrk">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="smcCrdSys">
              <type>
                <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
              </type>
            </variable>
            <variable name="mcBufMode">
              <type>
                <derived name="SM3_Common.MC_BUFFER_MODE" />
              </type>
              <initialValue>
                <simpleValue value="SM3_Common.MC_BUFFER_MODE.Aborting" />
              </initialValue>
            </variable>
            <variable name="mcTrnMode">
              <type>
                <derived name="SM3_Robotics.MC_TRANSITION_MODE" />
              </type>
              <initialValue>
                <simpleValue value="SM3_Robotics.MC_TRANSITION_MODE.TMNone" />
              </initialValue>
            </variable>
            <variable name="arrTrnPrm">
              <type>
                <array>
                  <dimension lower="0" upper="(SMC_RCNST.MAX_TRANS_PARAMS - 1)" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="smcOrnMod">
              <type>
                <derived name="SM3_Robotics.SMC_ORIENTATION_MODE" />
              </type>
            </variable>
            <variable name="lrVelFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="lrAccFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="lrJrkFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  ST_moveCrcParams :
  STRUCT
    smcCrcMod       : SM3_Robotics.SMC_CIRC_MODE;
    smcPosRef_auxPt : SM3_Robotics.SMC_POS_REF;
    smcPosRef_endPt : SM3_Robotics.SMC_POS_REF;
    mcCrcPathChoice : SM3_Robotics.MC_CIRC_PATHCHOICE;
    lrVel           : LREAL;
    lrAcc           : LREAL;
    lrDec           : LREAL;
    lrJrk           : LREAL;
    smcCrdSys       : SM3_Robotics.SMC_COORD_SYSTEM;
    mcBufMode       : SM3_Common.MC_BUFFER_MODE       := SM3_Common.MC_BUFFER_MODE.Aborting;
    mcTrnMode       : SM3_Robotics.MC_TRANSITION_MODE := SM3_Robotics.MC_TRANSITION_MODE.TMNone;
    arrTrnPrm       : ARRAY[0..(SMC_RCNST.MAX_TRANS_PARAMS - 1)] OF LREAL;
    smcOrnMod       : SM3_Robotics.SMC_ORIENTATION_MODE;
    lrVelFctr       : LREAL := 1;
    lrAccFctr       : LREAL := 1;
    lrJrkFctr       : LREAL := 1;
  END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1e918723-96e8-47b8-bdba-3ced8b04d23a</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_moveDirParams">
        <baseType>
          <struct>
            <variable name="smcPosRef">
              <type>
                <derived name="SM3_Robotics.SMC_POS_REF" />
              </type>
            </variable>
            <variable name="smcPtpTyp">
              <type>
                <derived name="SM3_Robotics.SMC_PTP_MOVEMENT_TYPE" />
              </type>
            </variable>
            <variable name="smcCrdSys">
              <type>
                <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
              </type>
            </variable>
            <variable name="mcBufMode">
              <type>
                <derived name="SM3_Common.MC_BUFFER_MODE" />
              </type>
              <initialValue>
                <simpleValue value="SM3_Common.MC_BUFFER_MODE.Aborting" />
              </initialValue>
            </variable>
            <variable name="mcTrnMode">
              <type>
                <derived name="SM3_Robotics.MC_TRANSITION_MODE" />
              </type>
              <initialValue>
                <simpleValue value="SM3_Robotics.MC_TRANSITION_MODE.TMNone" />
              </initialValue>
            </variable>
            <variable name="arrTrnPrm">
              <type>
                <array>
                  <dimension lower="0" upper="(SMC_RCNST.MAX_TRANS_PARAMS - 1)" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="lrVelFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="lrAccFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="lrJrkFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  ST_moveDirParams :
  STRUCT
    smcPosRef : SM3_Robotics.SMC_POS_REF;
    smcPtpTyp : SM3_Robotics.SMC_PTP_MOVEMENT_TYPE;
    smcCrdSys : SM3_Robotics.SMC_COORD_SYSTEM;
    mcBufMode : SM3_Common.MC_BUFFER_MODE       := SM3_Common.MC_BUFFER_MODE.Aborting;
    mcTrnMode : SM3_Robotics.MC_TRANSITION_MODE := SM3_Robotics.MC_TRANSITION_MODE.TMNone;
    arrTrnPrm : ARRAY[0..(SMC_RCNST.MAX_TRANS_PARAMS - 1)] OF LREAL;
    lrVelFctr : LREAL := 1;
    lrAccFctr : LREAL := 1;
    lrJrkFctr : LREAL := 1;
  END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>69ee6caf-0372-460e-8169-16a69e452b74</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_moveLinParams">
        <baseType>
          <struct>
            <variable name="smcPosRef">
              <type>
                <derived name="SM3_Robotics.SMC_POS_REF" />
              </type>
            </variable>
            <variable name="lrVel">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrAcc">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrDec">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="lrJrk">
              <type>
                <LREAL />
              </type>
            </variable>
            <variable name="smcCrdSys">
              <type>
                <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
              </type>
            </variable>
            <variable name="mcBufMode">
              <type>
                <derived name="SM3_Common.MC_BUFFER_MODE" />
              </type>
              <initialValue>
                <simpleValue value="SM3_Common.MC_BUFFER_MODE.Aborting" />
              </initialValue>
            </variable>
            <variable name="mcTrnMode">
              <type>
                <derived name="SM3_Robotics.MC_TRANSITION_MODE" />
              </type>
              <initialValue>
                <simpleValue value="SM3_Robotics.MC_TRANSITION_MODE.TMNone" />
              </initialValue>
            </variable>
            <variable name="arrTrnPrm">
              <type>
                <array>
                  <dimension lower="0" upper="(SMC_RCNST.MAX_TRANS_PARAMS - 1)" />
                  <baseType>
                    <LREAL />
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="smcOrnMod">
              <type>
                <derived name="SM3_Robotics.SMC_ORIENTATION_MODE" />
              </type>
            </variable>
            <variable name="lrVelFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="lrAccFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
            <variable name="lrJrkFctr">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="1" />
              </initialValue>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  ST_moveLinParams :
  STRUCT
    smcPosRef : SM3_Robotics.SMC_POS_REF;
    lrVel     : LREAL;
    lrAcc     : LREAL;
    lrDec     : LREAL;
    lrJrk     : LREAL;
    smcCrdSys : SM3_Robotics.SMC_COORD_SYSTEM;
    mcBufMode : SM3_Common.MC_BUFFER_MODE       := SM3_Common.MC_BUFFER_MODE.Aborting;
    mcTrnMode : SM3_Robotics.MC_TRANSITION_MODE := SM3_Robotics.MC_TRANSITION_MODE.TMNone;
    arrTrnPrm : ARRAY[0..(SMC_RCNST.MAX_TRANS_PARAMS - 1)] OF LREAL;
    smcOrnMod : SM3_Robotics.SMC_ORIENTATION_MODE;
    lrVelFctr : LREAL := 1;
    lrAccFctr : LREAL := 1;
    lrJrkFctr : LREAL := 1;
  END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>77a2e507-b66e-4687-ad62-86007391288c</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="ST_methConfig">
        <baseType>
          <struct>
            <variable name="xGroupPowerOff">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xGroupPowerOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xGroupEnable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xGroupDisable">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xGroupHalt">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xMoveCrcAbs">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xMoveDirAbs">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xCloseGripper">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="xOpenGripper">
              <type>
                <BOOL />
              </type>
            </variable>
          </struct>
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  ST_methConfig :
  STRUCT
    xGroupPowerOff : BOOL;
    xGroupPowerOn  : BOOL;
    xGroupEnable   : BOOL;
    xGroupDisable  : BOOL;
    xGroupHalt     : BOOL;
    xMoveCrcAbs    : BOOL;
    xMoveDirAbs    : BOOL;
    xCloseGripper  : BOOL;
    xOpenGripper   : BOOL;
  END_STRUCT
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>995704e5-cbcf-40bb-b9b8-58540a078467</ObjectId>
          </data>
        </addData>
      </dataType>
      <dataType name="T_MaxString">
        <baseType>
          <string length="1000" />
        </baseType>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  T_MaxString : STRING(1000);
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6da32125-b8c2-452a-aeac-fc9db862e89c</ObjectId>
          </data>
        </addData>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="F_getCommaDelimitedName" pouType="function">
        <interface>
          <returnType>
            <string />
          </returnType>
          <inOutVars>
            <variable name="sCommaDelimitedNames">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> comma delimited string</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION F_getCommaDelimitedName : STRING
VAR_IN_OUT
  sCommaDelimitedNames : STRING; // comma delimited string
END_VAR
VAR
  sComma    : STRING := ',';
  iSplitPos : INT;

  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </inOutVars>
          <localVars>
            <variable name="sComma">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="','" />
              </initialValue>
            </variable>
            <variable name="iSplitPos">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="fbLogAdd">
              <type>
                <derived name="FB_logAdd" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Name>pCmpName</Name>
                      <Value>ADR('F_getCommaDelimitedName')</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION F_getCommaDelimitedName : STRING
VAR_IN_OUT
  sCommaDelimitedNames : STRING; // comma delimited string
END_VAR
VAR
  sComma    : STRING := ',';
  iSplitPos : INT;

  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Standard.LEN(sCommaDelimitedNames) &gt; 0 THEN
  // returns zero if comma not found
  iSplitPos := Standard.FIND(sCommaDelimitedNames, sComma);

  // copy string and set position to last character if comma not found
  IF iSplitPos = 0 THEN
    F_getCommaDelimitedName := sCommaDelimitedNames;
    iSplitPos := Standard.LEN(sCommaDelimitedNames);
  ELSE
    // extract name without comma
    F_getCommaDelimitedName := Standard.LEFT(sCommaDelimitedNames, (iSplitPos - 1));
  END_IF

  // delete name including comma
  sCommaDelimitedNames := Standard.DELETE(sCommaDelimitedNames, iSplitPos, 1);
ELSE
  fbLogAdd.METH_appendLog('Axis names string empty! Was it comma delimited? Were there too few axis names?');
  fbLogAdd.METH_printAppendedLogs();
  F_getCommaDelimitedName := '$00';
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION F_getCommaDelimitedName : STRING
VAR_IN_OUT
  sCommaDelimitedNames : STRING; // comma delimited string
END_VAR
VAR
  sComma    : STRING := ',';
  iSplitPos : INT;

  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b7f7aa64-6f9a-4185-b6c4-c0e694ab6bd0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_logAdd" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="sCmpName">
              <type>
                <string />
              </type>
            </variable>
            <variable name="sCurrLog">
              <type>
                <derived name="T_MaxString" />
              </type>
            </variable>
            <variable name="sPrevName">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'$00'" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> to check for duplicate states or log messages</xhtml>
              </documentation>
            </variable>
            <variable name="sPrevLog">
              <type>
                <derived name="T_MaxString" />
              </type>
              <initialValue>
                <simpleValue value="'$00'" />
              </initialValue>
            </variable>
            <variable name="sNewline">
              <type>
                <string />
              </type>
              <initialValue>
                <simpleValue value="'$N'" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> for use as delimiter</xhtml>
              </documentation>
            </variable>
            <variable name="udiInternalCmpId">
              <type>
                <UDINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> does not need to be set beforehand as only used internally</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK FB_logAdd
VAR
  sCmpName : STRING;
  sCurrLog : T_MaxString;

  // to check for duplicate states or log messages
  sPrevName : STRING      := '$00';
  sPrevLog  : T_MaxString := '$00';

  // for use as delimiter
  sNewline : STRING := '$0A';

  // does not need to be set beforehand as only used internally
  udiInternalCmpId : UDINT;
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendLog" ObjectId="c3fa7f96-6085-45fd-a113-d56efcbed9fc">
              <interface>
                <inputVars>
                  <variable name="sLog">
                    <type>
                      <derived name="T_MaxString" />
                    </type>
                  </variable>
                  <variable name="xNewline">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendLog
VAR_INPUT
  sLog     : T_MaxString;
  xNewline : BOOL := FALSE;
END_VAR
VAR
  sErrLog : STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="sErrLog">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendLog
VAR_INPUT
  sLog     : T_MaxString;
  xNewline : BOOL := FALSE;
END_VAR
VAR
  sErrLog : STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">TM.Stu.StrConcatA(pstFrom:=ADR(sLog),
                  pstTo:=ADR(sCurrLog),
                  iBufferSize:=UINT_TO_INT(SIZEOF(sCurrLog)));

IF xNewline THEN
  TM.Stu.StrConcatA(pstFrom:=ADR(sNewline),
                    pstTo:=ADR(sCurrLog),
                    iBufferSize:=UINT_TO_INT(SIZEOF(sCurrLog)));
END_IF

IF TM.Stu.StrLenA(ADR(sCurrLog)) = (SIZEOF(sCurrLog) - 1) THEN
  sErrLog := Standard.CONCAT('SIZEOF(sCurrLog) = ', UINT_TO_STRING(SIZEOF(sCurrLog)));
  sErrLog := Standard.CONCAT(sErrLog, ' but it is not large enough for logger!');

  METH_printError(sErrLog);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendLog
VAR_INPUT
  sLog     : T_MaxString;
  xNewline : BOOL := FALSE;
END_VAR
VAR
  sErrLog : STRING;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_printAppendedLogs" ObjectId="43e971fb-a7a2-4f4e-acd9-60598ae9927b">
              <interface>
                <inputVars>
                  <variable name="sCmpName">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'$00'" />
                    </initialValue>
                  </variable>
                  <variable name="udiCmpVer">
                    <type>
                      <UDINT />
                    </type>
                    <initialValue>
                      <simpleValue value="16#1" />
                    </initialValue>
                  </variable>
                  <variable name="udiLogClass">
                    <type>
                      <UDINT />
                    </type>
                    <initialValue>
                      <simpleValue value="SM3_Basic.CmpLog.LogClass.LOG_USER_NOTIFY" />
                    </initialValue>
                  </variable>
                  <variable name="udiErrorClass">
                    <type>
                      <UDINT />
                    </type>
                    <initialValue>
                      <simpleValue value="SM3_Basic.Errors.ERR_FAILED" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_printAppendedLogs
VAR_INPUT
  sCmpName      : STRING := '$00';
  udiCmpVer     : UDINT  := 16#1;
  udiLogClass   : UDINT  := SM3_Basic.CmpLog.LogClass.LOG_USER_NOTIFY;
  udiErrorClass : UDINT  := SM3_Basic.Errors.ERR_FAILED;
END_VAR
VAR
  iSplitPos : INT         := 0;
  sSplitLog : STRING(255) := '$00';
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="iSplitPos">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                  </variable>
                  <variable name="sSplitLog">
                    <type>
                      <string length="255" />
                    </type>
                    <initialValue>
                      <simpleValue value="'$00'" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_printAppendedLogs
VAR_INPUT
  sCmpName      : STRING := '$00';
  udiCmpVer     : UDINT  := 16#1;
  udiLogClass   : UDINT  := SM3_Basic.CmpLog.LogClass.LOG_USER_NOTIFY;
  udiErrorClass : UDINT  := SM3_Basic.Errors.ERR_FAILED;
END_VAR
VAR
  iSplitPos : INT         := 0;
  sSplitLog : STRING(255) := '$00';
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// use persistent variable if not provided otherwise replace persistent one
IF sCmpName = '$00' THEN
  sCmpName := THIS^.sCmpName;
ELSE
  THIS^.sCmpName := sCmpName;
END_IF

// print log only if either state (set to sCmpName) or log message is different
// StrCmpA returns zero if strings are equal
IF TM.Stu.StrCmpA(ADR(sPrevLog), ADR(sCurrLog)) &lt;&gt; 0 OR
   TM.Stu.StrCmpA(ADR(sPrevName), ADR(sCmpName)) &lt;&gt; 0 THEN

  // store component name and log content to prevent lots of duplicates
  sPrevName := sCmpName;
  sPrevLog := sCurrLog;

  // set metadata i.e. component name, version etc.
  SM3_Basic.Component_Manager.CMAddComponent2(pszComponent:=sCmpName,
                                              udiVersion:=udiCmpVer,
                                              udiCmpId:=ADR(udiInternalCmpId),
                                              pResult:=0);

  SM3_Basic.CmpLog.LogAdd2(hLogger:=SM3_Basic.CmpLog.LOG_STD_LOGGER,
                           udiCmpID:=udiInternalCmpId,
                           udiClassID:=udiLogClass,
                           udiErrorID:=udiErrorClass,
                           udiInfoID:=1,
                           pszInfo:='(*--------------------------------------------------*)');

  // limit for pszComponent is 29 chars (will become *** if longer)
  IF Standard.LEN(sCmpName) &gt; 29 THEN
    // so print sCmpName before actual log
    sCmpName := Standard.CONCAT('Cmp=', sCmpName);
    SM3_Basic.CmpLog.LogAdd2(hLogger:=SM3_Basic.CmpLog.LOG_STD_LOGGER,
                             udiCmpID:=udiInternalCmpId,
                             udiClassID:=udiLogClass,
                             udiErrorID:=udiErrorClass,
                             udiInfoID:=1,
                             pszInfo:=sCmpName);
  END_IF

  // split string using newline as delimiter
  WHILE TM.Stu.StrLenA(ADR(sCurrLog)) &gt; 0 DO
    // StrFindA returns zero if substring at pst2 not found
    iSplitPos := TM.Stu.StrFindA(pst1:=ADR(sCurrLog),
                                 pst2:=ADR(sNewline),
                                 uiSearchStart:=1);

    // copy string and set position to last character if newline not found
    IF iSplitPos = 0 THEN
      sSplitLog := sCurrLog;
      iSplitPos := DINT_TO_INT(TM.Stu.StrLenA(ADR(sCurrLog)));
    ELSE
      // extract string without newline
      TM.Stu.StrMidA(pst:=ADR(sCurrLog),
                     uiInputBufferSize:=SIZEOF(sCurrLog),
                     iLength:=(iSplitPos - 1), // do not include newline
                     iPosition:=1,
                     pstResult:=ADR(sSplitLog),
                     uiResultBufferSize:=SIZEOF(sSplitLog));
    END_IF

    // delete extracted string and its corresponding newline from original
    TM.Stu.StrDeleteA(pby:=ADR(sCurrLog),
                      iLength:=iSplitPos, // include newline
                      iPosition:=1);

    // print extracted string with logger
    SM3_Basic.CmpLog.LogAdd2(hLogger:=SM3_Basic.CmpLog.LOG_STD_LOGGER,
                             udiCmpID:=udiInternalCmpId,
                             udiClassID:=udiLogClass,
                             udiErrorID:=udiErrorClass,
                             udiInfoID:=1,
                             pszInfo:=sSplitLog);
  END_WHILE
END_IF

// printing should flush buffer so delete anything remaining
TM.Stu.StrDeleteA(pby:=ADR(sCurrLog),
                  iLength:=DINT_TO_INT(TM.Stu.StrLenA(ADR(sCurrLog))),
                  iPosition:=1);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_printAppendedLogs
VAR_INPUT
  sCmpName      : STRING := '$00';
  udiCmpVer     : UDINT  := 16#1;
  udiLogClass   : UDINT  := SM3_Basic.CmpLog.LogClass.LOG_USER_NOTIFY;
  udiErrorClass : UDINT  := SM3_Basic.Errors.ERR_FAILED;
END_VAR
VAR
  iSplitPos : INT         := 0;
  sSplitLog : STRING(255) := '$00';
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_Init" ObjectId="2de5fc70-5824-4784-b7fb-c50dc5b035ef">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the retain variables are initialized (reset warm / reset cold)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the instance will be copied to the copy code afterward (online change) </xhtml>
                    </documentation>
                  </variable>
                  <variable name="pCmpName">
                    <type>
                      <pointer>
                        <baseType>
                          <string />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
  bInCopyCode  : BOOL; // TRUE: the instance will be copied to the copy code afterward (online change) 
  pCmpName     : POINTER TO STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_Init is always available implicitly and it is used primarily for initialization.
The return value is not evaluated. For a specific influence, you can also declare the
methods explicitly and provide additional code there with the standard initialization
code. You can evaluate the return value.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// check if pointer is initialized before assigning
IF pCmpName &lt;&gt; 0 THEN
  THIS^.sCmpName := pCmpName^;
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
  bInCopyCode  : BOOL; // TRUE: the instance will be copied to the copy code afterward (online change) 
  pCmpName     : POINTER TO STRING;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendTargetPositionLogs" ObjectId="b44fb45a-e7b0-41c5-bddd-4d767e8f7b29">
              <interface>
                <inputVars>
                  <variable name="smcCrdSys">
                    <type>
                      <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
                    </type>
                  </variable>
                  <variable name="sAxisNames">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> comma delimited string</xhtml>
                    </documentation>
                  </variable>
                  <variable name="smcPosRef">
                    <type>
                      <derived name="SM3_Robotics.SMC_POS_REF" />
                    </type>
                  </variable>
                  <variable name="eMcMotionFbType">
                    <type>
                      <derived name="E_mcMotionFbType" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendTargetPositionLogs
VAR_INPUT
  smcCrdSys       : SM3_Robotics.SMC_COORD_SYSTEM;
  sAxisNames      : STRING; // comma delimited string
  smcPosRef       : SM3_Robotics.SMC_POS_REF;
  eMcMotionFbType : E_mcMotionFbType;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendTargetPositionLogs
VAR_INPUT
  smcCrdSys       : SM3_Robotics.SMC_COORD_SYSTEM;
  sAxisNames      : STRING; // comma delimited string
  smcPosRef       : SM3_Robotics.SMC_POS_REF;
  eMcMotionFbType : E_mcMotionFbType;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF smcCrdSys = SM3_Robotics.SMC_COORD_SYSTEM.ACS THEN
  METH_appendLog(sLog:='{');
  METH_appendLog(sLog:=sAxisNames);
  METH_appendLog(sLog:='}',
                 xNewline:=TRUE);
ELSE
  METH_appendLog(sLog:='{X,Y,Z,A,B,C}',
                 xNewline:=TRUE);
END_IF

METH_appendLog(sLog:='{');

FOR diIndx := LOWER_BOUND(smcPosRef.v, 1) TO UPPER_BOUND(smcPosRef.v, 1) BY 1 DO
  METH_appendLog(sLog:=LREAL_TO_STRING(smcPosRef.v[diIndx]));

  IF diIndx &lt; UPPER_BOUND(smcPosRef.v, 1) THEN
    METH_appendLog(sLog:=',');
  END_IF
END_FOR

METH_appendLog(sLog:='}',
               xNewline:=TRUE);
							 
METH_appendLog(sLog:='with ');

METH_appendLog(sLog:=TO_STRING(eMcMotionFbType),
							 xNewline:=TRUE);

METH_appendLog(sLog:='in ');

CASE smcCrdSys OF
  SM3_Robotics.SMC_COORD_SYSTEM.ACS:
    METH_appendLog(sLog:='Axis Coordinate System',
                   xNewline:=TRUE);
  SM3_Robotics.SMC_COORD_SYSTEM.MCS:
    METH_appendLog(sLog:='Machine Coordinate System',
                   xNewline:=TRUE);
  SM3_Robotics.SMC_COORD_SYSTEM.PCS_1:
    METH_appendLog(sLog:='PCS_1',
                   xNewline:=TRUE);
  SM3_Robotics.SMC_COORD_SYSTEM.PCS_2:
    METH_appendLog(sLog:='PCS_2',
                   xNewline:=TRUE);
  SM3_Robotics.SMC_COORD_SYSTEM.TCS:
    METH_appendLog(sLog:='Tool Coordinate System',
                   xNewline:=TRUE);
  SM3_Robotics.SMC_COORD_SYSTEM.WCS:
    METH_appendLog(sLog:='World Coordinate System',
                   xNewline:=TRUE);
END_CASE
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendTargetPositionLogs
VAR_INPUT
  smcCrdSys       : SM3_Robotics.SMC_COORD_SYSTEM;
  sAxisNames      : STRING; // comma delimited string
  smcPosRef       : SM3_Robotics.SMC_POS_REF;
  eMcMotionFbType : E_mcMotionFbType;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendGrpStatusLog" ObjectId="6f33768a-0328-4b4f-aad4-389210308946">
              <interface>
                <inOutVars>
                  <variable name="axisGrpRefSm3">
                    <type>
                      <derived name="SM3_Robotics.AXIS_GROUP_REF_SM3" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendGrpStatusLog
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName : STRING;
END_VAR
VAR
  mcGrpReadStatus : SM3_Robotics.MC_GroupReadStatus;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <inputVars>
                  <variable name="sGrpName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendGrpStatusLog
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName : STRING;
END_VAR
VAR
  mcGrpReadStatus : SM3_Robotics.MC_GroupReadStatus;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="mcGrpReadStatus">
                    <type>
                      <derived name="SM3_Robotics.MC_GroupReadStatus" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendGrpStatusLog
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName : STRING;
END_VAR
VAR
  mcGrpReadStatus : SM3_Robotics.MC_GroupReadStatus;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">mcGrpReadStatus(AxisGroup:=axisGrpRefSm3, Enable:=TRUE);

IF mcGrpReadStatus.Error THEN
  METH_printError(SM3_Error.SMC_ErrorString(ErrorID:=mcGrpReadStatus.ErrorID,
                                            Language:=SM3_Error.SMC_LANGUAGE_TYPE.english));

  RETURN;
END_IF

IF mcGrpReadStatus.Valid THEN
  METH_appendLog('Axis: ');
  METH_appendLog(sGrpName);
  METH_appendLog(' Status: ');

  IF mcGrpReadStatus.GroupDisabled THEN
    METH_appendLog('disabled');
  ELSIF mcGrpReadStatus.GroupStandby THEN
    METH_appendLog('standby');
  ELSIF mcGrpReadStatus.GroupMoving THEN
    METH_appendLog('moving');
  ELSIF mcGrpReadStatus.GroupHoming THEN
    METH_appendLog('homing');
  ELSIF mcGrpReadStatus.GroupStopping THEN
    METH_appendLog('stopping');
  ELSIF mcGrpReadStatus.GroupErrorStop THEN
    METH_appendLog('errorstop');
  END_IF

  // remember to add newline as used as delimiter by logger
  METH_appendLog(sNewline);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendGrpStatusLog
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName : STRING;
END_VAR
VAR
  mcGrpReadStatus : SM3_Robotics.MC_GroupReadStatus;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_printError" ObjectId="9f53ed75-6a90-4ffd-80cd-65660f889985">
              <interface>
                <inputVars>
                  <variable name="sErrLog">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PRIVATE METH_printError
VAR_INPUT
  sErrLog : STRING;
END_VAR
VAR
  sTempLog  : T_MaxString;
  sTempName : STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="sTempLog">
                    <type>
                      <derived name="T_MaxString" />
                    </type>
                  </variable>
                  <variable name="sTempName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PRIVATE METH_printError
VAR_INPUT
  sErrLog : STRING;
END_VAR
VAR
  sTempLog  : T_MaxString;
  sTempName : STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">sTempLog := sCurrLog;
sTempName := sPrevName;

sCurrLog := sErrLog;
METH_printAppendedLogs(sCmpName:=__POUNAME());

sPrevName := sTempName;
sCurrLog := sTempLog;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PRIVATE METH_printError
VAR_INPUT
  sErrLog : STRING;
END_VAR
VAR
  sTempLog  : T_MaxString;
  sTempName : STRING;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendStatusLogs" ObjectId="44b30e6c-85a2-468a-8f64-e76456434f5d">
              <interface>
                <inOutVars>
                  <variable name="axisGrpRefSm3">
                    <type>
                      <derived name="SM3_Robotics.AXIS_GROUP_REF_SM3" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendStatusLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName   : STRING;
  sAxisNames : STRING; // comma delimited string
END_VAR
VAR
  diIndx          : DINT;
  pAxisRefSm3     : POINTER TO SM3_Robotics.AXIS_REF_SM3;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <inputVars>
                  <variable name="sGrpName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="sAxisNames">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> comma delimited string</xhtml>
                    </documentation>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendStatusLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName   : STRING;
  sAxisNames : STRING; // comma delimited string
END_VAR
VAR
  diIndx          : DINT;
  pAxisRefSm3     : POINTER TO SM3_Robotics.AXIS_REF_SM3;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="pAxisRefSm3">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="SM3_Robotics.AXIS_REF_SM3" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendStatusLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName   : STRING;
  sAxisNames : STRING; // comma delimited string
END_VAR
VAR
  diIndx          : DINT;
  pAxisRefSm3     : POINTER TO SM3_Robotics.AXIS_REF_SM3;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF axisGrpRefSm3.m_nNumAxes = 0 THEN
  METH_printError(Standard.CONCAT(sGrpName, ' has no axes!'));
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(axisGrpRefSm3.m_aAxes, 1) TO UPPER_BOUND(axisGrpRefSm3.m_aAxes, 1) BY 1 DO
  pAxisRefSm3 := axisGrpRefSm3.m_aAxes[diIndx].GetAxisRefPointer();
  METH_appendAxisStatusLog(axisRefSm3:=pAxisRefSm3^,
                           sAxisName:=F_getCommaDelimitedName(sAxisNames));
END_FOR

METH_appendGrpStatusLog(axisGrpRefSm3:=axisGrpRefSm3,
                        sGrpName:=sGrpName);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendStatusLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  sGrpName   : STRING;
  sAxisNames : STRING; // comma delimited string
END_VAR
VAR
  diIndx          : DINT;
  pAxisRefSm3     : POINTER TO SM3_Robotics.AXIS_REF_SM3;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendAxisStatusLog" ObjectId="9ee6c8cb-5fa2-410b-8828-a0fec9e1f102">
              <interface>
                <inOutVars>
                  <variable name="axisRefSm3">
                    <type>
                      <derived name="SM3_Basic.AXIS_REF_SM3" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendAxisStatusLog
VAR_IN_OUT
  axisRefSm3 : SM3_Basic.AXIS_REF_SM3;
END_VAR
VAR_INPUT
  sAxisName : STRING;
END_VAR
VAR
  mcReadStatus : SM3_Basic.MC_ReadStatus;
  mcReadActPos : SM3_Basic.MC_ReadActualPosition;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <inputVars>
                  <variable name="sAxisName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendAxisStatusLog
VAR_IN_OUT
  axisRefSm3 : SM3_Basic.AXIS_REF_SM3;
END_VAR
VAR_INPUT
  sAxisName : STRING;
END_VAR
VAR
  mcReadStatus : SM3_Basic.MC_ReadStatus;
  mcReadActPos : SM3_Basic.MC_ReadActualPosition;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="mcReadStatus">
                    <type>
                      <derived name="SM3_Basic.MC_ReadStatus" />
                    </type>
                  </variable>
                  <variable name="mcReadActPos">
                    <type>
                      <derived name="SM3_Basic.MC_ReadActualPosition" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendAxisStatusLog
VAR_IN_OUT
  axisRefSm3 : SM3_Basic.AXIS_REF_SM3;
END_VAR
VAR_INPUT
  sAxisName : STRING;
END_VAR
VAR
  mcReadStatus : SM3_Basic.MC_ReadStatus;
  mcReadActPos : SM3_Basic.MC_ReadActualPosition;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">mcReadStatus(Axis:=axisRefSm3, Enable:=TRUE);

IF mcReadStatus.Error THEN
  METH_printError(SM3_Error.SMC_ErrorString(ErrorID:=mcReadStatus.ErrorID,
                                            Language:=SM3_Error.SMC_LANGUAGE_TYPE.english));

  RETURN;
END_IF

IF mcReadStatus.Valid THEN
  METH_appendLog('Axis: ');
  METH_appendLog(sAxisName);
  METH_appendLog(' Status: ');

  IF mcReadStatus.Disabled THEN
    METH_appendLog('disabled');
  ELSIF mcReadStatus.Errorstop THEN
    METH_appendLog('errorstop');
  ELSIF mcReadStatus.Stopping THEN
    METH_appendLog('stopping');
  ELSIF mcReadStatus.StandStill THEN
    METH_appendLog('standstill');
  ELSIF mcReadStatus.DiscreteMotion THEN
    METH_appendLog('discrete_motion');
  ELSIF mcReadStatus.ContinuousMotion THEN
    METH_appendLog('continuous_motion');
  ELSIF mcReadStatus.SynchronizedMotion THEN
    METH_appendLog('synchronized_motion');
  ELSIF mcReadStatus.Homing THEN
    METH_appendLog('homing');
  END_IF

  IF mcReadStatus.ConstantVelocity THEN
    METH_appendLog(' Speed: ConstantVelocity');
  ELSIF mcReadStatus.Accelerating THEN
    METH_appendLog(' Speed: Accelerating');
  ELSIF mcReadStatus.Decelerating THEN
    METH_appendLog(' Speed: Decelerating');
  END_IF

END_IF

mcReadActPos(Axis:=axisRefSm3,
             Enable:=TRUE);

IF mcReadActPos.Error THEN
  // remember to add newline as used as delimiter by logger
  METH_appendLog(sNewline);

  METH_printError(SM3_Error.SMC_ErrorString(ErrorID:=mcReadActPos.ErrorID,
                                            Language:=SM3_Error.SMC_LANGUAGE_TYPE.english));

  RETURN;
END_IF

IF mcReadActPos.Valid THEN
  METH_appendLog(' Position: ');
  METH_appendLog(LREAL_TO_STRING(mcReadActPos.Position));
END_IF

// remember to add newline as used as delimiter by logger
METH_appendLog(sNewline);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendAxisStatusLog
VAR_IN_OUT
  axisRefSm3 : SM3_Basic.AXIS_REF_SM3;
END_VAR
VAR_INPUT
  sAxisName : STRING;
END_VAR
VAR
  mcReadStatus : SM3_Basic.MC_ReadStatus;
  mcReadActPos : SM3_Basic.MC_ReadActualPosition;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendCurrentPositionLogs" ObjectId="9e10e3ce-4a9e-438f-a549-8f91b8895dac">
              <interface>
                <inOutVars>
                  <variable name="axisGrpRefSm3">
                    <type>
                      <derived name="SM3_Robotics.AXIS_GROUP_REF_SM3" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendCurrentPositionLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  smcCrdSys  : SM3_Robotics.SMC_COORD_SYSTEM;
  sAxisNames : STRING; // comma delimted string
END_VAR
VAR
  mcGrpReadActPos : SM3_Robotics.MC_GroupReadActualPosition;
  diIndx          : DINT;
  sIndividualName : STRING;
  sCoordNames     : STRING := 'X,Y,Z,A,B,C';
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <inputVars>
                  <variable name="smcCrdSys">
                    <type>
                      <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
                    </type>
                  </variable>
                  <variable name="sAxisNames">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> comma delimted string</xhtml>
                    </documentation>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendCurrentPositionLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  smcCrdSys  : SM3_Robotics.SMC_COORD_SYSTEM;
  sAxisNames : STRING; // comma delimted string
END_VAR
VAR
  mcGrpReadActPos : SM3_Robotics.MC_GroupReadActualPosition;
  diIndx          : DINT;
  sIndividualName : STRING;
  sCoordNames     : STRING := 'X,Y,Z,A,B,C';
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="mcGrpReadActPos">
                    <type>
                      <derived name="SM3_Robotics.MC_GroupReadActualPosition" />
                    </type>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="sIndividualName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="sCoordNames">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'X,Y,Z,A,B,C'" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendCurrentPositionLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  smcCrdSys  : SM3_Robotics.SMC_COORD_SYSTEM;
  sAxisNames : STRING; // comma delimted string
END_VAR
VAR
  mcGrpReadActPos : SM3_Robotics.MC_GroupReadActualPosition;
  diIndx          : DINT;
  sIndividualName : STRING;
  sCoordNames     : STRING := 'X,Y,Z,A,B,C';
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">mcGrpReadActPos(AxisGroup:=axisGrpRefSm3,
                Enable:=TRUE,
                CoordSystem:=smcCrdSys);

IF mcGrpReadActPos.Error THEN
  METH_printError(SM3_Error.SMC_ErrorString(ErrorID:=mcGrpReadActPos.ErrorID,
                                            Language:=SM3_Error.SMC_LANGUAGE_TYPE.english));

  RETURN;
END_IF

IF mcGrpReadActPos.Valid THEN
  METH_appendLog(sLog:='Current position:',
                 xNewline:=TRUE);

  FOR diIndx := LOWER_BOUND(mcGrpReadActPos.Position.v, 1) TO UPPER_BOUND(mcGrpReadActPos.Position.v, 1) BY 1 DO

    IF diIndx = LOWER_BOUND(mcGrpReadActPos.Position.v, 1) THEN
      METH_appendLog(sLog:='{ ');
    ELSE
      METH_appendLog(sLog:='  '); // blank space for better log alignment
    END_IF

    IF smcCrdSys = SM3_Robotics.SMC_COORD_SYSTEM.ACS THEN
      sIndividualName := F_getCommaDelimitedName(sAxisNames);
    ELSE
      sIndividualName := F_getCommaDelimitedName(sCoordNames);
    END_IF

    METH_appendLog(sLog:=sIndividualName);
		METH_appendLog(sLog:=': ');
    METH_appendLog(sLog:=LREAL_TO_STRING(mcGrpReadActPos.Position.v[diIndx]));

    IF diIndx = UPPER_BOUND(mcGrpReadActPos.Position.v, 1) THEN
      METH_appendLog(sLog:=' }',
                     xNewline:=TRUE);
    ELSE
      METH_appendLog(sLog:=',',
                     xNewline:=TRUE);
    END_IF
  END_FOR

END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_appendCurrentPositionLogs
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_INPUT
  smcCrdSys  : SM3_Robotics.SMC_COORD_SYSTEM;
  sAxisNames : STRING; // comma delimted string
END_VAR
VAR
  mcGrpReadActPos : SM3_Robotics.MC_GroupReadActualPosition;
  diIndx          : DINT;
  sIndividualName : STRING;
  sCoordNames     : STRING := 'X,Y,Z,A,B,C';
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK FB_logAdd
VAR
  sCmpName : STRING;
  sCurrLog : T_MaxString;

  // to check for duplicate states or log messages
  sPrevName : STRING      := '$00';
  sPrevLog  : T_MaxString := '$00';

  // for use as delimiter
  sNewline : STRING := '$0A';

  // does not need to be set beforehand as only used internally
  udiInternalCmpId : UDINT;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>421581cc-c927-4310-98e1-1443e01a5bca</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_abstractEndMachineState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractMachineState</Extends>
                <Implements>I_machineState</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupEnable" ObjectId="9f761a32-dc17-423a-aca9-e4cdd0cad41b">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupEnable THEN
  METH_appendStateFbLog();
  METH_appendStatusLogs();
  METH_appendInfoLog('Enabling axes...');
  METH_printInfo(__POUNAME());

  pFbMachine^.METH_setState(pFbMachine^.PROP_enablingAxesState);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupEnable
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_grpPwrOn" ObjectId="301f872d-4101-47eb-a151-e7a8e8cbb242">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupPowerOn THEN
  METH_appendStateFbLog();
  METH_appendStatusLogs();
  METH_appendInfoLog('Powering on axes...');
  METH_printInfo(__POUNAME());

  pFbMachine^.METH_setState(pFbMachine^.PROP_poweringOnState);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOn
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_grpPwrOff" ObjectId="0541f504-a28d-4e55-986f-6034a94d20a0">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupPowerOff THEN
  METH_appendStateFbLog();
  METH_appendStatusLogs();
  METH_appendInfoLog('Powering off axes...');
  METH_printInfo(__POUNAME());

  pFbMachine^.METH_setState(pFbMachine^.PROP_poweringOffState);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOff
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_openGripper" ObjectId="6a068ccd-7e03-4ecc-ab34-9f191e0d6976">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// IF stMethConfig.xOpenGripper THEN
// 	
// END_IF                           </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_openGripper
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupHalt" ObjectId="53090d1e-fa25-488d-b371-d1d08ed85515">
              <interface>
                <inputVars>
                  <variable name="stHaltParams">
                    <type>
                      <derived name="ST_haltParams" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <outputVars>
                  <variable name="xHaltFinished">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// default values cannot be set in abstract or interface method
xHaltFinished := FALSE;

IF stMethConfig.xGroupHalt THEN
  METH_appendStateFbLog();
  METH_appendStatusLogs();
  METH_appendInfoLog('Halting axes...');
  METH_printInfo(__POUNAME());

  pFbMachine^.METH_setState(pFbMachine^.PROP_haltingState);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_closeGripper" ObjectId="18f1eb08-07b8-4cf2-b66c-e1811cf1e550">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// IF stMethConfig.xCloseGripper THEN
// END_IF                           </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_closeGripper
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_moveToPosition" ObjectId="377b106b-f38e-4f66-994c-b066feabb082">
              <interface>
                <inOutVars>
                  <variable name="mcMoveLinkedList">
                    <type>
                      <derived name="COL.LinkedList" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
  linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <outputVars>
                  <variable name="xMotionFinished">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
  linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </outputVars>
                <localVars>
                  <variable name="linkedListIterator">
                    <type>
                      <derived name="COL.LinkedListIterator" />
                    </type>
                  </variable>
                  <variable name="itfLinkedListElem">
                    <type>
                      <derived name="COL.IElement" />
                    </type>
                  </variable>
                  <variable name="itfMcMoveElement">
                    <type>
                      <derived name="I_mcMoveElement" />
                    </type>
                  </variable>
                  <variable name="stMcMoveParams">
                    <type>
                      <derived name="ST_mcMoveParams" />
                    </type>
                  </variable>
                  <variable name="mcMoveLinkedListInfo">
                    <type>
                      <derived name="__SYSTEM.VAR_INFO" />
                    </type>
                  </variable>
                  <variable name="itfLinkedListElemInfo">
                    <type>
                      <derived name="__SYSTEM.VAR_INFO" />
                    </type>
                  </variable>
                  <variable name="itfMcMoveElementInfo">
                    <type>
                      <derived name="__SYSTEM.VAR_INFO" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
  linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// default values cannot be set in abstract or interface method
xMotionFinished := FALSE;

IF stMethConfig.xMoveDirAbs THEN

  mcMoveLinkedListInfo := __VARINFO(mcMoveLinkedList);

  IF mcMoveLinkedList.CountElements() &lt;= 0 THEN
    METH_appendInfoLog('No elements in ');
    METH_appendInfoLog(mcMoveLinkedListInfo.Symbol);
    METH_appendInfoLog('!');
  ELSE
    mcMoveLinkedList.ElementIterator(itfIterator:=linkedListIterator);

    WHILE linkedListIterator.HasNext() DO
      linkedListIterator.Next(itfElement=&gt;itfLinkedListElem);

      itfLinkedListElemInfo := __VARINFO(itfLinkedListElem);
      itfMcMoveElementInfo := __VARINFO(itfMcMoveElement);

      IF NOT __QUERYINTERFACE(itfLinkedListElem, itfMcMoveElement) THEN
        METH_appendInfoLog('Unable to convert ');
        METH_appendInfoLog(itfLinkedListElemInfo.Symbol);
        METH_appendInfoLog(' to ');
        METH_appendInfoLog(itfMcMoveElementInfo.Symbol);
        METH_appendInfoLog('!');
      ELSE
        METH_appendStateFbLog();
        METH_appendStatusLogs();
        METH_appendInfoLog('Moving to position...');

        stMcMoveParams := itfMcMoveElement.PROP_stMcMoveParams;

        CASE stMcMoveParams.eMcMotionFbType OF

          E_mcMotionFbType.moveCrcAbs:
            METH_appendInfoLog('Not implemented yet!');

          E_mcMotionFbType.moveCrcRel:
            METH_appendInfoLog('Not implemented yet!');

          E_mcMotionFbType.moveDirAbs:
            METH_appendTargetPositionLogs(smcCrdSys:=stMcMoveParams.stMoveDirParams.smcCrdSys,
                                          smcPosRef:=stMcMoveParams.stMoveDirParams.smcPosRef,
                                          eMcMotionFbType:=stMcMoveParams.eMcMotionFbType);

          E_mcMotionFbType.moveDirRel:
            METH_appendTargetPositionLogs(smcCrdSys:=stMcMoveParams.stMoveDirParams.smcCrdSys,
                                          smcPosRef:=stMcMoveParams.stMoveDirParams.smcPosRef,
                                          eMcMotionFbType:=stMcMoveParams.eMcMotionFbType);

          E_mcMotionFbType.moveLinAbs:
            METH_appendTargetPositionLogs(smcCrdSys:=stMcMoveParams.stMoveLinParams.smcCrdSys,
                                          smcPosRef:=stMcMoveParams.stMoveLinParams.smcPosRef,
                                          eMcMotionFbType:=stMcMoveParams.eMcMotionFbType);

          E_mcMotionFbType.moveLinRel:
            METH_appendTargetPositionLogs(smcCrdSys:=stMcMoveParams.stMoveLinParams.smcCrdSys,
                                          smcPosRef:=stMcMoveParams.stMoveLinParams.smcPosRef,
                                          eMcMotionFbType:=stMcMoveParams.eMcMotionFbType);

        END_CASE

        METH_printInfo(__POUNAME());
      END_IF
    END_WHILE
  END_IF

  pFbMachine^.METH_setState(pFbMachine^.PROP_movingToPositionState);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
  linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupDisable" ObjectId="a74d9670-d265-4381-888d-97ffb620dc8f">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupDisable THEN
  METH_appendStateFbLog();
  METH_appendStatusLogs();
  METH_appendInfoLog('Disabling axes...');
  METH_printInfo(__POUNAME());

  pFbMachine^.METH_setState(pFbMachine^.PROP_disablingAxesState);
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupDisable
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL ABSTRACT FB_abstractEndMachineState EXTENDS FB_abstractMachineState IMPLEMENTS I_machineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a5b00c33-ee02-4460-b3bf-c9eed86ac39f</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_disabledAxesState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractEndMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := TRUE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := TRUE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := FALSE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_disabledAxesState EXTENDS FB_abstractEndMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>5c7f5263-ea57-439f-860f-6132097873ed</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_enabledAxesState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractEndMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := TRUE;
stMethConfig.xMoveDirAbs    := TRUE;
stMethConfig.xGroupHalt     := TRUE;
stMethConfig.xCloseGripper  := TRUE;
stMethConfig.xOpenGripper   := TRUE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_enabledAxesState EXTENDS FB_abstractEndMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>e4669700-97a6-46ed-9dae-2d3c71248dee</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_haltedState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractEndMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := TRUE;
stMethConfig.xMoveDirAbs    := TRUE;
stMethConfig.xGroupHalt     := TRUE;
stMethConfig.xCloseGripper  := TRUE;
stMethConfig.xOpenGripper   := TRUE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_haltedState EXTENDS FB_abstractEndMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>13bc6b55-0898-4d43-b548-ccaccd0f5d88</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_movedToPositionState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractEndMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := TRUE;
stMethConfig.xMoveDirAbs    := TRUE;
stMethConfig.xGroupHalt     := TRUE;
stMethConfig.xCloseGripper  := TRUE;
stMethConfig.xOpenGripper   := TRUE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_movedToPositionState EXTENDS FB_abstractEndMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>13aa5d6e-3e02-42da-be1f-79465c82404c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_poweredOffState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractEndMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := TRUE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := FALSE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_poweredOffState EXTENDS FB_abstractEndMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7e85f05e-5dcc-42dc-be2a-5db1ac95ddf2</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_poweredOnState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractEndMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := TRUE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := TRUE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := FALSE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_poweredOnState EXTENDS FB_abstractEndMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6e899673-9a22-4a07-9d1b-33e962512a2c</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_abstractMachineState" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="pFbMachine">
              <type>
                <pointer>
                  <baseType>
                    <derived name="FB_machine" />
                  </baseType>
                </pointer>
              </type>
            </variable>
            <variable name="pFbLogAdd">
              <type>
                <pointer>
                  <baseType>
                    <derived name="FB_logAdd" />
                  </baseType>
                </pointer>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> centralized in FB_machine</xhtml>
              </documentation>
            </variable>
            <variable name="sStateFb">
              <type>
                <string />
              </type>
            </variable>
            <variable name="stMethConfig">
              <type>
                <derived name="ST_methConfig" />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL ABSTRACT FB_abstractMachineState
VAR
  pFbMachine   : POINTER TO FB_machine;
  pFbLogAdd    : POINTER TO FB_logAdd; // centralized in FB_machine
  sStateFb     : STRING;
  stMethConfig : ST_methConfig;
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_Init" ObjectId="1db8717c-ca7a-4079-9122-be25f563b16f">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the retain variables are initialized (reset warm / reset cold)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the instance will be copied to the copy code afterward (online change)   </xhtml>
                    </documentation>
                  </variable>
                  <variable name="pFbMachine">
                    <type>
                      <pointer>
                        <baseType>
                          <derived name="FB_machine" />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
  bInCopyCode  : BOOL; // TRUE: the instance will be copied to the copy code afterward (online change)   
  pFbMachine   : POINTER TO FB_machine;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_Init is always available implicitly and it is used primarily for initialization.
The return value is not evaluated. For a specific influence, you can also declare the
methods explicitly and provide additional code there with the standard initialization
code. You can evaluate the return value.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">THIS^.pFbMachine := pFbMachine;
THIS^.pFbLogAdd := THIS^.pFbMachine^.PROP_fbLogAddPointer;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
  bInCopyCode  : BOOL; // TRUE: the instance will be copied to the copy code afterward (online change)   
  pFbMachine   : POINTER TO FB_machine;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_printInfo" ObjectId="2c23291e-496f-438b-bdf0-0d4b9c515965">
              <interface>
                <inputVars>
                  <variable name="sCmpName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_printInfo
VAR_INPUT
  sCmpName : STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">pFbLogAdd^.METH_printAppendedLogs(sCmpName:=sCmpName,
                                  udiErrorClass:=SM3_Basic.CmpLog.LogClass.LOG_INFO);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_printInfo
VAR_INPUT
  sCmpName : STRING;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_printSmcError" ObjectId="20a2786b-8620-470d-9acc-b82e8b3044e7">
              <interface>
                <inputVars>
                  <variable name="smcErrorId">
                    <type>
                      <derived name="SM3_Error.SMC_ERROR" />
                    </type>
                  </variable>
                  <variable name="sCmpName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_printSmcError
VAR_INPUT
  smcErrorId : SM3_Error.SMC_ERROR;
  sCmpName   : STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">pFbLogAdd^.METH_appendLog(sLog:=SM3_Error.SMC_ErrorString(ErrorID:=smcErrorId,
                                                          Language:=SM3_Error.SMC_LANGUAGE_TYPE.english));

pFbLogAdd^.METH_printAppendedLogs(sCmpName:=sCmpName);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_printSmcError
VAR_INPUT
  smcErrorId : SM3_Error.SMC_ERROR;
  sCmpName   : STRING;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendStatusLogs" ObjectId="05e2e248-2e7b-4e11-abb3-1205675c2a79">
              <interface>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">pFbLogAdd^.METH_appendStatusLogs(axisGrpRefSm3:=pFbMachine^.PROP_axisGroupPointer^,
                                 sGrpName:=pFbMachine^.sGrpName,
                                 sAxisNames:=pFbMachine^.sAxisNames);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendStatusLogs
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendInfoLog" ObjectId="c65408c0-484d-4b7b-94e3-d1ca732d287c">
              <interface>
                <inputVars>
                  <variable name="sInfoMsg">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendInfoLog
VAR_INPUT
  sInfoMsg : STRING;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">pFbLogAdd^.METH_appendLog(sLog:=sInfoMsg,
                          xNewline:=TRUE);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendInfoLog
VAR_INPUT
  sInfoMsg : STRING;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendTargetPositionLogs" ObjectId="8548beb8-178a-468d-ba17-af0abccf2afd">
              <interface>
                <inputVars>
                  <variable name="smcCrdSys">
                    <type>
                      <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
                    </type>
                  </variable>
                  <variable name="smcPosRef">
                    <type>
                      <derived name="SM3_Robotics.SMC_POS_REF" />
                    </type>
                  </variable>
                  <variable name="eMcMotionFbType">
                    <type>
                      <derived name="E_mcMotionFbType" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendTargetPositionLogs
VAR_INPUT
  smcCrdSys : SM3_Robotics.SMC_COORD_SYSTEM;
  smcPosRef : SM3_Robotics.SMC_POS_REF;
	eMcMotionFbType : E_mcMotionFbType;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">pFbLogAdd^.METH_appendTargetPositionLogs(smcCrdSys:=smcCrdSys,
                                         sAxisNames:=pFbMachine^.sAxisNames,
                                         smcPosRef:=smcPosRef,
                                         eMcMotionFbType:=eMcMotionFbType);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendTargetPositionLogs
VAR_INPUT
  smcCrdSys : SM3_Robotics.SMC_COORD_SYSTEM;
  smcPosRef : SM3_Robotics.SMC_POS_REF;
	eMcMotionFbType : E_mcMotionFbType;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendStateFbLog" ObjectId="7dea6cb5-d068-41c9-95c0-7d4243e1ddd9">
              <interface>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">pFbLogAdd^.METH_appendLog(sLog:='Current state: ');
pFbLogAdd^.METH_appendLog(sLog:=sStateFb,
                          xNewline:=TRUE);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendStateFbLog
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_appendCurrentPositionLogs" ObjectId="76c7ff3f-195b-417f-b95b-45a7885bb56b">
              <interface>
                <inputVars>
                  <variable name="smcCrdSys">
                    <type>
                      <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendCurrentPositionLogs
VAR_INPUT
  smcCrdSys : SM3_Robotics.SMC_COORD_SYSTEM;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Protected="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">pFbLogAdd^.METH_appendCurrentPositionLogs(axisGrpRefSm3:=pFbMachine^.PROP_axisGroupPointer^,
                                          sAxisNames:=pFbMachine^.sAxisNames,
                                          smcCrdSys:=smcCrdSys);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD PROTECTED METH_appendCurrentPositionLogs
VAR_INPUT
  smcCrdSys : SM3_Robotics.SMC_COORD_SYSTEM;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL ABSTRACT FB_abstractMachineState
VAR
  pFbMachine   : POINTER TO FB_machine;
  pFbLogAdd    : POINTER TO FB_logAdd; // centralized in FB_machine
  sStateFb     : STRING;
  stMethConfig : ST_methConfig;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>8f15de99-5b90-4b3d-a2ec-7f5dede47f72</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_machine" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="rAxisGrpRefSm3">
              <type>
                <derived name="REFERENCE TO SM3_Robotics.AXIS_GROUP_REF_SM3" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> everything initialized in FB_Init</xhtml>
              </documentation>
            </variable>
            <variable name="sGrpName">
              <type>
                <string />
              </type>
            </variable>
            <variable name="sAxisNames">
              <type>
                <string />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> comma delimited string</xhtml>
              </documentation>
            </variable>
            <variable name="fbLogAdd">
              <type>
                <derived name="FB_logAdd" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Name>pCmpName</Name>
                      <Value>ADR('FB_machine')</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> logger used by FB_baseMachineState</xhtml>
              </documentation>
            </variable>
            <variable name="itfMachineState">
              <type>
                <derived name="I_machineState" />
              </type>
              <initialValue>
                <simpleValue value="fbPoweredOff" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> state pattern</xhtml>
              </documentation>
            </variable>
            <variable name="fbPoweredOff">
              <type>
                <derived name="FB_poweredOffState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> end states</xhtml>
              </documentation>
            </variable>
            <variable name="fbPoweredOn">
              <type>
                <derived name="FB_poweredOnState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbEnabledAxes">
              <type>
                <derived name="FB_enabledAxesState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbDisabledAxes">
              <type>
                <derived name="FB_disabledAxesState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbHalted">
              <type>
                <derived name="FB_haltedState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbMovedToPosition">
              <type>
                <derived name="FB_movedToPositionState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbPoweringOff">
              <type>
                <derived name="FB_poweringOffState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> interim states</xhtml>
              </documentation>
            </variable>
            <variable name="fbPoweringOn">
              <type>
                <derived name="FB_poweringOnState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbEnablingAxes">
              <type>
                <derived name="FB_enablingAxesState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbDisablingAxes">
              <type>
                <derived name="FB_disablingAxesState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbHalting">
              <type>
                <derived name="FB_haltingState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="fbMovingToPosition">
              <type>
                <derived name="FB_movingToPositionState" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Value>THIS</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK FB_machine
VAR
  // everything initialized in FB_Init
  rAxisGrpRefSm3 : REFERENCE TO SM3_Robotics.AXIS_GROUP_REF_SM3;
  sGrpName       : STRING;
  sAxisNames     : STRING; // comma delimited string

  // logger used by FB_baseMachineState
  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));

  // state pattern
  itfMachineState : I_machineState := fbPoweredOff;

  // end states
  fbPoweredOff      : FB_poweredOffState(THIS);
  fbPoweredOn       : FB_poweredOnState(THIS);
  fbEnabledAxes     : FB_enabledAxesState(THIS);
  fbDisabledAxes    : FB_disabledAxesState(THIS);
  fbHalted          : FB_haltedState(THIS);
  fbMovedToPosition : FB_movedToPositionState(THIS);
  // interim states
  fbPoweringOff      : FB_poweringOffState(THIS);
  fbPoweringOn       : FB_poweringOnState(THIS);
  fbEnablingAxes     : FB_enablingAxesState(THIS);
  fbDisablingAxes    : FB_disablingAxesState(THIS);
  fbHalting          : FB_haltingState(THIS);
  fbMovingToPosition : FB_movingToPositionState(THIS);
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_setState" ObjectId="0f8fd884-c6c3-45cc-9fb6-50bdb341c170">
              <interface>
                <inputVars>
                  <variable name="itfNewState">
                    <type>
                      <derived name="I_machineState" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD INTERNAL METH_setState
VAR_INPUT
  itfNewState : I_machineState;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Internal="true" />
                  </data>
                </addData>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">itfMachineState := itfNewState;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD INTERNAL METH_setState
VAR_INPUT
  itfNewState : I_machineState;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupEnable" ObjectId="9be31037-13dd-40bf-9c45-1f8cbc4d092e">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">itfMachineState.METH_groupEnable();
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupEnable
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_Init" ObjectId="063bcecb-302e-431d-9890-907512dadcf6">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="bInitRetains">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the retain variables are initialized (reset warm / reset cold)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bInCopyCode">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE: the instance will be copied to the copy code afterward (online change)</xhtml>
                    </documentation>
                  </variable>
                  <variable name="rAxisGrpRefSm3">
                    <type>
                      <derived name="REFERENCE TO SM3_Robotics.AXIS_GROUP_REF_SM3" />
                    </type>
                  </variable>
                  <variable name="sGrpName">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="sAxisNames">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> comma delimited string</xhtml>
                    </documentation>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init : BOOL
VAR_INPUT
  bInitRetains   : BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
  bInCopyCode    : BOOL; // TRUE: the instance will be copied to the copy code afterward (online change)
  rAxisGrpRefSm3 : REFERENCE TO SM3_Robotics.AXIS_GROUP_REF_SM3;
  sGrpName       : STRING;
  sAxisNames     : STRING; // comma delimited string
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FB_Init is always available implicitly and it is used primarily for initialization.
The return value is not evaluated. For a specific influence, you can also declare the
methods explicitly and provide additional code there with the standard initialization
code. You can evaluate the return value.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF __ISVALIDREF(rAxisGrpRefSm3) THEN
	THIS^.rAxisGrpRefSm3 REF= rAxisGrpRefSm3;
END_IF
THIS^.sGrpName := sGrpName;
THIS^.sAxisNames := sAxisNames;

// initialize respective ST_methConfig 
// end states
THIS^.fbPoweredOff();
THIS^.fbPoweredOn();
THIS^.fbEnabledAxes();
THIS^.fbDisabledAxes();
THIS^.fbHalted();
// THIS^.fbMovedCrcAbs();
THIS^.fbMovedToPosition();
// interim states
THIS^.fbPoweringOff();
THIS^.fbPoweringOn();
THIS^.fbEnablingAxes();
THIS^.fbDisablingAxes();
THIS^.fbHalting();
// THIS^.fbMovingCrcAbs();
THIS^.fbMovingToPosition();
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init : BOOL
VAR_INPUT
  bInitRetains   : BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
  bInCopyCode    : BOOL; // TRUE: the instance will be copied to the copy code afterward (online change)
  rAxisGrpRefSm3 : REFERENCE TO SM3_Robotics.AXIS_GROUP_REF_SM3;
  sGrpName       : STRING;
  sAxisNames     : STRING; // comma delimited string
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupDisable" ObjectId="63b21f67-3b88-4e96-aff5-a3b01ec5a4a0">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">itfMachineState.METH_groupDisable();
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupDisable
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_grpPwrOn" ObjectId="96d8cb53-ef23-4b59-991f-54d06c5c8a5e">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">itfMachineState.METH_grpPwrOn();
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOn
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_grpPwrOff" ObjectId="014e17b5-6183-4674-b116-7a7dac00c407">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">itfMachineState.METH_grpPwrOff();
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOff
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_moveToPosition" ObjectId="72b84b22-5e3c-46c3-a257-c3eddf72cb9b">
              <interface>
                <inOutVars>
                  <variable name="mcMoveLinkedList">
                    <type>
                      <derived name="COL.LinkedList" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <outputVars>
                  <variable name="xMotionFinished">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">itfMachineState.METH_moveToPosition(mcMoveLinkedList,
                                    xMotionFinished=&gt;xMotionFinished);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupHalt" ObjectId="ec26c4ba-20f5-4d18-830a-dcdd312047e6">
              <interface>
                <inputVars>
                  <variable name="stHaltParams">
                    <type>
                      <derived name="ST_haltParams" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <outputVars>
                  <variable name="xHaltFinished">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">itfMachineState.METH_groupHalt(stHaltParams:=stHaltParams,
                          xHaltFinished=&gt;xHaltFinished);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_poweringOnState" ObjectId="436cb421-48ec-4e24-93bc-a9185357e948">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_poweringOnState := fbPoweringOn;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_poweringOnState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_poweredOnState" ObjectId="c5a26ea8-3a91-4ddb-ad81-8f65ac783780">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_poweredOnState := fbPoweredOn;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_poweredOnState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_poweredOffState" ObjectId="0392e298-daa9-4d97-a9e2-511a44d21d55">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_poweredOffState := fbPoweredOff;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_poweredOffState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_fbLogAddPointer" ObjectId="6a197efa-a675-4c80-97e3-33b55a85028b">
              <interface>
                <returnType>
                  <pointer>
                    <baseType>
                      <derived name="FB_logAdd" />
                    </baseType>
                  </pointer>
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_fbLogAddPointer := ADR(fbLogAdd);
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_fbLogAddPointer : POINTER TO FB_logAdd
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_axisGroupPointer" ObjectId="7a29e5ae-58e1-4aa6-949d-2c478e953ed4">
              <interface>
                <returnType>
                  <pointer>
                    <baseType>
                      <derived name="AXIS_GROUP_REF_SM3" />
                    </baseType>
                  </pointer>
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_axisGroupPointer := ADR(rAxisGrpRefSm3);
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_axisGroupPointer : POINTER TO AXIS_GROUP_REF_SM3
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_poweringOffState" ObjectId="a4ed17f2-44db-44e6-991c-9223a9d0cab8">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_poweringOffState := fbPoweringOff;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_poweringOffState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_enabledAxesState" ObjectId="c495c546-6bf6-4f52-b7b7-109f741269d8">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_enabledAxesState := fbEnabledAxes;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_enabledAxesState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_enablingAxesState" ObjectId="907896e7-75e3-4bb2-b747-f2bcc48d1bce">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_enablingAxesState := fbEnablingAxes;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_enablingAxesState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_disabledAxesState" ObjectId="beb8fe50-4dc4-461d-8090-4e061bdc2d5b">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_disabledAxesState := fbDisabledAxes;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_disabledAxesState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_disablingAxesState" ObjectId="5f3586e5-6c90-4822-9189-a5fa263c26e2">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_disablingAxesState := fbDisablingAxes;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_disablingAxesState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_movedToPositionState" ObjectId="488cb3f3-ce1f-47df-bbd4-0f342ee04658">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_movedToPositionState := fbMovedToPosition;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_movedToPositionState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_movingToPositionState" ObjectId="2973739d-5c2c-4eb2-86b4-b4c236cf7f09">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_movingToPositionState := fbMovingToPosition;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_movingToPositionState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_haltingState" ObjectId="eb83ce06-7ecc-4edb-ab43-26941fa13702">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_haltingState := fbHalting;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_haltingState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_haltedState" ObjectId="0344df03-5fb1-4486-bb7d-d125401b3a52">
              <interface>
                <returnType>
                  <derived name="I_machineState" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                      <AccessModifiers Internal="true" />
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_haltedState := fbHalted;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_haltedState : I_machineState
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK FB_machine
VAR
  // everything initialized in FB_Init
  rAxisGrpRefSm3 : REFERENCE TO SM3_Robotics.AXIS_GROUP_REF_SM3;
  sGrpName       : STRING;
  sAxisNames     : STRING; // comma delimited string

  // logger used by FB_baseMachineState
  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));

  // state pattern
  itfMachineState : I_machineState := fbPoweredOff;

  // end states
  fbPoweredOff      : FB_poweredOffState(THIS);
  fbPoweredOn       : FB_poweredOnState(THIS);
  fbEnabledAxes     : FB_enabledAxesState(THIS);
  fbDisabledAxes    : FB_disabledAxesState(THIS);
  fbHalted          : FB_haltedState(THIS);
  fbMovedToPosition : FB_movedToPositionState(THIS);
  // interim states
  fbPoweringOff      : FB_poweringOffState(THIS);
  fbPoweringOn       : FB_poweringOnState(THIS);
  fbEnablingAxes     : FB_enablingAxesState(THIS);
  fbDisablingAxes    : FB_disablingAxesState(THIS);
  fbHalting          : FB_haltingState(THIS);
  fbMovingToPosition : FB_movingToPositionState(THIS);
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0a5d03ba-3f6b-42ad-b3ce-1935a74d83a6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_abstractInterimMachineState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractMachineState</Extends>
                <Implements>I_machineState</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupEnable" ObjectId="e47b4ba1-63e2-4c1f-9fb2-80bb173e7e4b">
              <interface>
                <localVars>
                  <variable name="mcGrpEnable">
                    <type>
                      <derived name="SM3_Robotics.MC_GroupEnable" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupEnable
VAR
  mcGrpEnable : SM3_Robotics.MC_GroupEnable;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupEnable THEN
  mcGrpEnable(AxisGroup:=pFbMachine^.PROP_axisGroupPointer^,
              Execute:=TRUE);

  IF mcGrpEnable.Error THEN
    METH_printSmcError(smcErrorId:=mcGrpEnable.ErrorID,
                    sCmpName:=__POUNAME());

    RETURN;
  END_IF

  METH_appendStateFbLog();
  METH_appendStatusLogs();

  IF mcGrpEnable.Done THEN
    METH_appendInfoLog('Enabled axes');

    pFbMachine^.METH_setState(pFbMachine^.PROP_enabledAxesState);
  ELSE
    pFbMachine^.METH_setState(pFbMachine^.PROP_enablingAxesState);
  END_IF

  METH_printInfo(__POUNAME());

END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupEnable
VAR
  mcGrpEnable : SM3_Robotics.MC_GroupEnable;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_openGripper" ObjectId="be00b2b4-aab8-4278-a5d0-f34f4e1f7cee">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// IF stMethConfig.xOpenGripper THEN
// 	
// END_IF                             </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_openGripper
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupHalt" ObjectId="a54db6dd-4aa8-4509-837e-1457310f9864">
              <interface>
                <inputVars>
                  <variable name="stHaltParams">
                    <type>
                      <derived name="ST_haltParams" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
VAR
  mcGrpHalt    : SM3_Robotics.MC_GroupHalt;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <outputVars>
                  <variable name="xHaltFinished">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
VAR
  mcGrpHalt    : SM3_Robotics.MC_GroupHalt;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </outputVars>
                <localVars>
                  <variable name="mcGrpHalt">
                    <type>
                      <derived name="SM3_Robotics.MC_GroupHalt" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
VAR
  mcGrpHalt    : SM3_Robotics.MC_GroupHalt;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// default values cannot be set in abstract or interface method
xHaltFinished := FALSE;

IF stMethConfig.xGroupHalt THEN

  mcGrpHalt(AxisGroup:=pFbMachine^.PROP_axisGroupPointer^,
            Execute:=TRUE,
            Deceleration:=stHaltParams.lrDec,
            Jerk:=stHaltParams.lrJrk,
            AccFactor:=stHaltParams.lrAccFctr,
            JerkFactor:=stHaltParams.lrJrkFctr);

  IF mcGrpHalt.Error THEN
    METH_printSmcError(smcErrorId:=mcGrpHalt.ErrorID,
                    sCmpName:=__POUNAME());

    RETURN;
  END_IF

  METH_appendStateFbLog();
  METH_appendStatusLogs();

  IF mcGrpHalt.Done THEN
    METH_appendInfoLog('Halted');

    // remember to reset execute since persistent FB otherwise will not move to next position when called
    mcGrpHalt(AxisGroup:=pFbMachine^.PROP_axisGroupPointer^,
              Execute:=FALSE);

    xHaltFinished := TRUE;

    pFbMachine^.METH_setState(pFbMachine^.PROP_haltedState);
  ELSE
    pFbMachine^.METH_setState(pFbMachine^.PROP_haltingState);
  END_IF

  // axis positions already printed in METH_appendStatusLogs()
  IF stHaltParams.smcCrdSys &lt;&gt; SM3_Robotics.SMC_COORD_SYSTEM.ACS THEN
    METH_appendCurrentPositionLogs(smcCrdSys:=stHaltParams.smcCrdSys);
  END_IF

  METH_printInfo(__POUNAME());

END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
VAR
  mcGrpHalt    : SM3_Robotics.MC_GroupHalt;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_grpPwrOff" ObjectId="1ca5bc0a-2100-412b-bf45-9eb88e171c0d">
              <interface>
                <localVars>
                  <variable name="smcGrpPwr">
                    <type>
                      <derived name="SM3_Robotics.SMC_GroupPower" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOff
VAR
  smcGrpPwr : SM3_Robotics.SMC_GroupPower;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupPowerOff THEN
  smcGrpPwr(AxisGroup:=pFbMachine^.PROP_axisGroupPointer^,
            Enable:=TRUE,
            bRegulatorOn:=FALSE,
            bDriveStart:=FALSE);

  IF smcGrpPwr.Error THEN
    METH_printSmcError(smcErrorId:=smcGrpPwr.ErrorID,
                    sCmpName:=__POUNAME());

    RETURN;
  END_IF

  METH_appendStateFbLog();
  METH_appendStatusLogs();

  IF smcGrpPwr.Status THEN
    METH_appendInfoLog('Powered off axes');

    pFbMachine^.METH_setState(pFbMachine^.PROP_poweredOffState);
  ELSE
    pFbMachine^.METH_setState(pfbmachine^.PROP_poweringOffState);
  END_IF

  METH_printInfo(__POUNAME());

END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOff
VAR
  smcGrpPwr : SM3_Robotics.SMC_GroupPower;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_grpPwrOn" ObjectId="c35311d7-4da0-4e6c-a83a-1904d330a535">
              <interface>
                <localVars>
                  <variable name="smcGrpPwr">
                    <type>
                      <derived name="SM3_Robotics.SMC_GroupPower" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOn
VAR
  smcGrpPwr : SM3_Robotics.SMC_GroupPower;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupPowerOn THEN
  smcGrpPwr(AxisGroup:=pFbMachine^.PROP_axisGroupPointer^,
            Enable:=TRUE,
            bRegulatorOn:=TRUE,
            bDriveStart:=TRUE);

  IF smcGrpPwr.Error THEN
    METH_printSmcError(smcErrorId:=smcGrpPwr.ErrorID,
                    sCmpName:=__POUNAME());

    RETURN;
  END_IF

  METH_appendStateFbLog();
  METH_appendStatusLogs();

  IF smcGrpPwr.Status THEN
    METH_appendInfoLog('Powered on axes');

    pFbMachine^.METH_setState(pFbMachine^.PROP_poweredOnState);
  ELSE
    pFbMachine^.METH_setState(pfbmachine^.PROP_poweringOnState);
  END_IF

  METH_printInfo(__POUNAME());

END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOn
VAR
  smcGrpPwr : SM3_Robotics.SMC_GroupPower;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_closeGripper" ObjectId="ca5539e2-e23c-4e4f-8d00-94d86a3160c5">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// IF stMethConfig.xCloseGripper THEN
// 	
// END_IF                             </xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_closeGripper
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_moveToPosition" ObjectId="2737c22c-77f9-4036-8764-c174aa183a1f">
              <interface>
                <inOutVars>
                  <variable name="mcMoveLinkedList">
                    <type>
                      <derived name="COL.LinkedList" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
	linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;

  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <outputVars>
                  <variable name="xMotionFinished">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
	linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;

  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </outputVars>
                <localVars>
                  <variable name="linkedListIterator">
                    <type>
                      <derived name="COL.LinkedListIterator" />
                    </type>
                  </variable>
                  <variable name="itfLinkedListElem">
                    <type>
                      <derived name="COL.IElement" />
                    </type>
                  </variable>
                  <variable name="itfMcMoveElement">
                    <type>
                      <derived name="I_mcMoveElement" />
                    </type>
                  </variable>
                  <variable name="stMcMoveParams">
                    <type>
                      <derived name="ST_mcMoveParams" />
                    </type>
                  </variable>
                  <variable name="mcMoveLinkedListInfo">
                    <type>
                      <derived name="__SYSTEM.VAR_INFO" />
                    </type>
                  </variable>
                  <variable name="itfLinkedListElemInfo">
                    <type>
                      <derived name="__SYSTEM.VAR_INFO" />
                    </type>
                  </variable>
                  <variable name="itfMcMoveElementInfo">
                    <type>
                      <derived name="__SYSTEM.VAR_INFO" />
                    </type>
                  </variable>
                  <variable name="xDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xBusy">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xActive">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xCmdAborted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xCmdAccepted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="smcError">
                    <type>
                      <derived name="SM3_Error.SMC_ERROR" />
                    </type>
                  </variable>
                  <variable name="smcMvmtId">
                    <type>
                      <derived name="SM3_Common.SMC_Movement_Id" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
	linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;

  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// default values cannot be set in abstract or interface method
xMotionFinished := FALSE;

IF stMethConfig.xMoveDirAbs THEN

  mcMoveLinkedListInfo := __VARINFO(mcMoveLinkedList);

  IF mcMoveLinkedList.CountElements() &lt;= 0 THEN
    METH_appendInfoLog('No elements in ');
    METH_appendInfoLog(mcMoveLinkedListInfo.Symbol);
    METH_appendInfoLog('!');
  ELSE
    mcMoveLinkedList.ElementIterator(itfIterator:=linkedListIterator);

    WHILE linkedListIterator.HasNext() DO
      linkedListIterator.Next(itfElement=&gt;itfLinkedListElem);

      itfLinkedListElemInfo := __VARINFO(itfLinkedListElem);
      itfMcMoveElementInfo := __VARINFO(itfMcMoveElement);

      IF NOT __QUERYINTERFACE(itfLinkedListElem, itfMcMoveElement) THEN
        METH_appendInfoLog('Unable to convert ');
        METH_appendInfoLog(itfLinkedListElemInfo.Symbol);
        METH_appendInfoLog(' to ');
        METH_appendInfoLog(itfMcMoveElementInfo.Symbol);
        METH_appendInfoLog('!');
      ELSE
        itfMcMoveElement.METH_executeMcMove(axisGrpRefSm3:=pFbMachine^.PROP_axisGroupPointer^,
                                            xDone=&gt;xDone,
                                            xBusy=&gt;xBusy,
                                            xActive=&gt;xActive,
                                            xCmdAborted=&gt;xCmdAborted,
                                            xCmdAccepted=&gt;xCmdAccepted,
                                            xError=&gt;xError,
                                            smcError=&gt;smcError,
                                            smcMvmtId=&gt;smcMvmtId);

        IF xError THEN
          METH_printSmcError(smcErrorId:=smcError,
                             sCmpName:=__POUNAME());

          RETURN;
        END_IF

        METH_appendStateFbLog();
        METH_appendStatusLogs();

        stMcMoveParams := itfMcMoveElement.PROP_stMcMoveParams;

        IF xDone THEN
          METH_appendInfoLog('Moved to position');

          // need to implement method containing case statement for appendTargetPositionLogs
          METH_appendTargetPositionLogs(smcCrdSys:=stMcMoveParams.stMoveDirParams.smcCrdSys,
                                        smcPosRef:=stMcMoveParams.stMoveDirParams.smcPosRef,
                                        eMcMotionFbType:=E_mcMotionFbType.moveDirAbs);

          // remember to reset execute since persistent FB otherwise will not move to next position when called
          itfMcMoveElement.METH_resetMcMove(pFbMachine^.PROP_axisGroupPointer^);

          xMotionFinished := TRUE;

          pFbMachine^.METH_setState(pFbMachine^.PROP_movedToPositionState);
        ELSE
          // axis positions already printed in METH_appendStatusLogs()
          IF stMcMoveParams.stMoveDirParams.smcCrdSys &lt;&gt; SM3_Robotics.SMC_COORD_SYSTEM.ACS THEN
            METH_appendCurrentPositionLogs(smcCrdSys:=stMcMoveParams.stMoveDirParams.smcCrdSys);
          END_IF

          pFbMachine^.METH_setState(pFbMachine^.PROP_movingToPositionState);
        END_IF

      END_IF

      METH_printInfo(__POUNAME());
    END_WHILE
  END_IF
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR
VAR
	linkedListIterator : COL.LinkedListIterator;
  itfLinkedListElem  : COL.IElement;
  itfMcMoveElement   : I_mcMoveElement;
  stMcMoveParams     : ST_mcMoveParams;

  mcMoveLinkedListInfo  : __SYSTEM.VAR_INFO;
  itfLinkedListElemInfo : __SYSTEM.VAR_INFO;
  itfMcMoveElementInfo  : __SYSTEM.VAR_INFO;

  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_groupDisable" ObjectId="99181c6f-2e30-47d1-bd24-c800a8e4e2ec">
              <interface>
                <localVars>
                  <variable name="mcGrpDisable">
                    <type>
                      <derived name="SM3_Robotics.MC_GroupDisable" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupDisable
VAR
  mcGrpDisable : SM3_Robotics.MC_GroupDisable;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF stMethConfig.xGroupDisable THEN
  mcGrpDisable(AxisGroup:=pFbMachine^.PROP_axisGroupPointer^,
               Execute:=TRUE);

  IF mcGrpDisable.Error THEN
    METH_printSmcError(smcErrorId:=mcGrpDisable.ErrorID,
                    sCmpName:=__POUNAME());

    RETURN;
  END_IF

  METH_appendStateFbLog();
  METH_appendStatusLogs();

  IF mcGrpDisable.Done THEN
    METH_appendInfoLog('Disabled axes');

    pFbMachine^.METH_setState(pFbMachine^.PROP_disabledAxesState);
  ELSE
    pFbMachine^.METH_setState(pFbMachine^.PROP_disablingAxesState);
  END_IF

  METH_printInfo(__POUNAME());

END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupDisable
VAR
  mcGrpDisable : SM3_Robotics.MC_GroupDisable;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL ABSTRACT FB_abstractInterimMachineState EXTENDS FB_abstractMachineState IMPLEMENTS I_machineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>fe4c1232-1cd8-4675-88c8-02180d7ebc18</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_disablingAxesState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractInterimMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := TRUE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := FALSE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_disablingAxesState EXTENDS FB_abstractInterimMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>bc0257cd-d6e8-4740-869c-3d7e58905b2d</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_enablingAxesState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractInterimMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := TRUE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := FALSE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_enablingAxesState EXTENDS FB_abstractInterimMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6dca4347-01db-424d-92d3-d303fd40e5d3</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_haltingState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractInterimMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := TRUE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_haltingState EXTENDS FB_abstractInterimMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>a74398c2-cb42-4897-83eb-5188ce9a37a6</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_movingToPositionState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractInterimMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := TRUE;
stMethConfig.xGroupHalt     := TRUE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_movingToPositionState EXTENDS FB_abstractInterimMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>320003f0-0ae0-45bf-9ab6-88539f217e39</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_poweringOffState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractInterimMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := TRUE;
stMethConfig.xGroupPowerOn  := FALSE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := FALSE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_poweringOffState EXTENDS FB_abstractInterimMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>effbe06d-c124-4817-8cb9-1ed377d5362e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_poweringOnState" pouType="functionBlock">
        <interface>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>FB_abstractInterimMachineState</Extends>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">sStateFb := __POUNAME();

stMethConfig.xGroupPowerOff := FALSE;
stMethConfig.xGroupPowerOn  := TRUE;
stMethConfig.xGroupEnable   := FALSE;
stMethConfig.xGroupDisable  := FALSE;
stMethConfig.xMoveDirAbs    := FALSE;
stMethConfig.xGroupHalt     := FALSE;
stMethConfig.xCloseGripper  := FALSE;
stMethConfig.xOpenGripper   := FALSE;
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_poweringOnState EXTENDS FB_abstractInterimMachineState
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>20a9ba4d-4bb5-420d-8f04-11ad06ccd218</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="F_lrealToLintBits" pouType="function">
        <interface>
          <returnType>
            <LINT />
          </returnType>
          <inputVars>
            <variable name="lrVal">
              <type>
                <LREAL />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// supposed to replicate floatToIntBits() in Java at
// https://github.com/openjdk/jdk/blob/739769c8fc4b496f08a92225a12d07414537b6c0/src/java.base/share/classes/java/lang/Float.java#L775
// , use
// https://www.exploringbinary.com/floating-point-converter/ 
// and 
// https://www.exploringbinary.com/base-converter/ 
// to double check conversion of floating point binary to base 10 integer 
// (note that website shows big endian and defaults to single precision float whereas LREAL is double precision float)
FUNCTION F_lrealToLintBits : LINT
VAR_INPUT
  lrVal : LREAL;
END_VAR
VAR
  uLrealToLintBits : U_lrealToRawLintBits; // for interpreting LREAL as base 10 LINT
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </inputVars>
          <localVars>
            <variable name="uLrealToLintBits">
              <type>
                <derived name="U_lrealToRawLintBits" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> for interpreting LREAL as base 10 LINT</xhtml>
              </documentation>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// supposed to replicate floatToIntBits() in Java at
// https://github.com/openjdk/jdk/blob/739769c8fc4b496f08a92225a12d07414537b6c0/src/java.base/share/classes/java/lang/Float.java#L775
// , use
// https://www.exploringbinary.com/floating-point-converter/ 
// and 
// https://www.exploringbinary.com/base-converter/ 
// to double check conversion of floating point binary to base 10 integer 
// (note that website shows big endian and defaults to single precision float whereas LREAL is double precision float)
FUNCTION F_lrealToLintBits : LINT
VAR_INPUT
  lrVal : LREAL;
END_VAR
VAR
  uLrealToLintBits : U_lrealToRawLintBits; // for interpreting LREAL as base 10 LINT
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> supposed to replicate floatToIntBits() in Java at
 https://github.com/openjdk/jdk/blob/739769c8fc4b496f08a92225a12d07414537b6c0/src/java.base/share/classes/java/lang/Float.java#L775
 , use
 https://www.exploringbinary.com/floating-point-converter/ 
 and 
 https://www.exploringbinary.com/base-converter/ 
 to double check conversion of floating point binary to base 10 integer 
 (note that website shows big endian and defaults to single precision float whereas LREAL is double precision float)</xhtml>
          </documentation>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">IF CW40.SM3_Basic.FPU.IsLRealPosInfinity(lrVal) THEN
  F_lrealToLintBits := 2139095040; // corresponds to 0x7f800000
ELSIF CW40.SM3_Basic.FPU.IsLRealNegInfinity(lrVal) THEN
  F_lrealToLintBits := 4286578688; // corresponds to 0xff800000
ELSIF CW40.SM3_Basic.FPU.IsLRealNaN(lrVal) THEN
  F_lrealToLintBits := 2143289344; // corresponds to 0x7fc00000
ELSE
  uLrealToLintBits.lrVal := lrVal;
  F_lrealToLintBits := uLrealToLintBits.liVal;
END_IF
</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">// supposed to replicate floatToIntBits() in Java at
// https://github.com/openjdk/jdk/blob/739769c8fc4b496f08a92225a12d07414537b6c0/src/java.base/share/classes/java/lang/Float.java#L775
// , use
// https://www.exploringbinary.com/floating-point-converter/ 
// and 
// https://www.exploringbinary.com/base-converter/ 
// to double check conversion of floating point binary to base 10 integer 
// (note that website shows big endian and defaults to single precision float whereas LREAL is double precision float)
FUNCTION F_lrealToLintBits : LINT
VAR_INPUT
  lrVal : LREAL;
END_VAR
VAR
  uLrealToLintBits : U_lrealToRawLintBits; // for interpreting LREAL as base 10 LINT
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3c2baf39-e60f-469e-85ab-c039248e89fb</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="FB_mcMoveElement" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="stMcMoveParams">
              <type>
                <derived name="ST_mcMoveParams" />
              </type>
            </variable>
            <variable name="uliMotionIndx">
              <type>
                <ULINT />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_mcMoveElement EXTENDS COL.LinkedListElementBase IMPLEMENTS I_mcMoveElement
VAR_INPUT
  stMcMoveParams : ST_mcMoveParams;
  uliMotionIndx  : ULINT;
END_VAR
VAR
  mcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute;
  mcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative;
  mcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;
  mcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative;
  mcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  mcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative;

  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </inputVars>
          <localVars>
            <variable name="mcMoveCrcAbs">
              <type>
                <derived name="SM3_Robotics.MC_MoveCircularAbsolute" />
              </type>
            </variable>
            <variable name="mcMoveCrcRel">
              <type>
                <derived name="SM3_Robotics.MC_MoveCircularRelative" />
              </type>
            </variable>
            <variable name="mcMoveDirAbs">
              <type>
                <derived name="SM3_Robotics.MC_MoveDirectAbsolute" />
              </type>
            </variable>
            <variable name="mcMoveDirRel">
              <type>
                <derived name="SM3_Robotics.MC_MoveDirectRelative" />
              </type>
            </variable>
            <variable name="mcMoveLinAbs">
              <type>
                <derived name="SM3_Robotics.MC_MoveLinearAbsolute" />
              </type>
            </variable>
            <variable name="mcMoveLinRel">
              <type>
                <derived name="SM3_Robotics.MC_MoveLinearRelative" />
              </type>
            </variable>
            <variable name="fbLogAdd">
              <type>
                <derived name="FB_logAdd" />
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                  <InputAssignments>
                    <InputAssignment>
                      <Name>pCmpName</Name>
                      <Value>ADR('FB_mcMoveElement')</Value>
                    </InputAssignment>
                  </InputAssignments>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="old_input_assignments" Value="" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_mcMoveElement EXTENDS COL.LinkedListElementBase IMPLEMENTS I_mcMoveElement
VAR_INPUT
  stMcMoveParams : ST_mcMoveParams;
  uliMotionIndx  : ULINT;
END_VAR
VAR
  mcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute;
  mcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative;
  mcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;
  mcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative;
  mcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  mcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative;

  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
              <Inheritance>
                <Extends>COL.LinkedListElementBase</Extends>
                <Implements>I_mcMoveElement</Implements>
              </Inheritance>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
              <AccessModifiers Internal="true" />
            </data>
          </addData>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ElementHashCode" ObjectId="3acaf4e7-efb7-4391-ae27-fec2970265b2">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <localVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Returns the hashcode of this element.
 This method is used by hash based collections (e.g. |Hashtable|) to get the hashcode from a element.
 IMPORTANT: The value of the method MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementHashCode : LINT
VAR
  liPrime   : LINT := 37;
  liInitVal : LINT := 1; // has to be nonzero
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> Returns the hashcode of this element.
 This method is used by hash based collections (e.g. |Hashtable|) to get the hashcode from a element.
 IMPORTANT: The value of the method MUST NOT be changed during the lifecycle of the object.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// https://stackoverflow.com/questions/5443136/are-two-java-objects-with-same-hashcodes-not-necessarily-equal/5443140#5443140
// IF two objects have the same hashcode THEN they are NOT necessarily equal. Otherwise you will have discovered the perfect hash FUNCTION.
// But the opposite is true: if the objects are equal, then they must have the same hashcode.

// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
ElementHashCode := liInitVal;

ElementHashCode := (ElementHashCode * liPrime) + ULINT_TO_LINT(uliMotionIndx);
ElementHashCode := (ElementHashCode * liPrime) + TO_LINT(stMcMoveParams.eMcMotionFbType);

CASE stMcMoveParams.eMcMotionFbType OF

  E_mcMotionFbType.moveCrcAbs:
    ElementHashCode := (ElementHashCode * liPrime) + METH_stMoveCrcParamsHashCode();
    ElementHashCode := (ElementHashCode * liPrime) + METH_mcMoveCrcAbsHashCode();

  E_mcMotionFbType.moveCrcRel:
    ElementHashCode := (ElementHashCode * liPrime) + METH_stMoveCrcParamsHashCode();
    ElementHashCode := (ElementHashCode * liPrime) + METH_mcMoveCrcRelHashCode();

  E_mcMotionFbType.moveDirAbs:
    ElementHashCode := (ElementHashCode * liPrime) + METH_stMoveDirParamsHashCode();
    ElementHashCode := (ElementHashCode * liPrime) + METH_mcMoveDirAbsHashCode();

  E_mcMotionFbType.moveDirRel:
    ElementHashCode := (ElementHashCode * liPrime) + METH_stMoveDirParamsHashCode();
    ElementHashCode := (ElementHashCode * liPrime) + METH_mcMoveDirRelHashCode();

  E_mcMotionFbType.moveLinAbs:
    ElementHashCode := (ElementHashCode * liPrime) + METH_stMoveLinParamsHashCode();
    ElementHashCode := (ElementHashCode * liPrime) + METH_mcMoveLinAbsHashCode();

  E_mcMotionFbType.moveLinRel:
    ElementHashCode := (ElementHashCode * liPrime) + METH_stMoveLinParamsHashCode();
    ElementHashCode := (ElementHashCode * liPrime) + METH_mcMoveLinRelHashCode();

END_CASE
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Returns the hashcode of this element.
 This method is used by hash based collections (e.g. |Hashtable|) to get the hashcode from a element.
 IMPORTANT: The value of the method MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementHashCode : LINT
VAR
  liPrime   : LINT := 37;
  liInitVal : LINT := 1; // has to be nonzero
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ElementCompareTo" ObjectId="3cb7c9ce-63e0-4652-bfe6-5b423fd2153a">
              <interface>
                <returnType>
                  <INT />
                </returnType>
                <inputVars>
                  <variable name="itfElement">
                    <type>
                      <derived name="COL.IElement" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> The element to compare</xhtml>
                    </documentation>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Compares this element with itfElement.
 Returns 0 if the elements are equal, &lt; 0 if the element is less than itfElement, 
 &gt; 0 if the element is greater than itfElement.
 This method will be called from sorted collections (e.g. |SortedList|) to sort elements.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementCompareTo : INT
VAR_INPUT
  (* The element to compare*)
  itfElement : COL.IElement;
END_VAR
VAR
  itfMcMoveElem : I_mcMoveElement; // __QUERYINTERFACE will convert to this
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="itfMcMoveElem">
                    <type>
                      <derived name="I_mcMoveElement" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> __QUERYINTERFACE will convert to this</xhtml>
                    </documentation>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Compares this element with itfElement.
 Returns 0 if the elements are equal, &lt; 0 if the element is less than itfElement, 
 &gt; 0 if the element is greater than itfElement.
 This method will be called from sorted collections (e.g. |SortedList|) to sort elements.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementCompareTo : INT
VAR_INPUT
  (* The element to compare*)
  itfElement : COL.IElement;
END_VAR
VAR
  itfMcMoveElem : I_mcMoveElement; // __QUERYINTERFACE will convert to this
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> Compares this element with itfElement.
 Returns 0 if the elements are equal, &lt; 0 if the element is less than itfElement, 
 &gt; 0 if the element is greater than itfElement.
 This method will be called from sorted collections (e.g. |SortedList|) to sort elements.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// default to no change when sorting
ElementCompareTo := 0;

// diMotionIndx used for sorting
IF __QUERYINTERFACE(itfElement, itfMcMoveElem) THEN
  IF (THIS^.PROP_motionIndx &gt; itfMcMoveElem.PROP_motionIndx) THEN
    ElementCompareTo := 1;
  ELSIF (THIS^.PROP_motionIndx &lt; itfMcMoveElem.PROP_motionIndx) THEN
    ElementCompareTo := -1;
  END_IF
END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Compares this element with itfElement.
 Returns 0 if the elements are equal, &lt; 0 if the element is less than itfElement, 
 &gt; 0 if the element is greater than itfElement.
 This method will be called from sorted collections (e.g. |SortedList|) to sort elements.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementCompareTo : INT
VAR_INPUT
  (* The element to compare*)
  itfElement : COL.IElement;
END_VAR
VAR
  itfMcMoveElem : I_mcMoveElement; // __QUERYINTERFACE will convert to this
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="ElementEquals" ObjectId="395440b1-8664-4bf2-9d38-d22372b8dece">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="itfElement">
                    <type>
                      <derived name="COL.IElement" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> The element to compare</xhtml>
                    </documentation>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Returns true of this element and itfElement are equal.
 This method will be called from the function block |HashTable| to find an element by key if the hashcode of an element collides with an other element.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementEquals : BOOL
VAR_INPUT
  (* The element to compare*)
  itfElement : COL.IElement;
END_VAR
VAR
  itfMcMoveElem : I_mcMoveElement; // __QUERYINTERFACE will convert to this

  instMcMoveParams : ST_mcMoveParams;

  lrTol : LREAL := 1E-3;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="itfMcMoveElem">
                    <type>
                      <derived name="I_mcMoveElement" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> __QUERYINTERFACE will convert to this</xhtml>
                    </documentation>
                  </variable>
                  <variable name="instMcMoveParams">
                    <type>
                      <derived name="ST_mcMoveParams" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Returns true of this element and itfElement are equal.
 This method will be called from the function block |HashTable| to find an element by key if the hashcode of an element collides with an other element.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementEquals : BOOL
VAR_INPUT
  (* The element to compare*)
  itfElement : COL.IElement;
END_VAR
VAR
  itfMcMoveElem : I_mcMoveElement; // __QUERYINTERFACE will convert to this

  instMcMoveParams : ST_mcMoveParams;

  lrTol : LREAL := 1E-3;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> Returns true of this element and itfElement are equal.
 This method will be called from the function block |HashTable| to find an element by key if the hashcode of an element collides with an other element.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">ElementEquals := FALSE;

IF __QUERYINTERFACE(itfElement, itfMcMoveElem) THEN

  IF (THIS^.uliMotionIndx &lt;&gt; itfMcMoveElem.PROP_motionIndx) THEN
    RETURN;
  END_IF

  instMcMoveParams := itfMcMoveElem.PROP_stMcMoveParams;

  IF (THIS^.stMcMoveParams.eMcMotionFbType &lt;&gt; instMcMoveParams.eMcMotionFbType) THEN
    RETURN;
  END_IF

  CASE THIS^.stMcMoveParams.eMcMotionFbType OF

    E_mcMotionFbType.moveCrcAbs:
      ElementEquals := (
        METH_stMoveCrcParamsEquals(instMcMoveParams.stMoveCrcParams, lrTol) AND METH_mcMoveCrcAbsEquals(itfMcMoveElem.PROP_mcMoveCrcAbs, lrTol)
        );

    E_mcMotionFbType.moveCrcRel:
      ElementEquals := (
        METH_stMoveCrcParamsEquals(instMcMoveParams.stMoveCrcParams, lrTol) AND METH_mcMoveCrcRelEquals(itfMcMoveElem.PROP_mcMoveCrcRel, lrTol)
        );

    E_mcMotionFbType.moveDirAbs:
      ElementEquals := (
        METH_stMoveDirParamsEquals(instMcMoveParams.stMoveDirParams, lrTol) AND METH_mcMoveDirAbsEquals(itfMcMoveElem.PROP_mcMoveDirAbs, lrTol)
        );

    E_mcMotionFbType.moveDirRel:
      ElementEquals := (
        METH_stMoveDirParamsEquals(instMcMoveParams.stMoveDirParams, lrTol) AND METH_mcMoveDirRelEquals(itfMcMoveElem.PROP_mcMoveDirRel, lrTol)
        );

    E_mcMotionFbType.moveLinAbs:
      ElementEquals := (
        METH_stMoveLinParamsEquals(instMcMoveParams.stMoveLinParams, lrTol) AND METH_mcMoveLinAbsEquals(itfMcMoveElem.PROP_mcMoveLinAbs, lrTol)
        );

    E_mcMotionFbType.moveLinRel:
      ElementEquals := (
        METH_stMoveLinParamsEquals(instMcMoveParams.stMoveLinParams, lrTol) AND METH_mcMoveLinRelEquals(itfMcMoveElem.PROP_mcMoveLinRel, lrTol)
        );

  END_CASE

END_IF
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Returns true of this element and itfElement are equal.
 This method will be called from the function block |HashTable| to find an element by key if the hashcode of an element collides with an other element.
 IMPORTANT: The underlying value to be compared with MUST NOT be changed during the lifecycle of the object.*)
METHOD ElementEquals : BOOL
VAR_INPUT
  (* The element to compare*)
  itfElement : COL.IElement;
END_VAR
VAR
  itfMcMoveElem : I_mcMoveElement; // __QUERYINTERFACE will convert to this

  instMcMoveParams : ST_mcMoveParams;

  lrTol : LREAL := 1E-3;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveCrcAbsEquals" ObjectId="10d8b6de-0623-4a54-ad2d-bdf5beed235e">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inMcMoveCrcAbs">
                    <type>
                      <derived name="SM3_Robotics.MC_MoveCircularAbsolute" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveCrcAbsEquals : BOOL
VAR_INPUT
  inMcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveCrcAbsEquals : BOOL
VAR_INPUT
  inMcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check only inputs of relevant MC_Move* FB</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveCrcAbsEquals := FALSE;

IF (THIS^.mcMoveCrcAbs.Execute &lt;&gt; inMcMoveCrcAbs.Execute) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcAbs.CircMode &lt;&gt; inMcMoveCrcAbs.CircMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveCrcAbs.AuxPoint.v, 1) TO UPPER_BOUND(THIS^.mcMoveCrcAbs.AuxPoint.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveCrcAbs.AuxPoint.v[diIndx] - inMcMoveCrcAbs.AuxPoint.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

FOR diIndx := LOWER_BOUND(THIS^.mcMoveCrcAbs.EndPoint.v, 1) TO UPPER_BOUND(THIS^.mcMoveCrcAbs.EndPoint.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveCrcAbs.EndPoint.v[diIndx] - inMcMoveCrcAbs.EndPoint.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveCrcAbs.PathChoice &lt;&gt; inMcMoveCrcAbs.PathChoice) THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcAbs.Velocity - inMcMoveCrcAbs.Velocity) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcAbs.Acceleration - inMcMoveCrcAbs.Acceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcAbs.Deceleration - inMcMoveCrcAbs.Deceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcAbs.Jerk - inMcMoveCrcAbs.Jerk) &gt; lrTol THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcAbs.CoordSystem &lt;&gt; inMcMoveCrcAbs.CoordSystem) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcAbs.BufferMode &lt;&gt; inMcMoveCrcAbs.BufferMode) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcAbs.TransitionMode &lt;&gt; inMcMoveCrcAbs.TransitionMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveCrcAbs.TransitionParameter, 1) TO UPPER_BOUND(THIS^.mcMoveCrcAbs.TransitionParameter, 1) DO
  IF ABS(THIS^.mcMoveCrcAbs.TransitionParameter[diIndx] - inMcMoveCrcAbs.TransitionParameter[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveCrcAbs.OrientationMode &lt;&gt; inMcMoveCrcAbs.OrientationMode) THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcAbs.VelFactor - inMcMoveCrcAbs.VelFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcAbs.AccFactor - inMcMoveCrcAbs.AccFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcAbs.JerkFactor - inMcMoveCrcAbs.JerkFactor) &gt; lrTol THEN
  RETURN;
END_IF

METH_mcMoveCrcAbsEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveCrcAbsEquals : BOOL
VAR_INPUT
  inMcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveDirAbsEquals" ObjectId="3b0da0aa-1d26-4a5b-a6ea-10c437abe000">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inMcMoveDirAbs">
                    <type>
                      <derived name="SM3_Robotics.MC_MoveDirectAbsolute" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveDirAbsEquals : BOOL
VAR_INPUT
  inMcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveDirAbsEquals : BOOL
VAR_INPUT
  inMcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check only inputs of relevant MC_Move* FB</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveDirAbsEquals := FALSE;

IF (THIS^.mcMoveDirAbs.Execute &lt;&gt; inMcMoveDirAbs.Execute) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveDirAbs.Position.v, 1) TO UPPER_BOUND(THIS^.mcMoveDirAbs.Position.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveDirAbs.Position.v[diIndx] - inMcMoveDirAbs.Position.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveDirAbs.MovementType &lt;&gt; inMcMoveDirAbs.MovementType) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveDirAbs.CoordSystem &lt;&gt; inMcMoveDirAbs.CoordSystem) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveDirAbs.BufferMode &lt;&gt; inMcMoveDirAbs.BufferMode) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveDirAbs.TransitionMode &lt;&gt; inMcMoveDirAbs.TransitionMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveDirAbs.TransitionParameter, 1) TO UPPER_BOUND(THIS^.mcMoveDirAbs.TransitionParameter, 1) DO
  IF ABS(THIS^.mcMoveDirAbs.TransitionParameter[diIndx] - inMcMoveDirAbs.TransitionParameter[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF ABS(THIS^.mcMoveDirAbs.VelFactor - inMcMoveDirAbs.VelFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveDirAbs.AccFactor - inMcMoveDirAbs.AccFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveDirAbs.JerkFactor - inMcMoveDirAbs.JerkFactor) &gt; lrTol THEN
  RETURN;
END_IF

METH_mcMoveDirAbsEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveDirAbsEquals : BOOL
VAR_INPUT
  inMcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_stMoveDirParamsHashCode" ObjectId="e8ab7f04-2347-488a-862f-402ab735a3f1">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveDirParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveDirParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_stMoveDirParamsHashCode := liInitVal;

FOR diIndx := LOWER_BOUND(stMcMoveParams.stMoveDirParams.smcPosRef.v, 1) TO
  UPPER_BOUND(stMcMoveParams.stMoveDirParams.smcPosRef.v, 1) BY 1 DO
  METH_stMoveDirParamsHashCode :=
    (METH_stMoveDirParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveDirParams.smcPosRef.v[diIndx]);
END_FOR

METH_stMoveDirParamsHashCode := (METH_stMoveDirParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveDirParams.smcPtpTyp);

METH_stMoveDirParamsHashCode := (METH_stMoveDirParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveDirParams.smcCrdSys);

METH_stMoveDirParamsHashCode := (METH_stMoveDirParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveDirParams.mcBufMode);

METH_stMoveDirParamsHashCode := (METH_stMoveDirParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveDirParams.mcTrnMode);

FOR diIndx := LOWER_BOUND(stMcMoveParams.stMoveDirParams.arrTrnPrm, 1) TO
  UPPER_BOUND(stMcMoveParams.stMoveDirParams.arrTrnPrm, 1) BY 1 DO
  METH_stMoveDirParamsHashCode :=
    (METH_stMoveDirParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveDirParams.arrTrnPrm[diIndx]);
END_FOR

METH_stMoveDirParamsHashCode := (METH_stMoveDirParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveDirParams.lrVelFctr);

METH_stMoveDirParamsHashCode := (METH_stMoveDirParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveDirParams.lrAccFctr);

METH_stMoveDirParamsHashCode := (METH_stMoveDirParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveDirParams.lrJrkFctr);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveDirParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveDirRelEquals" ObjectId="2b1283da-b2a4-48aa-8d91-1d234c1b9899">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inMcMoveDirRel">
                    <type>
                      <derived name="SM3_Robotics.MC_MoveDirectRelative" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveDirRelEquals : BOOL
VAR_INPUT
  inMcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveDirRelEquals : BOOL
VAR_INPUT
  inMcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check only inputs of relevant MC_Move* FB</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveDirRelEquals := FALSE;

IF (THIS^.mcMoveDirRel.Execute &lt;&gt; inMcMoveDirRel.Execute) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveDirRel.Distance.v, 1) TO UPPER_BOUND(THIS^.mcMoveDirRel.Distance.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveDirRel.Distance.v[diIndx] - inMcMoveDirRel.Distance.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveDirRel.MovementType &lt;&gt; inMcMoveDirRel.MovementType) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveDirRel.CoordSystem &lt;&gt; inMcMoveDirRel.CoordSystem) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveDirRel.BufferMode &lt;&gt; inMcMoveDirRel.BufferMode) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveDirRel.TransitionMode &lt;&gt; inMcMoveDirRel.TransitionMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveDirRel.TransitionParameter, 1) TO UPPER_BOUND(THIS^.mcMoveDirRel.TransitionParameter, 1) DO
  IF ABS(THIS^.mcMoveDirRel.TransitionParameter[diIndx] - inMcMoveDirRel.TransitionParameter[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF ABS(THIS^.mcMoveDirRel.VelFactor - inMcMoveDirRel.VelFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveDirRel.AccFactor - inMcMoveDirRel.AccFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveDirRel.JerkFactor - inMcMoveDirRel.JerkFactor) &gt; lrTol THEN
  RETURN;
END_IF

METH_mcMoveDirRelEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveDirRelEquals : BOOL
VAR_INPUT
  inMcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveCrcRelEquals" ObjectId="ad65def5-415a-425b-ad84-5fd915ae232c">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inMcMoveCrcRel">
                    <type>
                      <derived name="SM3_Robotics.MC_MoveCircularRelative" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveCrcRelEquals : BOOL
VAR_INPUT
  inMcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveCrcRelEquals : BOOL
VAR_INPUT
  inMcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check only inputs of relevant MC_Move* FB</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveCrcRelEquals := FALSE;

IF (THIS^.mcMoveCrcRel.Execute &lt;&gt; inMcMoveCrcRel.Execute) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcRel.CircMode &lt;&gt; inMcMoveCrcRel.CircMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveCrcRel.AuxPoint.v, 1) TO UPPER_BOUND(THIS^.mcMoveCrcRel.AuxPoint.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveCrcRel.AuxPoint.v[diIndx] - inMcMoveCrcRel.AuxPoint.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

FOR diIndx := LOWER_BOUND(THIS^.mcMoveCrcRel.EndPoint.v, 1) TO UPPER_BOUND(THIS^.mcMoveCrcRel.EndPoint.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveCrcRel.EndPoint.v[diIndx] - inMcMoveCrcRel.EndPoint.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveCrcRel.PathChoice &lt;&gt; inMcMoveCrcRel.PathChoice) THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcRel.Velocity - inMcMoveCrcRel.Velocity) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcRel.Acceleration - inMcMoveCrcRel.Acceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcRel.Deceleration - inMcMoveCrcRel.Deceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcRel.Jerk - inMcMoveCrcRel.Jerk) &gt; lrTol THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcRel.CoordSystem &lt;&gt; inMcMoveCrcRel.CoordSystem) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcRel.BufferMode &lt;&gt; inMcMoveCrcRel.BufferMode) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveCrcRel.TransitionMode &lt;&gt; inMcMoveCrcRel.TransitionMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveCrcRel.TransitionParameter, 1) TO UPPER_BOUND(THIS^.mcMoveCrcRel.TransitionParameter, 1) DO
  IF ABS(THIS^.mcMoveCrcRel.TransitionParameter[diIndx] - inMcMoveCrcRel.TransitionParameter[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveCrcRel.OrientationMode &lt;&gt; inMcMoveCrcRel.OrientationMode) THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcRel.VelFactor - inMcMoveCrcRel.VelFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcRel.AccFactor - inMcMoveCrcRel.AccFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveCrcRel.JerkFactor - inMcMoveCrcRel.JerkFactor) &gt; lrTol THEN
  RETURN;
END_IF

METH_mcMoveCrcRelEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveCrcRelEquals : BOOL
VAR_INPUT
  inMcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveLinAbsEquals" ObjectId="21695f18-71ba-4e1a-ace8-69012b29e27e">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inMcMoveLinAbs">
                    <type>
                      <derived name="SM3_Robotics.MC_MoveLinearAbsolute" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveLinAbsEquals : BOOL
VAR_INPUT
  inMcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveLinAbsEquals : BOOL
VAR_INPUT
  inMcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check only inputs of relevant MC_Move* FB</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveLinAbsEquals := FALSE;

IF (THIS^.mcMoveLinAbs.Execute &lt;&gt; inMcMoveLinAbs.Execute) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveLinAbs.Position.v, 1) TO UPPER_BOUND(THIS^.mcMoveLinAbs.Position.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveLinAbs.Position.v[diIndx] - inMcMoveLinAbs.Position.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF ABS(THIS^.mcMoveLinAbs.Velocity - inMcMoveLinAbs.Velocity) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinAbs.Acceleration - inMcMoveLinAbs.Acceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinAbs.Deceleration - inMcMoveLinAbs.Deceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinAbs.Jerk - inMcMoveLinAbs.Jerk) &gt; lrTol THEN
  RETURN;
END_IF

IF (THIS^.mcMoveLinAbs.CoordSystem &lt;&gt; inMcMoveLinAbs.CoordSystem) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveLinAbs.BufferMode &lt;&gt; inMcMoveLinAbs.BufferMode) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveLinAbs.TransitionMode &lt;&gt; inMcMoveLinAbs.TransitionMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveLinAbs.TransitionParameter, 1) TO UPPER_BOUND(THIS^.mcMoveLinAbs.TransitionParameter, 1) DO
  IF ABS(THIS^.mcMoveLinAbs.TransitionParameter[diIndx] - inMcMoveLinAbs.TransitionParameter[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveLinAbs.OrientationMode &lt;&gt; inMcMoveLinAbs.OrientationMode) THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinAbs.VelFactor - inMcMoveLinAbs.VelFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinAbs.AccFactor - inMcMoveLinAbs.AccFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinAbs.JerkFactor - inMcMoveLinAbs.JerkFactor) &gt; lrTol THEN
  RETURN;
END_IF

METH_mcMoveLinAbsEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveLinAbsEquals : BOOL
VAR_INPUT
  inMcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveLinRelEquals" ObjectId="5f7b2272-50ed-4f01-a50b-bf8ec85503e5">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inMcMoveLinRel">
                    <type>
                      <derived name="SM3_Robotics.MC_MoveLinearRelative" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveLinRelEquals : BOOL
VAR_INPUT
  inMcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveLinRelEquals : BOOL
VAR_INPUT
  inMcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check only inputs of relevant MC_Move* FB</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveLinRelEquals := FALSE;

IF (THIS^.mcMoveLinRel.Execute &lt;&gt; inMcMoveLinRel.Execute) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveLinRel.Distance.v, 1) TO UPPER_BOUND(THIS^.mcMoveLinRel.Distance.v, 1) BY 1 DO
  IF ABS(THIS^.mcMoveLinRel.Distance.v[diIndx] - inMcMoveLinRel.Distance.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF ABS(THIS^.mcMoveLinRel.Velocity - inMcMoveLinRel.Velocity) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinRel.Acceleration - inMcMoveLinRel.Acceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinRel.Deceleration - inMcMoveLinRel.Deceleration) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinRel.Jerk - inMcMoveLinRel.Jerk) &gt; lrTol THEN
  RETURN;
END_IF

IF (THIS^.mcMoveLinRel.CoordSystem &lt;&gt; inMcMoveLinRel.CoordSystem) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveLinRel.BufferMode &lt;&gt; inMcMoveLinRel.BufferMode) THEN
  RETURN;
END_IF

IF (THIS^.mcMoveLinRel.TransitionMode &lt;&gt; inMcMoveLinRel.TransitionMode) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.mcMoveLinRel.TransitionParameter, 1) TO UPPER_BOUND(THIS^.mcMoveLinRel.TransitionParameter, 1) DO
  IF ABS(THIS^.mcMoveLinRel.TransitionParameter[diIndx] - inMcMoveLinRel.TransitionParameter[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.mcMoveLinRel.OrientationMode &lt;&gt; inMcMoveLinRel.OrientationMode) THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinRel.VelFactor - inMcMoveLinRel.VelFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinRel.AccFactor - inMcMoveLinRel.AccFactor) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.mcMoveLinRel.JerkFactor - inMcMoveLinRel.JerkFactor) &gt; lrTol THEN
  RETURN;
END_IF

METH_mcMoveLinRelEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check only inputs of relevant MC_Move* FB
METHOD PRIVATE METH_mcMoveLinRelEquals : BOOL
VAR_INPUT
  inMcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative;
  lrTol          : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveCrcAbsHashCode" ObjectId="06ead029-dfe0-48cc-9454-6ff0aa0aa51a">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveCrcAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveCrcAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveCrcAbsHashCode := liInitVal;

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + BOOL_TO_LINT(mcMoveCrcAbs.Execute);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + TO_LINT(mcMoveCrcAbs.CircMode);

FOR diIndx := LOWER_BOUND(mcMoveCrcAbs.AuxPoint.v, 1) TO UPPER_BOUND(mcMoveCrcAbs.AuxPoint.v, 1) BY 1 DO
  METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.AuxPoint.v[diIndx]);
END_FOR

FOR diIndx := LOWER_BOUND(mcMoveCrcAbs.EndPoint.v, 1) TO UPPER_BOUND(mcMoveCrcAbs.EndPoint.v, 1) BY 1 DO
  METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.EndPoint.v[diIndx]);
END_FOR

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + TO_LINT(mcMoveCrcAbs.PathChoice);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.Velocity);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.Acceleration);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.Deceleration);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.Jerk);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + TO_LINT(mcMoveCrcAbs.CoordSystem);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + TO_LINT(mcMoveCrcAbs.BufferMode);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + TO_LINT(mcMoveCrcAbs.TransitionMode);

FOR diIndx := LOWER_BOUND(mcMoveCrcAbs.TransitionParameter, 1) TO UPPER_BOUND(mcMoveCrcAbs.TransitionParameter, 1) BY 1 DO
  METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.TransitionParameter[diIndx]);
END_FOR

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + TO_LINT(mcMoveCrcAbs.OrientationMode);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.VelFactor);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.AccFactor);

METH_mcMoveCrcAbsHashCode := (METH_mcMoveCrcAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcAbs.JerkFactor);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveCrcAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_stMoveCrcParamsEquals" ObjectId="027891c0-b0b5-4570-ad04-19487438b945">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inStMoveCrcParams">
                    <type>
                      <derived name="ST_moveCrcParams" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveCrcParamsEquals : BOOL
VAR_INPUT
  inStMoveCrcParams : ST_moveCrcParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveCrcParamsEquals : BOOL
VAR_INPUT
  inStMoveCrcParams : ST_moveCrcParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check motion parameters in relevant struct</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_stMoveCrcParamsEquals := FALSE;

IF (THIS^.stMcMoveParams.stMoveCrcParams.smcCrcMod &lt;&gt; inStMoveCrcParams.smcCrcMod) THEN
  RETURN;
END_IF

FOR diIndx := LOWER_BOUND(THIS^.stMcMoveParams.stMoveCrcParams.smcPosRef_auxPt.v, 1) TO
  UPPER_BOUND(THIS^.stMcMoveParams.stMoveCrcParams.smcPosRef_auxPt.v, 1) BY 1 DO
  IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.smcPosRef_auxPt.v[diIndx] - inStMoveCrcParams.smcPosRef_auxPt.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

FOR diIndx := LOWER_BOUND(THIS^.stMcMoveParams.stMoveCrcParams.smcPosRef_endPt.v, 1) TO
  UPPER_BOUND(THIS^.stMcMoveParams.stMoveCrcParams.smcPosRef_endPt.v, 1) BY 1 DO
  IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.smcPosRef_endPt.v[diIndx] - inStMoveCrcParams.smcPosRef_endPt.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.stMcMoveParams.stMoveCrcParams.mcCrcPathChoice &lt;&gt; inStMoveCrcParams.mcCrcPathChoice) THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.lrVel - inStMoveCrcParams.lrVel) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.lrAcc - inStMoveCrcParams.lrAcc) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.lrDec - inStMoveCrcParams.lrDec) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.lrJrk - inStMoveCrcParams.lrJrk) &gt; lrTol THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveCrcParams.smcCrdSys &lt;&gt; inStMoveCrcParams.smcCrdSys) THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveCrcParams.mcBufMode &lt;&gt; inStMoveCrcParams.mcBufMode) THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveCrcParams.mcTrnMode &lt;&gt; inStMoveCrcParams.mcTrnMode) THEN
  RETURN;
END_IF

FOR diIndx :=
  LOWER_BOUND(THIS^.stMcMoveParams.stMoveCrcParams.arrTrnPrm, 1) TO UPPER_BOUND(THIS^.stMcMoveParams.stMoveCrcParams.arrTrnPrm, 1) BY 1 DO
  IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.arrTrnPrm[diIndx] - inStMoveCrcParams.arrTrnPrm[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.stMcMoveParams.stMoveCrcParams.smcOrnMod &lt;&gt; inStMoveCrcParams.smcOrnMod) THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.lrVelFctr - inStMoveCrcParams.lrVelFctr) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.lrAccFctr - inStMoveCrcParams.lrAccFctr) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveCrcParams.lrJrkFctr - inStMoveCrcParams.lrJrkFctr) &gt; lrTol THEN
  RETURN;
END_IF

METH_stMoveCrcParamsEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveCrcParamsEquals : BOOL
VAR_INPUT
  inStMoveCrcParams : ST_moveCrcParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_stMoveDirParamsEquals" ObjectId="f578e76d-3049-46fb-81ce-208cf8bd829a">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inStMoveDirParams">
                    <type>
                      <derived name="ST_moveDirParams" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveDirParamsEquals : BOOL
VAR_INPUT
  inStMoveDirParams : ST_moveDirParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveDirParamsEquals : BOOL
VAR_INPUT
  inStMoveDirParams : ST_moveDirParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check motion parameters in relevant struct</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_stMoveDirParamsEquals := FALSE;

FOR diIndx := LOWER_BOUND(THIS^.stMcMoveParams.stMoveDirParams.smcPosRef.v, 1) TO
  UPPER_BOUND(THIS^.stMcMoveParams.stMoveDirParams.smcPosRef.v, 1) BY 1 DO
  IF ABS(THIS^.stMcMoveParams.stMoveDirParams.smcPosRef.v[diIndx] - inStMoveDirParams.smcPosRef.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF (THIS^.stMcMoveParams.stMoveDirParams.smcPtpTyp &lt;&gt; inStMoveDirParams.smcPtpTyp) THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveDirParams.smcCrdSys &lt;&gt; inStMoveDirParams.smcCrdSys) THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveDirParams.mcBufMode &lt;&gt; inStMoveDirParams.mcBufMode) THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveDirParams.mcTrnMode &lt;&gt; inStMoveDirParams.mcTrnMode) THEN
  RETURN;
END_IF

FOR diIndx :=
  LOWER_BOUND(THIS^.stMcMoveParams.stMoveDirParams.arrTrnPrm, 1) TO UPPER_BOUND(THIS^.stMcMoveParams.stMoveDirParams.arrTrnPrm, 1) BY 1 DO
  IF ABS(THIS^.stMcMoveParams.stMoveDirParams.arrTrnPrm[diIndx] - inStMoveDirParams.arrTrnPrm[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF ABS(THIS^.stMcMoveParams.stMoveDirParams.lrVelFctr - inStMoveDirParams.lrVelFctr) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveDirParams.lrAccFctr - inStMoveDirParams.lrAccFctr) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveDirParams.lrJrkFctr - inStMoveDirParams.lrJrkFctr) &gt; lrTol THEN
  RETURN;
END_IF

METH_stMoveDirParamsEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveDirParamsEquals : BOOL
VAR_INPUT
  inStMoveDirParams : ST_moveDirParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_stMoveLinParamsEquals" ObjectId="45fc8f56-53d3-49e7-9e1d-6af32ef4cc1d">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <inputVars>
                  <variable name="inStMoveLinParams">
                    <type>
                      <derived name="ST_moveLinParams" />
                    </type>
                  </variable>
                  <variable name="lrTol">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0.001" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveLinParamsEquals : BOOL
VAR_INPUT
  inStMoveLinParams : ST_moveLinParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveLinParamsEquals : BOOL
VAR_INPUT
  inStMoveLinParams : ST_moveLinParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> check motion parameters in relevant struct</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_stMoveLinParamsEquals := FALSE;

FOR diIndx := LOWER_BOUND(THIS^.stMcMoveParams.stMoveLinParams.smcPosRef.v, 1) TO
  UPPER_BOUND(THIS^.stMcMoveParams.stMoveLinParams.smcPosRef.v, 1) BY 1 DO
  IF ABS(THIS^.stMcMoveParams.stMoveLinParams.smcPosRef.v[diIndx] - inStMoveLinParams.smcPosRef.v[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF ABS(THIS^.stMcMoveParams.stMoveLinParams.lrVel - inStMoveLinParams.lrVel) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveLinParams.lrAcc - inStMoveLinParams.lrAcc) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveLinParams.lrDec - inStMoveLinParams.lrDec) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveLinParams.lrJrk - inStMoveLinParams.lrJrk) &gt; lrTol THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveLinParams.smcCrdSys &lt;&gt; inStMoveLinParams.smcCrdSys) THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveLinParams.mcBufMode &lt;&gt; inStMoveLinParams.mcBufMode) THEN
  RETURN;
END_IF

IF (THIS^.stMcMoveParams.stMoveLinParams.mcTrnMode &lt;&gt; inStMoveLinParams.mcTrnMode) THEN
  RETURN;
END_IF

FOR diIndx :=
  LOWER_BOUND(THIS^.stMcMoveParams.stMoveLinParams.arrTrnPrm, 1) TO UPPER_BOUND(THIS^.stMcMoveParams.stMoveLinParams.arrTrnPrm, 1) BY 1 DO
  IF ABS(THIS^.stMcMoveParams.stMoveLinParams.arrTrnPrm[diIndx] - inStMoveLinParams.arrTrnPrm[diIndx]) &gt; lrTol THEN
    RETURN;
  END_IF
END_FOR

IF ABS(THIS^.stMcMoveParams.stMoveLinParams.lrVelFctr - inStMoveLinParams.lrVelFctr) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveLinParams.lrAccFctr - inStMoveLinParams.lrAccFctr) &gt; lrTol THEN
  RETURN;
END_IF

IF ABS(THIS^.stMcMoveParams.stMoveLinParams.lrJrkFctr - inStMoveLinParams.lrJrkFctr) &gt; lrTol THEN
  RETURN;
END_IF

METH_stMoveLinParamsEquals := TRUE;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// check motion parameters in relevant struct
METHOD PRIVATE METH_stMoveLinParamsEquals : BOOL
VAR_INPUT
  inStMoveLinParams : ST_moveLinParams;
  lrTol             : LREAL := 1E-3;
END_VAR
VAR
  diIndx : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_stMoveCrcParamsHashCode" ObjectId="f1a5a169-e71d-4e1e-90b7-ea5c904c2caf">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveCrcParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveCrcParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_stMoveCrcParamsHashCode := liInitVal;

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveCrcParams.smcCrcMod);

FOR diIndx := LOWER_BOUND(stMcMoveParams.stMoveCrcParams.smcPosRef_auxPt.v, 1) TO
  UPPER_BOUND(stMcMoveParams.stMoveCrcParams.smcPosRef_auxPt.v, 1) BY 1 DO
  METH_stMoveCrcParamsHashCode :=
    (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.smcPosRef_auxPt.v[diIndx]);
END_FOR

FOR diIndx := LOWER_BOUND(stMcMoveParams.stMoveCrcParams.smcPosRef_endPt.v, 1) TO
  UPPER_BOUND(stMcMoveParams.stMoveCrcParams.smcPosRef_endPt.v, 1) BY 1 DO
  METH_stMoveCrcParamsHashCode :=
    (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.smcPosRef_endPt.v[diIndx]);
END_FOR

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveCrcParams.mcCrcPathChoice);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.lrVel);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.lrAcc);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.lrDec);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.lrJrk);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveCrcParams.smcCrdSys);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveCrcParams.mcBufMode);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveCrcParams.mcTrnMode);

FOR diIndx := LOWER_BOUND(stMcMoveParams.stMoveCrcParams.arrTrnPrm, 1) TO UPPER_BOUND(stMcMoveParams.stMoveCrcParams.arrTrnPrm, 1) BY 1 DO
  METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.arrTrnPrm[diIndx]);
END_FOR

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveCrcParams.smcOrnMod);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.lrVelFctr);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.lrAccFctr);

METH_stMoveCrcParamsHashCode := (METH_stMoveCrcParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveCrcParams.lrJrkFctr);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveCrcParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_stMoveLinParamsHashCode" ObjectId="f2c7975f-7bbd-4094-ab64-f1f17db82408">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveLinParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveLinParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_stMoveLinParamsHashCode := liInitVal;

FOR diIndx := LOWER_BOUND(stMcMoveParams.stMoveLinParams.smcPosRef.v, 1) TO
  UPPER_BOUND(stMcMoveParams.stMoveLinParams.smcPosRef.v, 1) BY 1 DO
  METH_stMoveLinParamsHashCode :=
    (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.smcPosRef.v[diIndx]);
END_FOR

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.lrVel);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.lrAcc);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.lrDec);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.lrJrk);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveLinParams.smcCrdSys);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveLinParams.mcBufMode);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveLinParams.mcTrnMode);

FOR diIndx := LOWER_BOUND(stMcMoveParams.stMoveLinParams.arrTrnPrm, 1) TO UPPER_BOUND(stMcMoveParams.stMoveLinParams.arrTrnPrm, 1) BY 1 DO
  METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.arrTrnPrm[diIndx]);
END_FOR

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + TO_LINT(stMcMoveParams.stMoveLinParams.smcOrnMod);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.lrVelFctr);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.lrAccFctr);

METH_stMoveLinParamsHashCode := (METH_stMoveLinParamsHashCode * liPrime) + F_lrealToLintBits(stMcMoveParams.stMoveLinParams.lrJrkFctr);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_stMoveLinParamsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveCrcRelHashCode" ObjectId="b80236d4-35e7-4b30-b750-a70703d0d6bb">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveCrcRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveCrcRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveCrcRelHashCode := liInitVal;

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + BOOL_TO_LINT(mcMoveCrcRel.Execute);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + TO_LINT(mcMoveCrcRel.CircMode);

FOR diIndx := LOWER_BOUND(mcMoveCrcRel.AuxPoint.v, 1) TO UPPER_BOUND(mcMoveCrcRel.AuxPoint.v, 1) BY 1 DO
  METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.AuxPoint.v[diIndx]);
END_FOR

FOR diIndx := LOWER_BOUND(mcMoveCrcRel.EndPoint.v, 1) TO UPPER_BOUND(mcMoveCrcRel.EndPoint.v, 1) BY 1 DO
  METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.EndPoint.v[diIndx]);
END_FOR

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + TO_LINT(mcMoveCrcRel.PathChoice);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.Velocity);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.Acceleration);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.Deceleration);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.Jerk);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + TO_LINT(mcMoveCrcRel.CoordSystem);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + TO_LINT(mcMoveCrcRel.BufferMode);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + TO_LINT(mcMoveCrcRel.TransitionMode);

FOR diIndx := LOWER_BOUND(mcMoveCrcRel.TransitionParameter, 1) TO UPPER_BOUND(mcMoveCrcRel.TransitionParameter, 1) BY 1 DO
  METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.TransitionParameter[diIndx]);
END_FOR

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + TO_LINT(mcMoveCrcRel.OrientationMode);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.VelFactor);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.AccFactor);

METH_mcMoveCrcRelHashCode := (METH_mcMoveCrcRelHashCode * liPrime) + F_lrealToLintBits(mcMoveCrcRel.JerkFactor);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveCrcRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveDirAbsHashCode" ObjectId="969c1d77-79d7-4d60-aa1c-8febea4712c9">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveDirAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveDirAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveDirAbsHashCode := liInitVal;

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + BOOL_TO_LINT(mcMoveDirAbs.Execute);

FOR diIndx := LOWER_BOUND(mcMoveDirAbs.Position.v, 1) TO UPPER_BOUND(mcMoveDirAbs.Position.v, 1) BY 1 DO
  METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveDirAbs.Position.v[diIndx]);
END_FOR

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + TO_LINT(mcMoveDirAbs.MovementType);

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + TO_LINT(mcMoveDirAbs.CoordSystem);

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + TO_LINT(mcMoveDirAbs.BufferMode);

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + TO_LINT(mcMoveDirAbs.TransitionMode);

FOR diIndx := LOWER_BOUND(mcMoveDirAbs.TransitionParameter, 1) TO UPPER_BOUND(mcMoveDirAbs.TransitionParameter, 1) BY 1 DO
  METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveDirAbs.TransitionParameter[diIndx]);
END_FOR

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveDirAbs.VelFactor);

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveDirAbs.AccFactor);

METH_mcMoveDirAbsHashCode := (METH_mcMoveDirAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveDirAbs.JerkFactor);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveDirAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveDirRelHashCode" ObjectId="817c8530-46d6-49a4-ae14-c083fd9fa511">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveDirRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveDirRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveDirRelHashCode := liInitVal;

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + BOOL_TO_LINT(mcMoveDirRel.Execute);

FOR diIndx := LOWER_BOUND(mcMoveDirRel.Distance.v, 1) TO UPPER_BOUND(mcMoveDirRel.Distance.v, 1) BY 1 DO
  METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + F_lrealToLintBits(mcMoveDirRel.Distance.v[diIndx]);
END_FOR

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + TO_LINT(mcMoveDirRel.MovementType);

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + TO_LINT(mcMoveDirRel.CoordSystem);

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + TO_LINT(mcMoveDirRel.BufferMode);

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + TO_LINT(mcMoveDirRel.TransitionMode);

FOR diIndx := LOWER_BOUND(mcMoveDirRel.TransitionParameter, 1) TO UPPER_BOUND(mcMoveDirRel.TransitionParameter, 1) BY 1 DO
  METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + F_lrealToLintBits(mcMoveDirRel.TransitionParameter[diIndx]);
END_FOR

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + F_lrealToLintBits(mcMoveDirRel.VelFactor);

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + F_lrealToLintBits(mcMoveDirRel.AccFactor);

METH_mcMoveDirRelHashCode := (METH_mcMoveDirRelHashCode * liPrime) + F_lrealToLintBits(mcMoveDirRel.JerkFactor);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveDirRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveLinAbsHashCode" ObjectId="6021e1d9-0359-4f82-a37a-e29656180c02">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveLinAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveLinAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveLinAbsHashCode := liInitVal;

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + BOOL_TO_LINT(mcMoveLinAbs.Execute);

FOR diIndx := LOWER_BOUND(mcMoveLinAbs.Position.v, 1) TO UPPER_BOUND(mcMoveLinAbs.Position.v, 1) BY 1 DO
  METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.Position.v[diIndx]);
END_FOR

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.Velocity);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.Acceleration);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.Deceleration);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.Jerk);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + TO_LINT(mcMoveLinAbs.CoordSystem);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + TO_LINT(mcMoveLinAbs.BufferMode);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + TO_LINT(mcMoveLinAbs.TransitionMode);

FOR diIndx := LOWER_BOUND(mcMoveLinAbs.TransitionParameter, 1) TO UPPER_BOUND(mcMoveLinAbs.TransitionParameter, 1) BY 1 DO
  METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.TransitionParameter[diIndx]);
END_FOR

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + TO_LINT(mcMoveLinAbs.OrientationMode);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.VelFactor);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.AccFactor);

METH_mcMoveLinAbsHashCode := (METH_mcMoveLinAbsHashCode * liPrime) + F_lrealToLintBits(mcMoveLinAbs.JerkFactor);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveLinAbsHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_mcMoveLinRelHashCode" ObjectId="693a3a1c-cdcd-4c92-9283-982230d560a3">
              <interface>
                <returnType>
                  <LINT />
                </returnType>
                <inputVars>
                  <variable name="liPrime">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="37" />
                    </initialValue>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveLinRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
                <localVars>
                  <variable name="liInitVal">
                    <type>
                      <LINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to be nonzero</xhtml>
                    </documentation>
                  </variable>
                  <variable name="diIndx">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveLinRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </localVars>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                    <AccessModifiers Private="true" />
                  </data>
                </addData>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">METH_mcMoveLinRelHashCode := liInitVal;

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + BOOL_TO_LINT(mcMoveLinRel.Execute);

FOR diIndx := LOWER_BOUND(mcMoveLinRel.Distance.v, 1) TO UPPER_BOUND(mcMoveLinRel.Distance.v, 1) BY 1 DO
  METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.Distance.v[diIndx]);
END_FOR

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.Velocity);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.Acceleration);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.Deceleration);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.Jerk);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + TO_LINT(mcMoveLinRel.CoordSystem);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + TO_LINT(mcMoveLinRel.BufferMode);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + TO_LINT(mcMoveLinRel.TransitionMode);

FOR diIndx := LOWER_BOUND(mcMoveLinRel.TransitionParameter, 1) TO UPPER_BOUND(mcMoveLinRel.TransitionParameter, 1) BY 1 DO
  METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.TransitionParameter[diIndx]);
END_FOR

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + TO_LINT(mcMoveLinRel.OrientationMode);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.VelFactor);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.AccFactor);

METH_mcMoveLinRelHashCode := (METH_mcMoveLinRelHashCode * liPrime) + F_lrealToLintBits(mcMoveLinRel.JerkFactor);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// based on https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method-for-a-collection/113600#113600
METHOD PRIVATE METH_mcMoveLinRelHashCode : LINT
VAR_INPUT
  liPrime : LINT := 37;
END_VAR
VAR
  liInitVal : LINT := 1; // has to be nonzero
  diIndx    : DINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_executeMcMove" ObjectId="6ef6d6d5-e31a-442b-8aca-001528af35a5">
              <interface>
                <inOutVars>
                  <variable name="axisGrpRefSm3">
                    <type>
                      <derived name="SM3_Robotics.AXIS_GROUP_REF_SM3" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_executeMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_OUTPUT
  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
                <outputVars>
                  <variable name="xDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xBusy">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xActive">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xCmdAborted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xCmdAccepted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xError">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="smcError">
                    <type>
                      <derived name="SM3_Error.SMC_ERROR" />
                    </type>
                  </variable>
                  <variable name="smcMvmtId">
                    <type>
                      <derived name="SM3_Common.SMC_Movement_Id" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_executeMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_OUTPUT
  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </outputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE stMcMoveParams.eMcMotionFbType OF

  E_mcMotionFbType.moveCrcAbs:
    fbLogAdd.METH_appendLog('Not implemented yet!', xNewline:=TRUE);

  E_mcMotionFbType.moveCrcRel:
    fbLogAdd.METH_appendLog('Not implemented yet!', xNewline:=TRUE);

  E_mcMotionFbType.moveDirAbs:
    mcMoveDirAbs(AxisGroup:=axisGrpRefSm3,
                 Execute:=TRUE,
                 Position:=stMcMoveParams.stMoveDirParams.smcPosRef,
                 MovementType:=stMcMoveParams.stMoveDirParams.smcPtpTyp,
                 CoordSystem:=stMcMoveParams.stMoveDirParams.smcCrdSys,
                 BufferMode:=stMcMoveParams.stMoveDirParams.mcBufMode,
                 TransitionMode:=stMcMoveParams.stMoveDirParams.mcTrnMode,
                 TransitionParameter:=stMcMoveParams.stMoveDirParams.arrTrnPrm,
                 VelFactor:=stMcMoveParams.stMoveDirParams.lrVelFctr,
                 AccFactor:=stMcMoveParams.stMoveDirParams.lrAccFctr,
                 JerkFactor:=stMcMoveParams.stMoveDirParams.lrJrkFctr,
                 Done=&gt;xDone,
                 Busy=&gt;xBusy,
                 Active=&gt;xActive,
                 CommandAborted=&gt;xCmdAborted,
                 CommandAccepted=&gt;xCmdAccepted,
                 Error=&gt;xError,
                 ErrorID=&gt;smcError,
                 MovementId=&gt;smcMvmtId);

  E_mcMotionFbType.moveDirRel:
    fbLogAdd.METH_appendLog('Not implemented yet!', xNewline:=TRUE);

  E_mcMotionFbType.moveLinAbs:
    fbLogAdd.METH_appendLog('Not implemented yet!', xNewline:=TRUE);

  E_mcMotionFbType.moveLinRel:
    fbLogAdd.METH_appendLog('Not implemented yet!', xNewline:=TRUE);

END_CASE
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_executeMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_OUTPUT
  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_resetMcMove" ObjectId="48c7ef8a-e1d1-481b-9a2e-2173adf60ef2">
              <interface>
                <inOutVars>
                  <variable name="axisGrpRefSm3">
                    <type>
                      <derived name="SM3_Robotics.AXIS_GROUP_REF_SM3" />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_resetMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inOutVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">mcMoveDirAbs(AxisGroup:=axisGrpRefSm3,
             Execute:=FALSE);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_resetMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="FB_reinit" ObjectId="a3b03c9e-d78b-4d7a-b477-6c0cff67164b">
              <interface>
                <returnType>
                  <BOOL />
                </returnType>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml"> IMPORTANT: Call UpdateElement() to ensure that the reference will be updated after an online change.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">UpdateElement(itfElement:=THIS^);
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">// IMPORTANT: Call UpdateElement() to ensure that the reference will be updated after an online change.
METHOD FB_reinit : BOOL
VAR_INPUT
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
            <Method name="METH_setMcMoveParams" ObjectId="312531d5-5d6b-4c72-b7d8-ef22696f77c5">
              <interface>
                <inputVars>
                  <variable name="stMcMoveParams">
                    <type>
                      <derived name="ST_mcMoveParams" />
                    </type>
                  </variable>
                  <variable name="uliMotionIndx">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                      <InterfaceAsPlainText>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_setMcMoveParams
VAR_INPUT
  stMcMoveParams : ST_mcMoveParams;
  uliMotionIndx  : ULINT;
END_VAR
</xhtml>
                      </InterfaceAsPlainText>
                    </data>
                  </addData>
                </inputVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">THIS^.stMcMoveParams := stMcMoveParams;
THIS^.uliMotionIndx := uliMotionIndx;
</xhtml>
                </ST>
              </body>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_setMcMoveParams
VAR_INPUT
  stMcMoveParams : ST_mcMoveParams;
  uliMotionIndx  : ULINT;
END_VAR
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Method>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_mcMoveCrcAbs" ObjectId="7eb593eb-9680-48c7-8dc3-43a27758cae7">
              <interface>
                <returnType>
                  <derived name="SM3_Robotics.MC_MoveCircularAbsolute" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_mcMoveCrcAbs := mcMoveCrcAbs;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_mcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_mcMoveCrcRel" ObjectId="dc89886e-d332-41ec-b943-c4c467a39d8e">
              <interface>
                <returnType>
                  <derived name="SM3_Robotics.MC_MoveCircularRelative" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_mcMoveCrcRel := mcMoveCrcRel;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_mcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_motionIndx" ObjectId="5b5c4e6c-cd7c-4ec9-b287-38a29e0fa084">
              <interface>
                <returnType>
                  <ULINT />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_motionIndx := uliMotionIndx;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_motionIndx : ULINT
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_stMcMoveParams" ObjectId="fd620805-7aba-4511-a581-e401daecf8ff">
              <interface>
                <returnType>
                  <derived name="ST_mcMoveParams" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_stMcMoveParams := stMcMoveParams;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_stMcMoveParams : ST_mcMoveParams
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_mcMoveDirAbs" ObjectId="97e2539d-0ce0-4751-95b3-45d751206ca3">
              <interface>
                <returnType>
                  <derived name="SM3_Robotics.MC_MoveDirectAbsolute" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_mcMoveDirAbs := mcMoveDirAbs;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_mcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_mcMoveDirRel" ObjectId="8604a7e8-caa3-4968-9477-1f2cda94e756">
              <interface>
                <returnType>
                  <derived name="SM3_Robotics.MC_MoveDirectRelative" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_mcMoveDirRel := mcMoveDirRel;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_mcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_mcMoveLinAbs" ObjectId="7d54a191-a850-4911-962f-9084027ff2b0">
              <interface>
                <returnType>
                  <derived name="SM3_Robotics.MC_MoveLinearAbsolute" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_mcMoveLinAbs := mcMoveLinAbs;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_mcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
            <Property name="PROP_mcMoveLinRel" ObjectId="0860cbed-16d2-4031-9bf0-121baeae3b84">
              <interface>
                <returnType>
                  <derived name="SM3_Robotics.MC_MoveLinearRelative" />
                </returnType>
              </interface>
              <GetAccessor>
                <interface />
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">PROP_mcMoveLinRel := mcMoveLinRel;
</xhtml>
                  </ST>
                </body>
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </InterfaceAsPlainText>
                <addData />
              </GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_mcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative
</xhtml>
              </InterfaceAsPlainText>
              <addData />
            </Property>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK INTERNAL FB_mcMoveElement EXTENDS COL.LinkedListElementBase IMPLEMENTS I_mcMoveElement
VAR_INPUT
  stMcMoveParams : ST_mcMoveParams;
  uliMotionIndx  : ULINT;
END_VAR
VAR
  mcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute;
  mcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative;
  mcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;
  mcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative;
  mcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  mcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative;

  fbLogAdd : FB_logAdd(pCmpName:=ADR(__POUNAME()));
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>c6c67520-9c79-437f-a1d1-b3003bc121ce</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="testCFC" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_logAdd_2">
              <type>
                <derived name="FB_logAdd" />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK testCFC
VAR
	FB_logAdd_2: FB_logAdd;
END_VAR</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <block localId="0" executionOrderId="1" typeName="FB_logAdd" instanceName="FB_logAdd_2">
                  <position x="8" y="7" />
                  <inputVariables />
                  <inOutVariables />
                  <outputVariables />
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK testCFC
VAR
	FB_logAdd_2: FB_logAdd;
END_VAR</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ce78240f-100c-493c-a0df-99e2556040d0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="testFBD" pouType="program">
        <interface>
          <localVars>
            <variable name="FB_logAdd_0">
              <type>
                <derived name="FB_logAdd" />
              </type>
            </variable>
            <variable name="test">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM testFBD
VAR
	FB_logAdd_0: FB_logAdd;
	test : BOOL := TRUE;
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
        </interface>
        <body>
          <FBD>
            <vendorElement localId="10000000000">
              <position x="0" y="0" />
              <alternativeText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">FBD Implementation Attributes</xhtml>
              </alternativeText>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbd/implementationattributes" handleUnknown="implementation">
                  <fbdattributes xmlns="">
                    <attribute name="BoxInputFlagsSupported" value="true" />
                  </fbdattributes>
                </data>
              </addData>
            </vendorElement>
            <inVariable localId="10000000001">
              <position x="0" y="0" />
              <connectionPointOut />
              <expression>test</expression>
            </inVariable>
            <block localId="10000000002" typeName="FB_logAdd" instanceName="FB_logAdd_0">
              <position x="0" y="0" />
              <inputVariables>
                <variable formalParameter="EN">
                  <connectionPointIn>
                    <connection refLocalId="10000000001" />
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables />
              <outputVariables>
                <variable formalParameter="ENO">
                  <connectionPointOut />
                </variable>
              </outputVariables>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                  <CallType xmlns="">functionblock</CallType>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/inputparamtypes" handleUnknown="implementation">
                  <InputParamTypes xmlns="">BOOL</InputParamTypes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/outputparamtypes" handleUnknown="implementation">
                  <OutputParamTypes xmlns="">BOOL</OutputParamTypes>
                </data>
              </addData>
            </block>
          </FBD>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM testFBD
VAR
	FB_logAdd_0: FB_logAdd;
	test : BOOL := TRUE;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>6741df6e-f153-4875-be74-c0de9e72f88e</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="testLD" pouType="functionBlock">
        <interface>
          <localVars>
            <variable name="FB_logAdd_1">
              <type>
                <derived name="FB_logAdd" />
              </type>
            </variable>
            <variable name="test">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="TRUE" />
              </initialValue>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK testLD
VAR
  FB_logAdd_1 : FB_logAdd;
  test        : BOOL := TRUE;
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
        </interface>
        <body>
          <LD>
            <leftPowerRail localId="0">
              <position x="0" y="0" />
              <connectionPointOut formalParameter="none" />
            </leftPowerRail>
            <comment localId="1" height="0" width="0">
              <position x="0" y="0" />
              <content>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </content>
            </comment>
            <vendorElement localId="2">
              <position x="0" y="0" />
              <alternativeText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </alternativeText>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbdelementtype" handleUnknown="implementation">
                  <ElementType xmlns="">networktitle</ElementType>
                </data>
              </addData>
            </vendorElement>
            <contact localId="4" negated="false" storage="none" edge="none">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="0" />
              </connectionPointIn>
              <connectionPointOut />
              <variable>test</variable>
            </contact>
            <block localId="3" typeName="FB_logAdd" instanceName="FB_logAdd_1">
              <position x="0" y="0" />
              <inputVariables>
                <variable formalParameter="EN">
                  <connectionPointIn>
                    <connection refLocalId="4" />
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables />
              <outputVariables>
                <variable formalParameter="ENO">
                  <connectionPointOut />
                </variable>
              </outputVariables>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/fbdcalltype" handleUnknown="implementation">
                  <CallType xmlns="">functionblock</CallType>
                </data>
              </addData>
            </block>
            <rightPowerRail localId="2147483646">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="3" formalParameter="">
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/ldbranchid" handleUnknown="implementation">
                      <BranchId xmlns="">2</BranchId>
                    </data>
                  </addData>
                </connection>
              </connectionPointIn>
            </rightPowerRail>
          </LD>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK testLD
VAR
  FB_logAdd_1 : FB_logAdd;
  test        : BOOL := TRUE;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>df74a129-65e9-4208-8fe4-dbad8020dbd0</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="testSFC" pouType="functionBlock">
        <interface />
        <body>
          <SFC>
            <step localId="0" initialStep="true" name="Init">
              <position x="0" y="0" />
              <connectionPointIn />
              <connectionPointOut formalParameter="sfc" />
              <connectionPointOutAction formalParameter="x" />
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                  <attributes xmlns="">
                    <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">Init</attribute>
                    <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                    <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                    <attribute guid="6844a48e-46c2-4cc8-a185-a478f3b99cc0">TRUE</attribute>
                    <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                  </attributes>
                </data>
              </addData>
            </step>
            <actionBlock localId="2">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="0" />
              </connectionPointIn>
              <action localId="1" qualifier="N" duration="" indicator="">
                <relPosition x="0" y="0" />
                <reference name="testFBD.FB_logAdd_0" />
                <connectionPointOut />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                    <attributes xmlns="">
                      <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">testFBD.FB_logAdd_0</attribute>
                      <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                      <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                      <attribute guid="e174fc0d-80b0-4a9e-a530-ca239c249a50">N</attribute>
                    </attributes>
                  </data>
                </addData>
              </action>
            </actionBlock>
            <inVariable localId="3">
              <position x="0" y="0" />
              <connectionPointOut />
              <expression>TRUE</expression>
            </inVariable>
            <transition localId="4">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="0" formalParameter="sfc" />
              </connectionPointIn>
              <condition>
                <connectionPointIn>
                  <connection refLocalId="3" />
                </connectionPointIn>
              </condition>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                  <attributes xmlns="">
                    <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">TRUE</attribute>
                    <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                    <attribute guid="bc882c11-1e91-4dd8-a6b8-2075724ed18b">0</attribute>
                    <attribute guid="62e1754b-7629-4e63-9cec-10ae0c536f1f">FALSE</attribute>
                    <attribute guid="8294df19-5962-4dee-a874-1051dabb0e3e">0</attribute>
                  </attributes>
                </data>
              </addData>
            </transition>
            <jumpStep localId="5" targetName="Init">
              <position x="0" y="0" />
              <connectionPointIn>
                <connection refLocalId="4" />
              </connectionPointIn>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/sfc/element" handleUnknown="implementation">
                  <attributes xmlns="">
                    <attribute guid="38391c6d-6d4a-42f8-8ee7-9f45e5adafa8">Init</attribute>
                    <attribute guid="01580b27-6378-448b-8ecb-0e4b795b58d6">FALSE</attribute>
                  </attributes>
                </data>
              </addData>
            </jumpStep>
          </SFC>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/sfcsettings" handleUnknown="implementation">
            <SFCSettings>
              <LibTitle>IecSfc</LibTitle>
              <LibCompany>System</LibCompany>
              <LibVersion>3.4.2.0</LibVersion>
              <LibNamespace>IecSfc</LibNamespace>
              <CalcActiveTransOnly>false</CalcActiveTransOnly>
              <UseDefaults>false</UseDefaults>
              <Flags>
                <EnableLimit Declare="true" Use="false" />
                <Init Declare="true" Use="false" />
                <Reset Declare="true" Use="false" />
                <QuitError Declare="true" Use="false" />
                <Pause Declare="true" Use="false" />
                <Error Declare="true" Use="false" />
                <Trans Declare="true" Use="false" />
                <ErrorStep Declare="true" Use="false" />
                <ErrorPOU Declare="true" Use="false" />
                <CurrentStep Declare="true" Use="false" />
                <Tip Declare="true" Use="false" />
                <TipMode Declare="true" Use="false" />
                <MaxFlags Declare="true" Use="false" />
                <SFCErrorAnalyzation Declare="true" Use="false" />
                <SFCErrorAnalyzationTable Declare="true" Use="false" />
              </Flags>
            </SFCSettings>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">FUNCTION_BLOCK testSFC</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>02319c5f-a920-49ec-86ef-9847583d27aa</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="POU_DIAG" pouType="program">
        <interface />
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml" />
          </ST>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/cfc" handleUnknown="implementation">
              <CFC>
                <inVariable localId="2">
                  <position x="3" y="6" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>EtherCAT_Master_Softmotion</expression>
                </inVariable>
                <connector localId="1" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="2" formalParameter="EtherCAT_Master_Softmotion" />
                  </connectionPointIn>
                </connector>
                <inVariable localId="4">
                  <position x="3" y="7" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>GVL_Diag.MyECSlaves</expression>
                </inVariable>
                <connector localId="3" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="4" formalParameter="GVL_Diag.MyECSlaves" />
                  </connectionPointIn>
                </connector>
                <block localId="0" executionOrderId="1" typeName="FB_ECDiag" instanceName="GVL_Diag.ECDiag">
                  <position x="22" y="4" />
                  <inputVariables>
                    <variable formalParameter="ECSlaves">
                      <connectionPointIn>
                        <relPosition x="0" y="1" />
                        <connection refLocalId="3" />
                      </connectionPointIn>
                    </variable>
                    <variable formalParameter="xRestart">
                      <connectionPointIn>
                        <relPosition x="0" y="2" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables>
                    <variable formalParameter="ECMaster">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="1" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </inOutVariables>
                  <outputVariables>
                    <variable formalParameter="arECStatus">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="7">
                  <position x="3" y="14" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>GVL_Diag.MyAxis</expression>
                </inVariable>
                <connector localId="6" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="7" formalParameter="GVL_Diag.MyAxis" />
                  </connectionPointIn>
                </connector>
                <block localId="5" executionOrderId="2" typeName="FB_AxisDiag" instanceName="GVL_Diag.AxisDiag">
                  <position x="22" y="12" />
                  <inputVariables />
                  <inOutVariables>
                    <variable formalParameter="AxisList">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="6" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </inOutVariables>
                  <outputVariables>
                    <variable formalParameter="arAxisStatus">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="10">
                  <position x="3" y="20" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>AxisGroup</expression>
                </inVariable>
                <connector localId="9" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="10" formalParameter="AxisGroup" />
                  </connectionPointIn>
                </connector>
                <block localId="8" executionOrderId="3" typeName="FB_GroupDiag" instanceName="GVL_Diag.GroupDiag">
                  <position x="22" y="18" />
                  <inputVariables />
                  <inOutVariables>
                    <variable formalParameter="AxisGroup">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="9" />
                      </connectionPointIn>
                      <connectionPointOut>
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </inOutVariables>
                  <outputVariables>
                    <variable formalParameter="arGroupStatus">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
                <inVariable localId="13">
                  <position x="3" y="45" />
                  <connectionPointOut>
                    <expression />
                  </connectionPointOut>
                  <expression>GVL_Diag.MyTask</expression>
                </inVariable>
                <connector localId="12" name="">
                  <position x="0" y="0" />
                  <connectionPointIn>
                    <connection refLocalId="13" formalParameter="GVL_Diag.MyTask" />
                  </connectionPointIn>
                </connector>
                <block localId="11" executionOrderId="4" typeName="FB_TaskDiag" instanceName="GVL_Diag.TaskDiag">
                  <position x="22" y="43" />
                  <inputVariables>
                    <variable formalParameter="TaskList">
                      <connectionPointIn>
                        <relPosition x="0" y="0" />
                        <connection refLocalId="12" />
                      </connectionPointIn>
                    </variable>
                  </inputVariables>
                  <inOutVariables />
                  <outputVariables>
                    <variable formalParameter="arTaskStatus">
                      <connectionPointOut>
                        <relPosition x="0" y="0" />
                        <expression />
                      </connectionPointOut>
                    </variable>
                  </outputVariables>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/cfccalltype" handleUnknown="implementation">
                      <CallType xmlns="">functionblock</CallType>
                    </data>
                  </addData>
                </block>
              </CFC>
            </data>
          </addData>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM POU_DIAG
VAR
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>ab42fa47-ac81-435c-8e9c-79697357473a</ObjectId>
          </data>
        </addData>
      </pou>
      <pou name="Test_ECDiag" pouType="program">
        <interface>
          <localVars>
            <variable name="TonTimeout">
              <type>
                <derived name="TON" />
              </type>
            </variable>
            <variable name="iState">
              <type>
                <INT />
              </type>
            </variable>
            <variable name="xGuiRestartEC">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> GUI Simulation Flags</xhtml>
              </documentation>
            </variable>
            <variable name="sECError">
              <type>
                <string />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                <InterfaceAsPlainText>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM Test_ECDiag
VAR
	
	TonTimeout : TON;
	iState : INT;
	// GUI Simulation Flags
	xGuiRestartEC : BOOL;
	sECError : STRING;
	
END_VAR
</xhtml>
                </InterfaceAsPlainText>
              </data>
            </addData>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
//----------------------------
// Call FUB EtherCat Diagnosis
//----------------------------
(*ECDiag(
		ECMaster := EtherCat_Master_Softmotion,  // Local EtherCAT Master instance
		ECSlaves := MyECSlaves					// Input from MyECSlaves
	  );

*)
//--------------------------------
// Check the status of EtherCAT 
//--------------------------------
CASE iState OF
	 
	// EC Master should be ready in 10 sec
	0: 	TonTimeOut(IN := TRUE,PT := T#10S);   
		IF TonTimeOut.Q THEN
			TonTimeOut(IN := FALSE);
			iState := 1000;  // -&gt; Error evaluation
 		END_IF
	 
		// EC Status ok ?
		IF ECDiag.arECStatus.xEC_OK THEN
			TonTimeOut(IN := FALSE);
			iState := 10;
		END_IF
	
		 
	// EtherCAt is running. Check if an error occurs. 
	10:	IF NOT ECDiag.arECStatus.xEC_OK THEN
			iState := 1000; // -&gt; Error evaluation
		END_IF	

	// Wait for a possible restart EC Master . In this case restart from GUI with variable xGuiRestart	 
	20:	 IF xGuiRestartEC  THEN
			xGuiRestartEC := FALSE;			
			EtherCat_Master_Softmotion.xRestart := TRUE;
			iState := 30;
		END_IF
		
	// Reset Restart Flag		
	30: EtherCat_Master_Softmotion.xRestart := FALSE;
		iState := 0;
	
			
	//  EC Error evaluation
	1000:  
		CASE ECDiag.arECStatus.ErrorID OF
			// Check Slaves. Possibly missing voltage of the regulator. Then restart with xGUIRestartEC
			ECDiagError.Missing_Slaves : iState := 20;
			// Check Slaves. Possibly missing voltage of the regulator. Then restart with xGUIRestartEC
			ECDiagError.Error_in_Slave : iState := 20; 
			// Critical Error in EtherCAT Stack. Check Hardware. 
			ECDiagError.EC_Master_Error: iState := 1000;  
			// replace wrong slave.  
			ECDiagError.Wrong_Slave_Detected : iState := 1000;
  		  ELSE
			// Unknown Error. only possible with a wrong enum list
		 END_CASE

END_CASE

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
            <BuildProperties>
              <ExcludeFromBuild>true</ExcludeFromBuild>
            </BuildProperties>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM Test_ECDiag
VAR
	
	TonTimeout : TON;
	iState : INT;
	// GUI Simulation Flags
	xGuiRestartEC : BOOL;
	sECError : STRING;
	
END_VAR
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>3170a540-6516-4e31-ab60-9f333675b64c</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Device">
        <resource name="Application">
          <task name="MainTask" interval="PT0.004S" priority="1">
            <pouInstance name="PLC_PRG" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#4ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>70a050e9-797d-4f16-b546-bc2d2cf7c97e</ObjectId>
              </data>
            </addData>
          </task>
          <task name="SoftMotion_PlanningTask" interval="PT0.002S" priority="15">
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#2ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>c9efd266-3262-4d70-ad58-3bd2346204b6</ObjectId>
              </data>
            </addData>
          </task>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PLC_PRG" pouType="program">
                <interface>
                  <localVars constant="true">
                    <variable name="uiNumOfWaypts">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="4" />
                      </initialValue>
                    </variable>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                        <InterfaceAsPlainText>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM PLC_PRG
VAR CONSTANT
  uiNumOfWaypts : UINT := 4;
END_VAR
VAR
  fbMachine : FB_machine(rAxisGrpRefSm3:=AppAxisGroup,
                         sGrpName:='AppAxisGroup',
                         sAxisNames:='A1,A2,A3,A4,A5,A6'); // comma delimted string

  diIndx          : DINT := 0;
  smcPosRef       : SM3_Robotics.SMC_POS_REF;
  stMoveDirParams : ST_moveDirParams;
  stMcMoveParams  : ST_mcMoveParams;

	fbMcMoveElem1 : FB_mcMoveElement;
	fbMcMoveElem2 : FB_mcMoveElement;
	fbMcMoveElem3 : FB_mcMoveElement;
	
	itfMcMoveElem : I_mcMoveElement;
  mcMoveLinkedList : COL.LinkedList;

  stHaltParams : ST_haltParams;

  xMotionFinished : BOOL;
  xHaltFinished   : BOOL;
	
	test : UDINT;
END_VAR
</xhtml>
                        </InterfaceAsPlainText>
                      </data>
                    </addData>
                  </localVars>
                  <localVars>
                    <variable name="fbMachine">
                      <type>
                        <derived name="FB_machine" />
                      </type>
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/inputassignments" handleUnknown="implementation">
                          <InputAssignments>
                            <InputAssignment>
                              <Name>rAxisGrpRefSm3</Name>
                              <Value>AppAxisGroup</Value>
                            </InputAssignment>
                            <InputAssignment>
                              <Name>sGrpName</Name>
                              <Value>'AppAxisGroup'</Value>
                            </InputAssignment>
                            <InputAssignment>
                              <Name>sAxisNames</Name>
                              <Value>'A1,A2,A3,A4,A5,A6'</Value>
                            </InputAssignment>
                          </InputAssignments>
                        </data>
                        <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                          <Attributes>
                            <Attribute Name="old_input_assignments" Value="" />
                          </Attributes>
                        </data>
                      </addData>
                    </variable>
                    <variable name="diIndx">
                      <type>
                        <DINT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> comma delimted string</xhtml>
                      </documentation>
                    </variable>
                    <variable name="smcPosRef">
                      <type>
                        <derived name="SM3_Robotics.SMC_POS_REF" />
                      </type>
                    </variable>
                    <variable name="stMoveDirParams">
                      <type>
                        <derived name="ST_moveDirParams" />
                      </type>
                    </variable>
                    <variable name="stMcMoveParams">
                      <type>
                        <derived name="ST_mcMoveParams" />
                      </type>
                    </variable>
                    <variable name="fbMcMoveElem1">
                      <type>
                        <derived name="FB_mcMoveElement" />
                      </type>
                    </variable>
                    <variable name="fbMcMoveElem2">
                      <type>
                        <derived name="FB_mcMoveElement" />
                      </type>
                    </variable>
                    <variable name="fbMcMoveElem3">
                      <type>
                        <derived name="FB_mcMoveElement" />
                      </type>
                    </variable>
                    <variable name="itfMcMoveElem">
                      <type>
                        <derived name="I_mcMoveElement" />
                      </type>
                    </variable>
                    <variable name="mcMoveLinkedList">
                      <type>
                        <derived name="COL.LinkedList" />
                      </type>
                    </variable>
                    <variable name="stHaltParams">
                      <type>
                        <derived name="ST_haltParams" />
                      </type>
                    </variable>
                    <variable name="xMotionFinished">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="xHaltFinished">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="test">
                      <type>
                        <UDINT />
                      </type>
                    </variable>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                        <InterfaceAsPlainText>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM PLC_PRG
VAR CONSTANT
  uiNumOfWaypts : UINT := 4;
END_VAR
VAR
  fbMachine : FB_machine(rAxisGrpRefSm3:=AppAxisGroup,
                         sGrpName:='AppAxisGroup',
                         sAxisNames:='A1,A2,A3,A4,A5,A6'); // comma delimted string

  diIndx          : DINT := 0;
  smcPosRef       : SM3_Robotics.SMC_POS_REF;
  stMoveDirParams : ST_moveDirParams;
  stMcMoveParams  : ST_mcMoveParams;

	fbMcMoveElem1 : FB_mcMoveElement;
	fbMcMoveElem2 : FB_mcMoveElement;
	fbMcMoveElem3 : FB_mcMoveElement;
	
	itfMcMoveElem : I_mcMoveElement;
  mcMoveLinkedList : COL.LinkedList;

  stHaltParams : ST_haltParams;

  xMotionFinished : BOOL;
  xHaltFinished   : BOOL;
	
	test : UDINT;
END_VAR
</xhtml>
                        </InterfaceAsPlainText>
                      </data>
                    </addData>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// POU_Depictor();
// POU_BoxProperties();
// POU_BasicMotion();

IF diIndx = 0 THEN
  FOR diIndx := 1 TO 3 BY 1 DO
    smcPosRef.a.a0 := DINT_TO_LREAL(diIndx + 1);
    smcPosRef.a.a1 := DINT_TO_LREAL(diIndx + 1);
    smcPosRef.a.a2 := DINT_TO_LREAL(diIndx + 1);
    smcPosRef.a.a3 := DINT_TO_LREAL(diIndx + 1);
    smcPosRef.a.a4 := DINT_TO_LREAL(diIndx + 1);
    smcPosRef.a.a5 := DINT_TO_LREAL(diIndx + 1);

    stMoveDirParams.smcPosRef := smcPosRef;
    stMoveDirParams.smcPtpTyp := SM3_Robotics.SMC_PTP_MOVEMENT_TYPE.Fast;
    stMoveDirParams.smcCrdSys := SM3_Robotics.SMC_COORD_SYSTEM.ACS;

    stMcMoveParams.eMcMotionFbType := E_mcMotionFbType.moveDirAbs;
    stMcMoveParams.stMoveDirParams := stMoveDirParams;

    IF diIndx = 1 THEN
      fbMcMoveElem1(stMcMoveParams:=stMcMoveParams,
                    uliMotionIndx:=DINT_TO_ULINT(diIndx + 1));

      itfMcMoveElem := fbMcMoveElem1;
    ELSIF diIndx = 2 THEN
      fbMcMoveElem2(stMcMoveParams:=stMcMoveParams,
                    uliMotionIndx:=DINT_TO_ULINT(diIndx + 1));

      itfMcMoveElem := fbMcMoveElem2;
    ELSIF diIndx = 3 THEN
      fbMcMoveElem3(stMcMoveParams:=stMcMoveParams,
                    uliMotionIndx:=DINT_TO_ULINT(diIndx + 1));

      itfMcMoveElem := fbMcMoveElem3;
    END_IF

    mcMoveLinkedList.AddElement(itfMcMoveElem);

    test := mcMoveLinkedList.CountElements();
  END_FOR
END_IF

fbMachine.METH_grpPwrOn();
fbMachine.METH_groupEnable();
fbMachine.METH_moveToPosition(mcMoveLinkedList:=mcMoveLinkedList,
                              xMotionFinished=&gt;xMotionFinished);

// IF diIndx2 = 1 THEN
//   fbMachine.METH_groupHalt(stHaltParams:=stHaltParams,
//                            xHaltFinished=&gt;xHaltFinished);
// 
//   IF xHaltFinished THEN
//     diIndx2 := diIndx2 + 1;
//   END_IF
// ELSE
//   IF xMotionFinished AND (diIndx2 &lt; UPPER_BOUND(arrstMcMoveParams, 1)) THEN
//     diIndx2 := diIndx2 + 1;
//   END_IF
// END_IF

// IF diIndx2 &gt;= UPPER_BOUND(arrstMcMoveParams, 1) THEN
//   fbMachine.METH_groupDisable();
//   fbMachine.METH_grpPwrOn();
// END_IF
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM PLC_PRG
VAR CONSTANT
  uiNumOfWaypts : UINT := 4;
END_VAR
VAR
  fbMachine : FB_machine(rAxisGrpRefSm3:=AppAxisGroup,
                         sGrpName:='AppAxisGroup',
                         sAxisNames:='A1,A2,A3,A4,A5,A6'); // comma delimted string

  diIndx          : DINT := 0;
  smcPosRef       : SM3_Robotics.SMC_POS_REF;
  stMoveDirParams : ST_moveDirParams;
  stMcMoveParams  : ST_mcMoveParams;

	fbMcMoveElem1 : FB_mcMoveElement;
	fbMcMoveElem2 : FB_mcMoveElement;
	fbMcMoveElem3 : FB_mcMoveElement;
	
	itfMcMoveElem : I_mcMoveElement;
  mcMoveLinkedList : COL.LinkedList;

  stHaltParams : ST_haltParams;

  xMotionFinished : BOOL;
  xHaltFinished   : BOOL;
	
	test : UDINT;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d9fe96a6-e980-4c8a-be55-25c58d25eccf</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="POU_Depictor" pouType="program">
                <interface>
                  <localVars>
                    <variable name="depictorCW40">
                      <type>
                        <derived name="CW40.Coboworx_Depictor_Data" />
                      </type>
                    </variable>
                    <variable name="depFrameTCP">
                      <type>
                        <derived name="DepictorBase.DepictorFrame" />
                      </type>
                    </variable>
                    <variable name="ActiveCoordSystem">
                      <type>
                        <derived name="SMC_COORD_SYSTEM" />
                      </type>
                      <initialValue>
                        <simpleValue value="SMC_COORD_SYSTEM.MCS" />
                      </initialValue>
                    </variable>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                        <InterfaceAsPlainText>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM POU_Depictor
VAR
  depictorCW40 : CW40.Coboworx_Depictor_Data;

  depFrameTCP       : DepictorBase.DepictorFrame;
  ActiveCoordSystem : SMC_COORD_SYSTEM := SMC_COORD_SYSTEM.MCS;
END_VAR
</xhtml>
                        </InterfaceAsPlainText>
                      </data>
                    </addData>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">depictorCW40(AxisGroup:=AppAxisGroup, axes=&gt;);
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM POU_Depictor
VAR
  depictorCW40 : CW40.Coboworx_Depictor_Data;

  depFrameTCP       : DepictorBase.DepictorFrame;
  ActiveCoordSystem : SMC_COORD_SYSTEM := SMC_COORD_SYSTEM.MCS;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5073d444-e4d2-4ba1-ad98-58a966c187c9</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="POU_BasicMotion" pouType="program">
                <interface>
                  <localVars>
                    <variable name="mcGrpReadActualPos">
                      <type>
                        <derived name="SM3_Robotics.MC_GroupReadActualPosition" />
                      </type>
                    </variable>
                    <variable name="mcGrpEnable">
                      <type>
                        <derived name="SM3_Robotics.MC_GroupEnable" />
                      </type>
                    </variable>
                    <variable name="smcGrpPower">
                      <type>
                        <derived name="SM3_Robotics.SMC_GroupPower" />
                      </type>
                    </variable>
                    <variable name="smcPosRef">
                      <type>
                        <derived name="SM3_Robotics.SMC_POS_REF" />
                      </type>
                    </variable>
                    <variable name="smcCrdSys">
                      <type>
                        <derived name="SM3_Robotics.SMC_COORD_SYSTEM" />
                      </type>
                    </variable>
                    <variable name="mcMoveLinAbs">
                      <type>
                        <derived name="SM3_Robotics.MC_MoveLinearAbsolute" />
                      </type>
                    </variable>
                    <variable name="smcPtpType">
                      <type>
                        <derived name="SM3_Robotics.SMC_PTP_MOVEMENT_TYPE" />
                      </type>
                    </variable>
                    <variable name="mcMoveDirAbs">
                      <type>
                        <derived name="SM3_Robotics.MC_MoveDirectAbsolute" />
                      </type>
                    </variable>
                    <variable name="xError">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="smcErrorId">
                      <type>
                        <derived name="SM3_Error.SMC_ERROR" />
                      </type>
                    </variable>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                        <InterfaceAsPlainText>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM POU_BasicMotion
VAR
  mcGrpReadActualPos : SM3_Robotics.MC_GroupReadActualPosition;

  mcGrpEnable : SM3_Robotics.MC_GroupEnable;
  smcGrpPower : SM3_Robotics.SMC_GroupPower;

  smcPosRef    : SM3_Robotics.SMC_POS_REF;
  smcCrdSys    : SM3_Robotics.SMC_COORD_SYSTEM;
  mcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  smcPtpType   : SM3_Robotics.SMC_PTP_MOVEMENT_TYPE;
  mcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;

  xError     : BOOL;
  smcErrorId : SM3_Error.SMC_ERROR;

  // 	test : SM3_Robotics.AXIS_GROUP_REF_SM3;
  // 	test2 : SM3_Basic.IAxisRef;
  // 	test3 : UDINT;
END_VAR
</xhtml>
                        </InterfaceAsPlainText>
                      </data>
                    </addData>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">mcGrpReadActualPos(AxisGroup:=AppAxisGroup,
                   Enable:=TRUE,
                   CoordSystem:=SMC_COORD_SYSTEM.MCS);

// test := AppAxisGroup;
// test2 := test.m_aAxes[0];
// test3 := test.m_nNumAxes;

IF NOT A1.bRegulatorRealState THEN
  smcGrpPower(AxisGroup:=AppAxisGroup,
              Enable:=TRUE,
              bRegulatorOn:=TRUE,
              bDriveStart:=TRUE,
              Error=&gt;xError,
              ErrorID=&gt;smcErrorId);
END_IF

// AppAxisGroup.m_state; SM3_Robotics.SMC_AXIS_GROUP_STATE

IF A1.bRegulatorRealState AND
   NOT mcGrpEnable.Done THEN
  mcGrpEnable(AxisGroup:=AppAxisGroup,
              Execute:=TRUE,
              Error=&gt;xError,
              ErrorID=&gt;smcErrorId);
END_IF

IF mcGrpEnable.Done AND
   A1.bRegulatorRealState THEN

  IF NOT mcMoveDirAbs.Done THEN
    smcCrdSys := SM3_Robotics.SMC_COORD_SYSTEM.ACS;

    smcPosRef.a.a0 := 1;
    smcPosRef.a.a1 := 1;
    smcPosRef.a.a2 := 1;
    smcPosRef.a.a3 := 1;
    smcPosRef.a.a4 := 1;
    smcPosRef.a.a5 := 1;

    mcMoveDirAbs(AxisGroup:=AppAxisGroup,
                 Execute:=TRUE,
                 Position:=smcPosRef,
                 MovementType:=smcPtpType,
                 CoordSystem:=smcCrdSys,
                 Error=&gt;xError,
                 ErrorID=&gt;smcErrorId);

    //   IF mcMoveDirAbs.Done THEN
    //     mcMoveDirAbs(AxisGroup:=AppAxisGroup,
    //                  Execute:=FALSE);
    //   END_IF
  ELSIF NOT xError THEN
    smcCrdSys := SM3_Robotics.SMC_COORD_SYSTEM.MCS;

    smcPosRef.c.X := POU_BoxProperties.PosX;
    smcPosRef.c.Y := POU_BoxProperties.PosY;
    smcPosRef.c.Z := POU_BoxProperties.PosZ;
    smcPosRef.c.A := 0;
    smcPosRef.c.B := 90;
    smcPosRef.c.C := 0;

    mcMoveLinAbs(AxisGroup:=AppAxisGroup,
                 Execute:=TRUE,
                 Position:=smcPosRef,
                 Velocity:=A1.fSWMaxVelocity,
                 Acceleration:=A1.fSWMaxAcceleration,
                 Deceleration:=A1.fSWMaxDeceleration,
                 Jerk:=A1.fSWMaxJerk,
                 CoordSystem:=smcCrdSys,
                 Error=&gt;xError,
                 ErrorID=&gt;smcErrorId);

    //   IF mcMoveLinAbs.Done THEN
    //     mcMoveLinAbs(AxisGroup:=AppAxisGroup,
    //                  Execute:=FALSE);
    //   END_IF
  END_IF

END_IF
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM POU_BasicMotion
VAR
  mcGrpReadActualPos : SM3_Robotics.MC_GroupReadActualPosition;

  mcGrpEnable : SM3_Robotics.MC_GroupEnable;
  smcGrpPower : SM3_Robotics.SMC_GroupPower;

  smcPosRef    : SM3_Robotics.SMC_POS_REF;
  smcCrdSys    : SM3_Robotics.SMC_COORD_SYSTEM;
  mcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute;
  smcPtpType   : SM3_Robotics.SMC_PTP_MOVEMENT_TYPE;
  mcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute;

  xError     : BOOL;
  smcErrorId : SM3_Error.SMC_ERROR;

  // 	test : SM3_Robotics.AXIS_GROUP_REF_SM3;
  // 	test2 : SM3_Basic.IAxisRef;
  // 	test3 : UDINT;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4e20f17a-2717-4b2d-a6f5-20a64bd3011c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="POU_BoxProperties" pouType="program">
                <interface>
                  <localVars>
                    <variable name="Length">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="Height">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="Width">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="PosX">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="750" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">The position is the box' center relative to the World Coordinate System, which is at the base of the robot!</xhtml>
                      </documentation>
                    </variable>
                    <variable name="PosY">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="PosZ">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="750" />
                      </initialValue>
                    </variable>
                    <addData>
                      <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                        <InterfaceAsPlainText>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM POU_BoxProperties
VAR
  Length, Height, Width : LREAL := 10;
  //The position is the box' center relative to the World Coordinate System, which is at the base of the robot!
  PosX : LREAL := 750;
  PosY : LREAL := 0;
  PosZ : LREAL := 750;
END_VAR
</xhtml>
                        </InterfaceAsPlainText>
                      </data>
                    </addData>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM POU_BoxProperties
VAR
  Length, Height, Width : LREAL := 10;
  //The position is the box' center relative to the World Coordinate System, which is at the base of the robot!
  PosX : LREAL := 750;
  PosY : LREAL := 0;
  PosZ : LREAL := 750;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>033325d6-e57a-4d51-bace-3b9de7566a63</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#SM3_Robotics" Namespace="SM3_Robotics" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Robotics, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_Robotics_Visu" Namespace="SM3_Robotics_Visu" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Robotics_Visu, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_Transformation" Namespace="TRAFO" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Transformation, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="Coboworx Transformation CW40, 0.0.0.2 (coboworx GmbH)" Namespace="CW40" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="#SM3_Basic" Namespace="SM3_Basic" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Basic, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_CNC" Namespace="SM3_CNC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_CNC, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.16.0 (System)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.15.0 (CAA Technical Workgroup)" />
                <Library Name="#CDS_MemMan" Namespace="CMM" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CDS_MemMan, 3.3.2.0 (3S - Smart Software Solutions GmbH)" />
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>162dff07-5ed5-45e7-9689-d8db7fba7cad</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>6255e7ab-359e-4cd0-a9f6-766560fedde5</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4096</Type>
                  <Id>0000 0001</Id>
                  <Version>3.5.16.40</Version>
                </DeviceIdentification>
                <Connector moduleType="256" interface="Common.PCI" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="769" interface="SafetyInterface" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="1278" interface="Common.SoftMotion.GeneralImplicit" connectorId="2">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet />
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations>
              <configuration name="SoftMotion General Axis Pool">
                <addData>
                  <data name="Device" handleUnknown="discard">
                    <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
                      <DeviceType>
                        <DeviceIdentification>
                          <Type>1249</Type>
                          <Id>0000 0001</Id>
                          <Version>4.9.0.0</Version>
                        </DeviceIdentification>
                        <Connector moduleType="1249" role="child" interface="Common.SoftMotion.GeneralImplicit" connectorId="1">
                          <HostParameterSet />
                        </Connector>
                        <Connector moduleType="1279" interface="Common.SoftMotion.General" connectorId="2" hostpath="1">
                          <HostParameterSet />
                        </Connector>
                        <DeviceParameterSet />
                      </DeviceType>
                    </Device>
                  </data>
                  <data name="configurations" handleUnknown="discard">
                    <configurations>
                      <configuration name="A1">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1024</Type>
                                  <Id>FFFF 0001</Id>
                                  <Version>4.0.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1024" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">0</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes offlineaccess="read" />
                                        <Value name="_x0031_040" visiblename="bVirtual" offlineaccess="read" desc="drive is simulated">TRUE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">100</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">185</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-185</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: scaling settings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">1</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">1</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>885ca2ca-48c4-4acb-84ce-53c95b0265d5</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="A2">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1024</Type>
                                  <Id>FFFF 0001</Id>
                                  <Version>4.0.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1024" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">1</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes offlineaccess="read" />
                                        <Value name="_x0031_040" visiblename="bVirtual" offlineaccess="read" desc="drive is simulated">TRUE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">100</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">185</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-185</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: scaling settings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">1</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">1</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>a59fe2f4-addc-48a9-a9fc-3978d8cacded</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="A3">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1024</Type>
                                  <Id>FFFF 0001</Id>
                                  <Version>4.0.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1024" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">2</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes offlineaccess="read" />
                                        <Value name="_x0031_040" visiblename="bVirtual" offlineaccess="read" desc="drive is simulated">TRUE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">100</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">185</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-185</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: scaling settings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">1</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">1</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>eeeb0fef-28b0-446a-8f0f-b1ebb847b256</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="A4">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1024</Type>
                                  <Id>FFFF 0001</Id>
                                  <Version>4.0.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1024" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">3</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes offlineaccess="read" />
                                        <Value name="_x0031_040" visiblename="bVirtual" offlineaccess="read" desc="drive is simulated">TRUE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">100</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">185</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-185</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: scaling settings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">1</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">1</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>e30587c8-5cfb-47c5-a5bc-35123859f771</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="A5">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1024</Type>
                                  <Id>FFFF 0001</Id>
                                  <Version>4.0.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1024" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">4</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes offlineaccess="read" />
                                        <Value name="_x0031_040" visiblename="bVirtual" offlineaccess="read" desc="drive is simulated">TRUE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">100</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">135</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-135</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: scaling settings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">1</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">1</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>6ff77118-379f-480c-8ccb-e8624d9656e9</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="A6">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1024</Type>
                                  <Id>FFFF 0001</Id>
                                  <Version>4.0.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1024" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">5</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes offlineaccess="read" />
                                        <Value name="_x0031_040" visiblename="bVirtual" offlineaccess="read" desc="drive is simulated">TRUE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">100</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">360</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-360</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: scaling settings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">1</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">1</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>d9b758a6-4a05-4833-b8d1-992aaf33b583</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                    </configurations>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>5fe26308-5112-4e3a-8633-aaf8ad62f9af</ObjectId>
                  </data>
                </addData>
              </configuration>
            </configurations>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>1e3f0770-e8ee-460f-9749-646eb848bbfe</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/globalvars" handleUnknown="implementation">
      <globalVars name="GVL_Diag">
        <variable name="ECDiag">
          <type>
            <derived name="FB_ECDiag" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Instance of Ethercat Diagnosis</xhtml>
          </documentation>
        </variable>
        <variable name="MyECSlaves">
          <type>
            <derived name="stECSlaves" />
          </type>
          <initialValue>
            <structValue>
              <value member="uiNoSlaves">
                <simpleValue value="10" />
              </value>
              <value member="arMyProductID">
                <arrayValue>
                  <value>
                    <simpleValue value="16#2CF2F" />
                  </value>
                  <value>
                    <simpleValue value="16#2D7A8" />
                  </value>
                  <value>
                    <simpleValue value="16#2ECAD" />
                  </value>
                  <value>
                    <simpleValue value="16#2ECAD" />
                  </value>
                  <value>
                    <simpleValue value="16#201" />
                  </value>
                  <value>
                    <simpleValue value="16#201" />
                  </value>
                  <value>
                    <simpleValue value="16#201" />
                  </value>
                  <value>
                    <simpleValue value="16#201" />
                  </value>
                  <value>
                    <simpleValue value="16#201" />
                  </value>
                  <value>
                    <simpleValue value="16#201" />
                  </value>
                </arrayValue>
              </value>
            </structValue>
          </initialValue>
        </variable>
        <variable name="AxisDiag">
          <type>
            <derived name="FB_AxisDiag" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Instance of Axis Diagnosis</xhtml>
          </documentation>
        </variable>
        <variable name="MyAxis">
          <type>
            <derived name="stAxis" />
          </type>
          <initialValue>
            <structValue>
              <value member="uiNoAxis">
                <simpleValue value="INT_TO_UINT(iNoConfigAxis)" />
              </value>
              <value member="arMyAxis">
                <arrayValue>
                  <value>
                    <simpleValue value="ADR(A1)" />
                  </value>
                  <value>
                    <simpleValue value="ADR(A2)" />
                  </value>
                  <value>
                    <simpleValue value="ADR(A3)" />
                  </value>
                  <value>
                    <simpleValue value="ADR(A4)" />
                  </value>
                </arrayValue>
              </value>
            </structValue>
          </initialValue>
        </variable>
        <variable name="GroupDiag">
          <type>
            <derived name="FB_GroupDiag" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Instance of Group Diagnosis</xhtml>
          </documentation>
        </variable>
        <variable name="SafetyIODiag1">
          <type>
            <derived name="FB_SafetyIODiag" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Instance of SafetyIO Diagnosis</xhtml>
          </documentation>
        </variable>
        <variable name="SafetyIODiag2">
          <type>
            <derived name="FB_SafetyIODiag" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Instance of SafetyIO Diagnosis</xhtml>
          </documentation>
        </variable>
        <variable name="TaskDiag">
          <type>
            <derived name="FB_TaskDiag" />
          </type>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Instance of Task Diagnosis</xhtml>
          </documentation>
        </variable>
        <variable name="MyTask">
          <type>
            <derived name="stTask" />
          </type>
          <initialValue>
            <structValue>
              <value member="sAppName">
                <simpleValue value="'Application'" />
              </value>
              <value member="Watchdog">
                <arrayValue>
                  <value>
                    <structValue>
                      <value member="Active">
                        <simpleValue value="TRUE" />
                      </value>
                      <value member="WDTime">
                        <simpleValue value="4000" />
                      </value>
                      <value member="Sensitivity">
                        <simpleValue value="2" />
                      </value>
                    </structValue>
                  </value>
                  <value>
                    <structValue>
                      <value member="Active">
                        <simpleValue value="TRUE" />
                      </value>
                      <value member="WDTime">
                        <simpleValue value="20000" />
                      </value>
                      <value member="Sensitivity">
                        <simpleValue value="2" />
                      </value>
                    </structValue>
                  </value>
                  <value>
                    <structValue>
                      <value member="Active">
                        <simpleValue value="FALSE" />
                      </value>
                    </structValue>
                  </value>
                </arrayValue>
              </value>
            </structValue>
          </initialValue>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">VAR_GLOBAL
	
	//-------------------
	// EtherCAT diagnosis
	//-------------------
	ECDiag : FB_ECDiag;	// Instance of Ethercat Diagnosis

	MyECSlaves : stECSlaves := // Input Values for EtherCAT Diagnosis 		
		(
			uiNoSlaves := 10,
			arMyProductID := 
			[
			16#0002CF2F,	// FIO_Buskoppler_16DI_16DO	
			16#0002D7A8,  	// Safety PLC
			16#0002ECAD,  	// Kuhnke_FIO_Safety_SDI16_SDO4_1
			16#0002ECAD,  	// Kuhnke_FIO_Safety_SDI16_SDO4_2
			16#00000201, 	// Synapticon Somanet
			16#00000201, 	// Synapticon Somanet
			16#00000201, 	// Synapticon Somanet
			16#00000201, 	// Synapticon Somanet
			16#00000201, 	// Synapticon Somanet
			16#00000201 	// Synapticon Somanet
			]
		);	

	//-------------------
	// Motion diagnosis
	//-------------------
	AxisDiag : FB_AxisDiag;// Instance of Axis Diagnosis

	MyAxis : stAxis := 		// Input Values for Axis Diagnosis 
		(
		uiNoAxis := INT_TO_UINT(iNoConfigAxis),		// Number of Axis in project	
		arMyAxis :=			// Pointer to Axis 
			[
			ADR(A1),
			ADR(A2),
			ADR(A3),
			ADR(A4)
			]
		);
	
	//-------------------
	// Group diagnosis
	//-------------------
	GroupDiag : FB_GroupDiag;// Instance of Group Diagnosis

	//-------------------
	// Safety diagnosis
	//-------------------
	SafetyIODiag1 : FB_SafetyIODiag;// Instance of SafetyIO Diagnosis
	SafetyIODiag2 : FB_SafetyIODiag;// Instance of SafetyIO Diagnosis
	
	//-------------------
	// Task diagnosis
	//-------------------
	TaskDiag : FB_TaskDiag ; // Instance of Task Diagnosis
	MyTask : stTask := 		// Input Values for Task Diagnosis 
		(
			sAppName := 'Application',
			Watchdog :=
			[
				(Active := TRUE,WDTime:= 4000,Sensitivity:=2),  // Watchdog EtherCAT Task 1
				(Active := TRUE,WDTime:= 20000,Sensitivity:=2), // Watchdog Planning Task 2
				(Active := FALSE)								// Watchdog Settings Task 3
			]			
		);

END_VAR</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>0f1e0ef9-df99-42cc-a8f2-3107dde64a45</ObjectId>
          </data>
        </addData>
      </globalVars>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/interface" handleUnknown="implementation">
      <Interface name="I_machineState" ObjectId="cba6b10c-8988-4c09-b775-bfcbf80fd6ed">
        <Methods>
          <Method name="METH_grpPwrOn" ObjectId="0c0119c9-5ce9-4423-9cc7-941094af9212">
            <interface />
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOn
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_grpPwrOff" ObjectId="1f9d3e51-76c9-497d-877b-2007ef42e8a9">
            <interface />
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_grpPwrOff
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_openGripper" ObjectId="416cd941-e274-458c-955c-86a1ec2663ab">
            <interface />
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_openGripper
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_groupHalt" ObjectId="089f35fc-e4c4-4511-a90b-7c02c370a90e">
            <interface>
              <inputVars>
                <variable name="stHaltParams">
                  <type>
                    <derived name="ST_haltParams" />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </inputVars>
              <outputVars>
                <variable name="xHaltFinished">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </outputVars>
            </interface>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupHalt
VAR_INPUT
  stHaltParams : ST_haltParams;
END_VAR
VAR_OUTPUT
  xHaltFinished : BOOL;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_closeGripper" ObjectId="e8c5d809-13ea-427c-ad27-c2f5aa2e6b65">
            <interface />
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_closeGripper
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_moveToPosition" ObjectId="dc30c83c-ef48-44c6-8b8c-ccb414e6ca8a">
            <interface>
              <inOutVars>
                <variable name="mcMoveLinkedList">
                  <type>
                    <derived name="COL.LinkedList" />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </inOutVars>
              <outputVars>
                <variable name="xMotionFinished">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </outputVars>
            </interface>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_moveToPosition
VAR_IN_OUT
  mcMoveLinkedList : COL.LinkedList;
END_VAR
VAR_OUTPUT
  xMotionFinished : BOOL;
END_VAR</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_groupEnable" ObjectId="4156f4fd-d436-432c-b3c8-bd4b850ef5bc">
            <interface />
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupEnable
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_groupDisable" ObjectId="ef5d2df7-09b6-46db-9cdc-674fc837ada7">
            <interface />
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_groupDisable
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
        </Methods>
        <InterfaceAsPlainText>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">INTERFACE I_machineState
</xhtml>
        </InterfaceAsPlainText>
        <addData />
      </Interface>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/interface" handleUnknown="implementation">
      <Interface name="I_mcMoveElement" ObjectId="b774fffb-aa01-4937-84b3-6ee51dae4b3e">
        <Methods>
          <Method name="METH_executeMcMove" ObjectId="a73afe89-3e2f-4edd-b43c-fae98f8db1d1">
            <interface>
              <inOutVars>
                <variable name="axisGrpRefSm3">
                  <type>
                    <derived name="SM3_Robotics.AXIS_GROUP_REF_SM3" />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_executeMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_OUTPUT
  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </inOutVars>
              <outputVars>
                <variable name="xDone">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <variable name="xBusy">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <variable name="xActive">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <variable name="xCmdAborted">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <variable name="xCmdAccepted">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <variable name="xError">
                  <type>
                    <BOOL />
                  </type>
                </variable>
                <variable name="smcError">
                  <type>
                    <derived name="SM3_Error.SMC_ERROR" />
                  </type>
                </variable>
                <variable name="smcMvmtId">
                  <type>
                    <derived name="SM3_Common.SMC_Movement_Id" />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_executeMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_OUTPUT
  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </outputVars>
            </interface>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_executeMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR
VAR_OUTPUT
  xDone        : BOOL;
  xBusy        : BOOL;
  xActive      : BOOL;
  xCmdAborted  : BOOL;
  xCmdAccepted : BOOL;
  xError       : BOOL;
  smcError     : SM3_Error.SMC_ERROR;
  smcMvmtId    : SM3_Common.SMC_Movement_Id;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_resetMcMove" ObjectId="9fe58782-ba37-4d78-b91f-813dfe6a8b95">
            <interface>
              <inOutVars>
                <variable name="axisGrpRefSm3">
                  <type>
                    <derived name="SM3_Robotics.AXIS_GROUP_REF_SM3" />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_resetMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </inOutVars>
            </interface>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_resetMcMove
VAR_IN_OUT
  axisGrpRefSm3 : SM3_Robotics.AXIS_GROUP_REF_SM3;
END_VAR</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
          <Method name="METH_setMcMoveParams" ObjectId="7c7335c8-3952-4572-b088-b601134181ad">
            <interface>
              <inputVars>
                <variable name="stMcMoveParams">
                  <type>
                    <derived name="ST_mcMoveParams" />
                  </type>
                </variable>
                <variable name="uliMotionIndx">
                  <type>
                    <ULINT />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
                    <InterfaceAsPlainText>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_setMcMoveParams
VAR_INPUT
  stMcMoveParams : ST_mcMoveParams;
  uliMotionIndx  : ULINT;
END_VAR
</xhtml>
                    </InterfaceAsPlainText>
                  </data>
                </addData>
              </inputVars>
            </interface>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">METHOD METH_setMcMoveParams
VAR_INPUT
  stMcMoveParams : ST_mcMoveParams;
  uliMotionIndx  : ULINT;
END_VAR
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Method>
        </Methods>
        <Properties>
          <Property name="PROP_mcMoveCrcAbs" ObjectId="5c6e07d8-de76-4715-a221-462794fadd76">
            <interface>
              <returnType>
                <derived name="SM3_Robotics.MC_MoveCircularAbsolute" />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_mcMoveCrcAbs : SM3_Robotics.MC_MoveCircularAbsolute
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
          <Property name="PROP_mcMoveCrcRel" ObjectId="4ff5137c-0b25-477d-b6dc-1db3cabdc19d">
            <interface>
              <returnType>
                <derived name="SM3_Robotics.MC_MoveCircularRelative" />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_mcMoveCrcRel : SM3_Robotics.MC_MoveCircularRelative
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
          <Property name="PROP_motionIndx" ObjectId="757fe568-e386-40cf-80cf-02cb7ecb8f98">
            <interface>
              <returnType>
                <ULINT />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_motionIndx : ULINT
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
          <Property name="PROP_stMcMoveParams" ObjectId="5a31d15b-f0ab-4a07-a6cd-e3b8c4eff120">
            <interface>
              <returnType>
                <derived name="ST_mcMoveParams" />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY PROP_stMcMoveParams : ST_mcMoveParams
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
          <Property name="PROP_mcMoveDirAbs" ObjectId="f3191ed1-928f-4b0c-83c4-a9ce7f20c357">
            <interface>
              <returnType>
                <derived name="SM3_Robotics.MC_MoveDirectAbsolute" />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_mcMoveDirAbs : SM3_Robotics.MC_MoveDirectAbsolute
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
          <Property name="PROP_mcMoveDirRel" ObjectId="2693b79b-c751-40b2-a1a9-c753effa7679">
            <interface>
              <returnType>
                <derived name="SM3_Robotics.MC_MoveDirectRelative" />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_mcMoveDirRel : SM3_Robotics.MC_MoveDirectRelative
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
          <Property name="PROP_mcMoveLinAbs" ObjectId="9ea14ec1-d981-4a21-bca5-c9f015d30bad">
            <interface>
              <returnType>
                <derived name="SM3_Robotics.MC_MoveLinearAbsolute" />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_mcMoveLinAbs : SM3_Robotics.MC_MoveLinearAbsolute
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
          <Property name="PROP_mcMoveLinRel" ObjectId="0d2d46f7-fd85-4c25-a5d8-ee6a4ad1dbd0">
            <interface>
              <returnType>
                <derived name="SM3_Robotics.MC_MoveLinearRelative" />
              </returnType>
            </interface>
            <GetAccessor>
              <InterfaceAsPlainText>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </InterfaceAsPlainText>
            </GetAccessor>
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROPERTY INTERNAL PROP_mcMoveLinRel : SM3_Robotics.MC_MoveLinearRelative
</xhtml>
            </InterfaceAsPlainText>
            <addData />
          </Property>
        </Properties>
        <Inheritance>
          <Extends>COL.IElement</Extends>
        </Inheritance>
        <InterfaceAsPlainText>
          <xhtml xmlns="http://www.w3.org/1999/xhtml">INTERFACE I_mcMoveElement EXTENDS COL.IElement
</xhtml>
        </InterfaceAsPlainText>
        <addData />
      </Interface>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
      <union name="U_lrealToRawLintBits">
        <variable name="lrVal">
          <type>
            <LREAL />
          </type>
        </variable>
        <variable name="liVal">
          <type>
            <LINT />
          </type>
        </variable>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">TYPE
  U_lrealToRawLintBits :
  UNION
    lrVal : LREAL;
    liVal : LINT;
  END_UNION
END_TYPE
</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>55d4ce1f-ca9e-4a59-936c-3aa7da35fd48</ObjectId>
          </data>
        </addData>
      </union>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="DepictorBase, 1.0.5.0 (3S - Smart Software Solutions GmbH)" Namespace="DepictorBase" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="Coboworx Transformation CW40, 0.0.0.2 (coboworx GmbH)" Namespace="CW40" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="#SM3_Robotics" Namespace="SM3_Robotics" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Robotics, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
        <Library Name="#SM3_Robotics_Visu" Namespace="SM3_Robotics_Visu" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Robotics_Visu, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
        <Library Name="#SM3_Transformation" Namespace="TRAFO" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Transformation, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
        <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, 3.5.5.0 (3S - Smart Software Solutions GmbH)" />
        <Library Name="#SM3_Basic" Namespace="SM3_Basic" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Basic, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
        <Library Name="#SM3_CNC" Namespace="SM3_CNC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_CNC, 4.10.0.0 (3S - Smart Software Solutions GmbH)" />
        <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.16.0 (System)" />
        <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
        <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.15.0 (CAA Technical Workgroup)" />
        <Library Name="Test Manager IEC Unit Test, 4.1.0.0 (Intern)" Namespace="TM" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Standard, * (System)" />
        <Library Name="Element Collections, 3.5.16.0 (3S - Smart Software Solutions GmbH)" Namespace="COL" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
        <Library Name="#IecSfc" Namespace="IecSfc" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecSfc, 3.4.2.0 (System)" />
        <Library Name="#Analyzation" Namespace="Analyzation" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Analyzation, 3.5.2.0 (System)">
          <Parameters>
            <Parameter Name="TABLE_UPPER_BOUND" Value="15" />
            <Parameter Name="STRING_LENGTH_EXP" Value="255" />
            <Parameter Name="STRING_LENGTH_ADDRESS" Value="20" />
            <Parameter Name="STRING_LENGTH_COMMENT" Value="255" />
            <Parameter Name="STRING_LENGTH_OUTSTRING" Value="255" />
            <Parameter Name="TABLE_SHOW_VALID_ITEMS" Value="FALSE" />
          </Parameters>
        </Library>
        <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 3.5.16.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 3.5.16.30 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#system_visuinputs" Namespace="visuinputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="visuinputs, 3.5.16.30 (system)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>66a32fb8-f3b9-4287-a304-66fc4bf29891</ObjectId>
          </data>
        </addData>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Device" ObjectId="1e3f0770-e8ee-460f-9749-646eb848bbfe">
          <Object Name="Application" ObjectId="6255e7ab-359e-4cd0-a9f6-766560fedde5">
            <Object Name="Library Manager" ObjectId="162dff07-5ed5-45e7-9689-d8db7fba7cad" />
            <Object Name="PLC_PRG" ObjectId="d9fe96a6-e980-4c8a-be55-25c58d25eccf" />
            <Object Name="MainTask" ObjectId="70a050e9-797d-4f16-b546-bc2d2cf7c97e" />
            <Object Name="SoftMotion_PlanningTask" ObjectId="c9efd266-3262-4d70-ad58-3bd2346204b6" />
            <Folder Name="Depictor">
              <Object Name="POU_Depictor" ObjectId="5073d444-e4d2-4ba1-ad98-58a966c187c9" />
            </Folder>
            <Folder Name="BasicMotion">
              <Object Name="POU_BasicMotion" ObjectId="4e20f17a-2717-4b2d-a6f5-20a64bd3011c" />
            </Folder>
            <Folder Name="Box properties">
              <Object Name="POU_BoxProperties" ObjectId="033325d6-e57a-4d51-bace-3b9de7566a63" />
            </Folder>
          </Object>
          <Object Name="SoftMotion General Axis Pool" ObjectId="5fe26308-5112-4e3a-8633-aaf8ad62f9af">
            <Object Name="A1" ObjectId="885ca2ca-48c4-4acb-84ce-53c95b0265d5" />
            <Object Name="A2" ObjectId="a59fe2f4-addc-48a9-a9fc-3978d8cacded" />
            <Object Name="A3" ObjectId="eeeb0fef-28b0-446a-8f0f-b1ebb847b256" />
            <Object Name="A4" ObjectId="e30587c8-5cfb-47c5-a5bc-35123859f771" />
            <Object Name="A5" ObjectId="6ff77118-379f-480c-8ccb-e8624d9656e9" />
            <Object Name="A6" ObjectId="d9b758a6-4a05-4833-b8d1-992aaf33b583" />
          </Object>
        </Object>
        <Object Name="Library Manager" ObjectId="66a32fb8-f3b9-4287-a304-66fc4bf29891" />
        <Folder Name="Logging">
          <Object Name="FB_logAdd" ObjectId="421581cc-c927-4310-98e1-1443e01a5bca">
            <Object Name="METH_appendLog" ObjectId="c3fa7f96-6085-45fd-a113-d56efcbed9fc" />
            <Object Name="METH_printAppendedLogs" ObjectId="43e971fb-a7a2-4f4e-acd9-60598ae9927b" />
            <Object Name="FB_Init" ObjectId="2de5fc70-5824-4784-b7fb-c50dc5b035ef" />
            <Object Name="METH_appendTargetPositionLogs" ObjectId="b44fb45a-e7b0-41c5-bddd-4d767e8f7b29" />
            <Object Name="METH_appendGrpStatusLog" ObjectId="6f33768a-0328-4b4f-aad4-389210308946" />
            <Object Name="METH_printError" ObjectId="9f53ed75-6a90-4ffd-80cd-65660f889985" />
            <Object Name="METH_appendStatusLogs" ObjectId="44b30e6c-85a2-468a-8f64-e76456434f5d" />
            <Object Name="METH_appendAxisStatusLog" ObjectId="9ee6c8cb-5fa2-410b-8828-a0fec9e1f102" />
            <Object Name="METH_appendCurrentPositionLogs" ObjectId="9e10e3ce-4a9e-438f-a549-8f91b8895dac" />
          </Object>
          <Object Name="F_getCommaDelimitedName" ObjectId="b7f7aa64-6f9a-4185-b6c4-c0e694ab6bd0" />
        </Folder>
        <Folder Name="State Pattern">
          <Folder Name="Linked List">
            <Object Name="I_mcMoveElement" ObjectId="b774fffb-aa01-4937-84b3-6ee51dae4b3e">
              <Object Name="PROP_mcMoveCrcAbs" ObjectId="5c6e07d8-de76-4715-a221-462794fadd76" />
              <Object Name="PROP_mcMoveCrcRel" ObjectId="4ff5137c-0b25-477d-b6dc-1db3cabdc19d" />
              <Object Name="PROP_motionIndx" ObjectId="757fe568-e386-40cf-80cf-02cb7ecb8f98" />
              <Object Name="PROP_stMcMoveParams" ObjectId="5a31d15b-f0ab-4a07-a6cd-e3b8c4eff120" />
              <Object Name="PROP_mcMoveDirAbs" ObjectId="f3191ed1-928f-4b0c-83c4-a9ce7f20c357" />
              <Object Name="PROP_mcMoveDirRel" ObjectId="2693b79b-c751-40b2-a1a9-c753effa7679" />
              <Object Name="PROP_mcMoveLinAbs" ObjectId="9ea14ec1-d981-4a21-bca5-c9f015d30bad" />
              <Object Name="PROP_mcMoveLinRel" ObjectId="0d2d46f7-fd85-4c25-a5d8-ee6a4ad1dbd0" />
              <Object Name="METH_executeMcMove" ObjectId="a73afe89-3e2f-4edd-b43c-fae98f8db1d1" />
              <Object Name="METH_resetMcMove" ObjectId="9fe58782-ba37-4d78-b91f-813dfe6a8b95" />
              <Object Name="METH_setMcMoveParams" ObjectId="7c7335c8-3952-4572-b088-b601134181ad" />
            </Object>
            <Object Name="FB_mcMoveElement" ObjectId="c6c67520-9c79-437f-a1d1-b3003bc121ce">
              <Object Name="ElementHashCode" ObjectId="3acaf4e7-efb7-4391-ae27-fec2970265b2" />
              <Object Name="ElementCompareTo" ObjectId="3cb7c9ce-63e0-4652-bfe6-5b423fd2153a" />
              <Object Name="ElementEquals" ObjectId="395440b1-8664-4bf2-9d38-d22372b8dece" />
              <Object Name="PROP_mcMoveCrcAbs" ObjectId="7eb593eb-9680-48c7-8dc3-43a27758cae7" />
              <Object Name="PROP_motionIndx" ObjectId="5b5c4e6c-cd7c-4ec9-b287-38a29e0fa084" />
              <Object Name="METH_mcMoveCrcAbsEquals" ObjectId="10d8b6de-0623-4a54-ad2d-bdf5beed235e" />
              <Object Name="METH_mcMoveDirAbsEquals" ObjectId="3b0da0aa-1d26-4a5b-a6ea-10c437abe000" />
              <Object Name="PROP_mcMoveCrcRel" ObjectId="dc89886e-d332-41ec-b943-c4c467a39d8e" />
              <Object Name="METH_stMoveDirParamsHashCode" ObjectId="e8ab7f04-2347-488a-862f-402ab735a3f1" />
              <Object Name="METH_mcMoveDirRelEquals" ObjectId="2b1283da-b2a4-48aa-8d91-1d234c1b9899" />
              <Object Name="METH_mcMoveCrcRelEquals" ObjectId="ad65def5-415a-425b-ad84-5fd915ae232c" />
              <Object Name="METH_mcMoveLinAbsEquals" ObjectId="21695f18-71ba-4e1a-ace8-69012b29e27e" />
              <Object Name="PROP_stMcMoveParams" ObjectId="fd620805-7aba-4511-a581-e401daecf8ff" />
              <Object Name="METH_mcMoveLinRelEquals" ObjectId="5f7b2272-50ed-4f01-a50b-bf8ec85503e5" />
              <Object Name="PROP_mcMoveDirAbs" ObjectId="97e2539d-0ce0-4751-95b3-45d751206ca3" />
              <Object Name="PROP_mcMoveDirRel" ObjectId="8604a7e8-caa3-4968-9477-1f2cda94e756" />
              <Object Name="PROP_mcMoveLinAbs" ObjectId="7d54a191-a850-4911-962f-9084027ff2b0" />
              <Object Name="PROP_mcMoveLinRel" ObjectId="0860cbed-16d2-4031-9bf0-121baeae3b84" />
              <Object Name="METH_mcMoveCrcAbsHashCode" ObjectId="06ead029-dfe0-48cc-9454-6ff0aa0aa51a" />
              <Object Name="METH_stMoveCrcParamsEquals" ObjectId="027891c0-b0b5-4570-ad04-19487438b945" />
              <Object Name="METH_stMoveDirParamsEquals" ObjectId="f578e76d-3049-46fb-81ce-208cf8bd829a" />
              <Object Name="METH_stMoveLinParamsEquals" ObjectId="45fc8f56-53d3-49e7-9e1d-6af32ef4cc1d" />
              <Object Name="METH_stMoveCrcParamsHashCode" ObjectId="f1a5a169-e71d-4e1e-90b7-ea5c904c2caf" />
              <Object Name="METH_stMoveLinParamsHashCode" ObjectId="f2c7975f-7bbd-4094-ab64-f1f17db82408" />
              <Object Name="METH_mcMoveCrcRelHashCode" ObjectId="b80236d4-35e7-4b30-b750-a70703d0d6bb" />
              <Object Name="METH_mcMoveDirAbsHashCode" ObjectId="969c1d77-79d7-4d60-aa1c-8febea4712c9" />
              <Object Name="METH_mcMoveDirRelHashCode" ObjectId="817c8530-46d6-49a4-ae14-c083fd9fa511" />
              <Object Name="METH_mcMoveLinAbsHashCode" ObjectId="6021e1d9-0359-4f82-a37a-e29656180c02" />
              <Object Name="METH_mcMoveLinRelHashCode" ObjectId="693a3a1c-cdcd-4c92-9283-982230d560a3" />
              <Object Name="METH_executeMcMove" ObjectId="6ef6d6d5-e31a-442b-8aca-001528af35a5" />
              <Object Name="METH_resetMcMove" ObjectId="48c7ef8a-e1d1-481b-9a2e-2173adf60ef2" />
              <Object Name="FB_reinit" ObjectId="a3b03c9e-d78b-4d7a-b477-6c0cff67164b" />
              <Object Name="METH_setMcMoveParams" ObjectId="312531d5-5d6b-4c72-b7d8-ef22696f77c5" />
            </Object>
            <Object Name="F_lrealToLintBits" ObjectId="3c2baf39-e60f-469e-85ab-c039248e89fb" />
            <Object Name="U_lrealToRawLintBits" ObjectId="55d4ce1f-ca9e-4a59-936c-3aa7da35fd48" />
          </Folder>
          <Object Name="I_machineState" ObjectId="cba6b10c-8988-4c09-b775-bfcbf80fd6ed">
            <Object Name="METH_grpPwrOn" ObjectId="0c0119c9-5ce9-4423-9cc7-941094af9212" />
            <Object Name="METH_grpPwrOff" ObjectId="1f9d3e51-76c9-497d-877b-2007ef42e8a9" />
            <Object Name="METH_openGripper" ObjectId="416cd941-e274-458c-955c-86a1ec2663ab" />
            <Object Name="METH_groupHalt" ObjectId="089f35fc-e4c4-4511-a90b-7c02c370a90e" />
            <Object Name="METH_closeGripper" ObjectId="e8c5d809-13ea-427c-ad27-c2f5aa2e6b65" />
            <Object Name="METH_moveToPosition" ObjectId="dc30c83c-ef48-44c6-8b8c-ccb414e6ca8a" />
            <Object Name="METH_groupEnable" ObjectId="4156f4fd-d436-432c-b3c8-bd4b850ef5bc" />
            <Object Name="METH_groupDisable" ObjectId="ef5d2df7-09b6-46db-9cdc-674fc837ada7" />
          </Object>
          <Folder Name="End States">
            <Object Name="FB_poweredOnState" ObjectId="6e899673-9a22-4a07-9d1b-33e962512a2c" />
            <Object Name="FB_abstractEndMachineState" ObjectId="a5b00c33-ee02-4460-b3bf-c9eed86ac39f">
              <Object Name="METH_groupEnable" ObjectId="9f761a32-dc17-423a-aca9-e4cdd0cad41b" />
              <Object Name="METH_grpPwrOn" ObjectId="301f872d-4101-47eb-a151-e7a8e8cbb242" />
              <Object Name="METH_grpPwrOff" ObjectId="0541f504-a28d-4e55-986f-6034a94d20a0" />
              <Object Name="METH_openGripper" ObjectId="6a068ccd-7e03-4ecc-ab34-9f191e0d6976" />
              <Object Name="METH_groupHalt" ObjectId="53090d1e-fa25-488d-b371-d1d08ed85515" />
              <Object Name="METH_closeGripper" ObjectId="18f1eb08-07b8-4cf2-b66c-e1811cf1e550" />
              <Object Name="METH_moveToPosition" ObjectId="377b106b-f38e-4f66-994c-b066feabb082" />
              <Object Name="METH_groupDisable" ObjectId="a74d9670-d265-4381-888d-97ffb620dc8f" />
            </Object>
            <Object Name="FB_poweredOffState" ObjectId="7e85f05e-5dcc-42dc-be2a-5db1ac95ddf2" />
            <Object Name="FB_enabledAxesState" ObjectId="e4669700-97a6-46ed-9dae-2d3c71248dee" />
            <Object Name="FB_disabledAxesState" ObjectId="5c7f5263-ea57-439f-860f-6132097873ed" />
            <Object Name="FB_movedToPositionState" ObjectId="13aa5d6e-3e02-42da-be1f-79465c82404c" />
            <Object Name="FB_haltedState" ObjectId="13bc6b55-0898-4d43-b548-ccaccd0f5d88" />
          </Folder>
          <Folder Name="Interim States">
            <Object Name="FB_abstractInterimMachineState" ObjectId="fe4c1232-1cd8-4675-88c8-02180d7ebc18">
              <Object Name="METH_groupEnable" ObjectId="e47b4ba1-63e2-4c1f-9fb2-80bb173e7e4b" />
              <Object Name="METH_openGripper" ObjectId="be00b2b4-aab8-4278-a5d0-f34f4e1f7cee" />
              <Object Name="METH_groupHalt" ObjectId="a54db6dd-4aa8-4509-837e-1457310f9864" />
              <Object Name="METH_grpPwrOff" ObjectId="1ca5bc0a-2100-412b-bf45-9eb88e171c0d" />
              <Object Name="METH_grpPwrOn" ObjectId="c35311d7-4da0-4e6c-a83a-1904d330a535" />
              <Object Name="METH_closeGripper" ObjectId="ca5539e2-e23c-4e4f-8d00-94d86a3160c5" />
              <Object Name="METH_moveToPosition" ObjectId="2737c22c-77f9-4036-8764-c174aa183a1f" />
              <Object Name="METH_groupDisable" ObjectId="99181c6f-2e30-47d1-bd24-c800a8e4e2ec" />
            </Object>
            <Object Name="FB_poweringOnState" ObjectId="20a9ba4d-4bb5-420d-8f04-11ad06ccd218" />
            <Object Name="FB_poweringOffState" ObjectId="effbe06d-c124-4817-8cb9-1ed377d5362e" />
            <Object Name="FB_enablingAxesState" ObjectId="6dca4347-01db-424d-92d3-d303fd40e5d3" />
            <Object Name="FB_disablingAxesState" ObjectId="bc0257cd-d6e8-4740-869c-3d7e58905b2d" />
            <Object Name="FB_movingToPositionState" ObjectId="320003f0-0ae0-45bf-9ab6-88539f217e39" />
            <Object Name="FB_haltingState" ObjectId="a74398c2-cb42-4897-83eb-5188ce9a37a6" />
          </Folder>
          <Object Name="FB_abstractMachineState" ObjectId="8f15de99-5b90-4b3d-a2ec-7f5dede47f72">
            <Object Name="FB_Init" ObjectId="1db8717c-ca7a-4079-9122-be25f563b16f" />
            <Object Name="METH_printInfo" ObjectId="2c23291e-496f-438b-bdf0-0d4b9c515965" />
            <Object Name="METH_printSmcError" ObjectId="20a2786b-8620-470d-9acc-b82e8b3044e7" />
            <Object Name="METH_appendStatusLogs" ObjectId="05e2e248-2e7b-4e11-abb3-1205675c2a79" />
            <Object Name="METH_appendInfoLog" ObjectId="c65408c0-484d-4b7b-94e3-d1ca732d287c" />
            <Object Name="METH_appendTargetPositionLogs" ObjectId="8548beb8-178a-468d-ba17-af0abccf2afd" />
            <Object Name="METH_appendStateFbLog" ObjectId="7dea6cb5-d068-41c9-95c0-7d4243e1ddd9" />
            <Object Name="METH_appendCurrentPositionLogs" ObjectId="76c7ff3f-195b-417f-b95b-45a7885bb56b" />
          </Object>
          <Object Name="FB_machine" ObjectId="0a5d03ba-3f6b-42ad-b3ce-1935a74d83a6">
            <Object Name="PROP_fbLogAddPointer" ObjectId="6a197efa-a675-4c80-97e3-33b55a85028b" />
            <Object Name="METH_setState" ObjectId="0f8fd884-c6c3-45cc-9fb6-50bdb341c170" />
            <Object Name="PROP_poweringOnState" ObjectId="436cb421-48ec-4e24-93bc-a9185357e948" />
            <Object Name="PROP_poweredOnState" ObjectId="c5a26ea8-3a91-4ddb-ad81-8f65ac783780" />
            <Object Name="PROP_axisGroupPointer" ObjectId="7a29e5ae-58e1-4aa6-949d-2c478e953ed4" />
            <Object Name="PROP_poweredOffState" ObjectId="0392e298-daa9-4d97-a9e2-511a44d21d55" />
            <Object Name="METH_groupEnable" ObjectId="9be31037-13dd-40bf-9c45-1f8cbc4d092e" />
            <Object Name="FB_Init" ObjectId="063bcecb-302e-431d-9890-907512dadcf6" />
            <Object Name="PROP_poweringOffState" ObjectId="a4ed17f2-44db-44e6-991c-9223a9d0cab8" />
            <Object Name="PROP_enabledAxesState" ObjectId="c495c546-6bf6-4f52-b7b7-109f741269d8" />
            <Object Name="PROP_enablingAxesState" ObjectId="907896e7-75e3-4bb2-b747-f2bcc48d1bce" />
            <Object Name="PROP_disabledAxesState" ObjectId="beb8fe50-4dc4-461d-8090-4e061bdc2d5b" />
            <Object Name="PROP_disablingAxesState" ObjectId="5f3586e5-6c90-4822-9189-a5fa263c26e2" />
            <Object Name="PROP_movedToPositionState" ObjectId="488cb3f3-ce1f-47df-bbd4-0f342ee04658" />
            <Object Name="PROP_movingToPositionState" ObjectId="2973739d-5c2c-4eb2-86b4-b4c236cf7f09" />
            <Object Name="METH_groupDisable" ObjectId="63b21f67-3b88-4e96-aff5-a3b01ec5a4a0" />
            <Object Name="METH_grpPwrOn" ObjectId="96d8cb53-ef23-4b59-991f-54d06c5c8a5e" />
            <Object Name="METH_grpPwrOff" ObjectId="014e17b5-6183-4674-b116-7a7dac00c407" />
            <Object Name="METH_moveToPosition" ObjectId="72b84b22-5e3c-46c3-a257-c3eddf72cb9b" />
            <Object Name="PROP_haltingState" ObjectId="eb83ce06-7ecc-4edb-ab43-26941fa13702" />
            <Object Name="PROP_haltedState" ObjectId="0344df03-5fb1-4486-bb7d-d125401b3a52" />
            <Object Name="METH_groupHalt" ObjectId="ec26c4ba-20f5-4d18-830a-dcdd312047e6" />
          </Object>
          <Object Name="ST_methConfig" ObjectId="995704e5-cbcf-40bb-b9b8-58540a078467" />
          <Folder Name="Motion Parameters">
            <Object Name="ST_mcMoveParams" ObjectId="7cad8640-1564-40ab-9401-62c9c7ad8b9f" />
            <Object Name="E_mcMotionFbType" ObjectId="294a1bab-2869-478d-a236-ea3fbb8e5ed4" />
            <Object Name="ST_moveDirParams" ObjectId="69ee6caf-0372-460e-8169-16a69e452b74" />
            <Object Name="ST_haltParams" ObjectId="9e8adc96-1057-4dab-8b67-ed5d85cc2666" />
            <Object Name="ST_moveCrcParams" ObjectId="1e918723-96e8-47b8-bdba-3ced8b04d23a" />
            <Object Name="ST_moveLinParams" ObjectId="77a2e507-b66e-4687-ad62-86007391288c" />
          </Folder>
        </Folder>
        <Object Name="T_MaxString" ObjectId="6da32125-b8c2-452a-aeac-fc9db862e89c" />
        <Folder Name="Test">
          <Object Name="testFBD" ObjectId="6741df6e-f153-4875-be74-c0de9e72f88e" />
          <Object Name="testLD" ObjectId="df74a129-65e9-4208-8fe4-dbad8020dbd0" />
          <Object Name="testSFC" ObjectId="02319c5f-a920-49ec-86ef-9847583d27aa" />
          <Object Name="testCFC" ObjectId="ce78240f-100c-493c-a0df-99e2556040d0" />
        </Folder>
        <Folder Name="Test_Basic_Stuff">
          <Object Name="GVL_Diag" ObjectId="0f1e0ef9-df99-42cc-a8f2-3107dde64a45" />
          <Object Name="POU_DIAG" ObjectId="ab42fa47-ac81-435c-8e9c-79697357473a" />
          <Object Name="Test_ECDiag" ObjectId="3170a540-6516-4e31-ab60-9f333675b64c" />
        </Folder>
        <Object Name="Project Information" ObjectId="11c0fc3a-9bcf-4dd8-ac38-efb93363e521" />
      </ProjectStructure>
    </data>
  </addData>
</project>